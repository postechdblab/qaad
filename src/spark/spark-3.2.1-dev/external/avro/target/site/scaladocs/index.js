Index.PACKAGES = {"org.apache.spark.sql.v2" : [], "org.apache.spark" : [], "org.apache" : [], "org.apache.spark.sql.avro" : [{"name" : "org.apache.spark.sql.avro.functions", "shortDescription" : "", "object" : "org\/apache\/spark\/sql\/avro\/functions$.html", "members_object" : [{"label" : "to_avro", "tail" : "(data: Column, jsonFormatSchema: String): Column", "member" : "org.apache.spark.sql.avro.functions.to_avro", "link" : "org\/apache\/spark\/sql\/avro\/functions$.html#to_avro(data:org.apache.spark.sql.Column,jsonFormatSchema:String):org.apache.spark.sql.Column", "kind" : "def"}, {"label" : "to_avro", "tail" : "(data: Column): Column", "member" : "org.apache.spark.sql.avro.functions.to_avro", "link" : "org\/apache\/spark\/sql\/avro\/functions$.html#to_avro(data:org.apache.spark.sql.Column):org.apache.spark.sql.Column", "kind" : "def"}, {"label" : "from_avro", "tail" : "(data: Column, jsonFormatSchema: String, options: Map[String, String]): Column", "member" : "org.apache.spark.sql.avro.functions.from_avro", "link" : "org\/apache\/spark\/sql\/avro\/functions$.html#from_avro(data:org.apache.spark.sql.Column,jsonFormatSchema:String,options:java.util.Map[String,String]):org.apache.spark.sql.Column", "kind" : "def"}, {"label" : "from_avro", "tail" : "(data: Column, jsonFormatSchema: String): Column", "member" : "org.apache.spark.sql.avro.functions.from_avro", "link" : "org\/apache\/spark\/sql\/avro\/functions$.html#from_avro(data:org.apache.spark.sql.Column,jsonFormatSchema:String):org.apache.spark.sql.Column", "kind" : "def"}, {"label" : "synchronized", "tail" : "(arg0: ⇒ T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "org\/apache\/spark\/sql\/avro\/functions$.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "org\/apache\/spark\/sql\/avro\/functions$.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "org\/apache\/spark\/sql\/avro\/functions$.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "org\/apache\/spark\/sql\/avro\/functions$.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "org\/apache\/spark\/sql\/avro\/functions$.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "org\/apache\/spark\/sql\/avro\/functions$.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "org\/apache\/spark\/sql\/avro\/functions$.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "org\/apache\/spark\/sql\/avro\/functions$.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "org\/apache\/spark\/sql\/avro\/functions$.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "org\/apache\/spark\/sql\/avro\/functions$.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "org\/apache\/spark\/sql\/avro\/functions$.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "org\/apache\/spark\/sql\/avro\/functions$.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "org\/apache\/spark\/sql\/avro\/functions$.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "org\/apache\/spark\/sql\/avro\/functions$.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.equals", "link" : "org\/apache\/spark\/sql\/avro\/functions$.html#equals(x$1:Any):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "org\/apache\/spark\/sql\/avro\/functions$.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_]", "member" : "scala.AnyRef.getClass", "link" : "org\/apache\/spark\/sql\/avro\/functions$.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "org\/apache\/spark\/sql\/avro\/functions$.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "org\/apache\/spark\/sql\/avro\/functions$.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "kind" : "object"}, {"name" : "org.apache.spark.sql.avro.SchemaConverters", "shortDescription" : "This object contains method that are used to convert sparkSQL schemas to avro schemas and viceversa.", "object" : "org\/apache\/spark\/sql\/avro\/SchemaConverters$.html", "members_object" : [{"label" : "toAvroType", "tail" : "(catalystType: DataType, nullable: Boolean, recordName: String, nameSpace: String): Schema", "member" : "org.apache.spark.sql.avro.SchemaConverters.toAvroType", "link" : "org\/apache\/spark\/sql\/avro\/SchemaConverters$.html#toAvroType(catalystType:org.apache.spark.sql.types.DataType,nullable:Boolean,recordName:String,nameSpace:String):org.apache.avro.Schema", "kind" : "def"}, {"label" : "toSqlType", "tail" : "(avroSchema: Schema): SchemaType", "member" : "org.apache.spark.sql.avro.SchemaConverters.toSqlType", "link" : "org\/apache\/spark\/sql\/avro\/SchemaConverters$.html#toSqlType(avroSchema:org.apache.avro.Schema):org.apache.spark.sql.avro.SchemaConverters.SchemaType", "kind" : "def"}, {"label" : "SchemaType", "tail" : "", "member" : "org.apache.spark.sql.avro.SchemaConverters.SchemaType", "link" : "org\/apache\/spark\/sql\/avro\/SchemaConverters$.html#SchemaTypeextendsProductwithSerializable", "kind" : "case class"}, {"label" : "synchronized", "tail" : "(arg0: ⇒ T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "org\/apache\/spark\/sql\/avro\/SchemaConverters$.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "org\/apache\/spark\/sql\/avro\/SchemaConverters$.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "org\/apache\/spark\/sql\/avro\/SchemaConverters$.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "org\/apache\/spark\/sql\/avro\/SchemaConverters$.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "org\/apache\/spark\/sql\/avro\/SchemaConverters$.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "org\/apache\/spark\/sql\/avro\/SchemaConverters$.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "org\/apache\/spark\/sql\/avro\/SchemaConverters$.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "org\/apache\/spark\/sql\/avro\/SchemaConverters$.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "org\/apache\/spark\/sql\/avro\/SchemaConverters$.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "org\/apache\/spark\/sql\/avro\/SchemaConverters$.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "org\/apache\/spark\/sql\/avro\/SchemaConverters$.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "org\/apache\/spark\/sql\/avro\/SchemaConverters$.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "org\/apache\/spark\/sql\/avro\/SchemaConverters$.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "org\/apache\/spark\/sql\/avro\/SchemaConverters$.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.equals", "link" : "org\/apache\/spark\/sql\/avro\/SchemaConverters$.html#equals(x$1:Any):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "org\/apache\/spark\/sql\/avro\/SchemaConverters$.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_]", "member" : "scala.AnyRef.getClass", "link" : "org\/apache\/spark\/sql\/avro\/SchemaConverters$.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "org\/apache\/spark\/sql\/avro\/SchemaConverters$.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "org\/apache\/spark\/sql\/avro\/SchemaConverters$.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "kind" : "object"}], "org.apache.spark.sql.v2.avro" : [{"name" : "org.apache.spark.sql.v2.avro.AvroDataSourceV2", "shortDescription" : "", "members_class" : [{"label" : "getTable", "tail" : "(options: CaseInsensitiveStringMap, schema: StructType): Table", "member" : "org.apache.spark.sql.v2.avro.AvroDataSourceV2.getTable", "link" : "org\/apache\/spark\/sql\/v2\/avro\/AvroDataSourceV2.html#getTable(options:org.apache.spark.sql.util.CaseInsensitiveStringMap,schema:org.apache.spark.sql.types.StructType):org.apache.spark.sql.connector.catalog.Table", "kind" : "def"}, {"label" : "getTable", "tail" : "(options: CaseInsensitiveStringMap): Table", "member" : "org.apache.spark.sql.v2.avro.AvroDataSourceV2.getTable", "link" : "org\/apache\/spark\/sql\/v2\/avro\/AvroDataSourceV2.html#getTable(options:org.apache.spark.sql.util.CaseInsensitiveStringMap):org.apache.spark.sql.connector.catalog.Table", "kind" : "def"}, {"label" : "shortName", "tail" : "(): String", "member" : "org.apache.spark.sql.v2.avro.AvroDataSourceV2.shortName", "link" : "org\/apache\/spark\/sql\/v2\/avro\/AvroDataSourceV2.html#shortName():String", "kind" : "def"}, {"label" : "fallbackFileFormat", "tail" : "(): Class[_ <: FileFormat]", "member" : "org.apache.spark.sql.v2.avro.AvroDataSourceV2.fallbackFileFormat", "link" : "org\/apache\/spark\/sql\/v2\/avro\/AvroDataSourceV2.html#fallbackFileFormat:Class[_<:org.apache.spark.sql.execution.datasources.FileFormat]", "kind" : "def"}, {"member" : "org.apache.spark.sql.v2.avro.AvroDataSourceV2#<init>", "error" : "unsupported entity"}, {"label" : "getTable", "tail" : "(schema: StructType, partitioning: Array[Transform], properties: Map[String, String]): Table", "member" : "org.apache.spark.sql.execution.datasources.v2.FileDataSourceV2.getTable", "link" : "org\/apache\/spark\/sql\/v2\/avro\/AvroDataSourceV2.html#getTable(schema:org.apache.spark.sql.types.StructType,partitioning:Array[org.apache.spark.sql.connector.expressions.Transform],properties:java.util.Map[String,String]):org.apache.spark.sql.connector.catalog.Table", "kind" : "def"}, {"label" : "inferPartitioning", "tail" : "(options: CaseInsensitiveStringMap): Array[Transform]", "member" : "org.apache.spark.sql.execution.datasources.v2.FileDataSourceV2.inferPartitioning", "link" : "org\/apache\/spark\/sql\/v2\/avro\/AvroDataSourceV2.html#inferPartitioning(options:org.apache.spark.sql.util.CaseInsensitiveStringMap):Array[org.apache.spark.sql.connector.expressions.Transform]", "kind" : "def"}, {"label" : "inferSchema", "tail" : "(options: CaseInsensitiveStringMap): StructType", "member" : "org.apache.spark.sql.execution.datasources.v2.FileDataSourceV2.inferSchema", "link" : "org\/apache\/spark\/sql\/v2\/avro\/AvroDataSourceV2.html#inferSchema(options:org.apache.spark.sql.util.CaseInsensitiveStringMap):org.apache.spark.sql.types.StructType", "kind" : "def"}, {"label" : "supportsExternalMetadata", "tail" : "(): Boolean", "member" : "org.apache.spark.sql.execution.datasources.v2.FileDataSourceV2.supportsExternalMetadata", "link" : "org\/apache\/spark\/sql\/v2\/avro\/AvroDataSourceV2.html#supportsExternalMetadata():Boolean", "kind" : "def"}, {"label" : "getTableName", "tail" : "(map: CaseInsensitiveStringMap, paths: Seq[String]): String", "member" : "org.apache.spark.sql.execution.datasources.v2.FileDataSourceV2.getTableName", "link" : "org\/apache\/spark\/sql\/v2\/avro\/AvroDataSourceV2.html#getTableName(map:org.apache.spark.sql.util.CaseInsensitiveStringMap,paths:Seq[String]):String", "kind" : "def"}, {"label" : "getOptionsWithoutPaths", "tail" : "(map: CaseInsensitiveStringMap): CaseInsensitiveStringMap", "member" : "org.apache.spark.sql.execution.datasources.v2.FileDataSourceV2.getOptionsWithoutPaths", "link" : "org\/apache\/spark\/sql\/v2\/avro\/AvroDataSourceV2.html#getOptionsWithoutPaths(map:org.apache.spark.sql.util.CaseInsensitiveStringMap):org.apache.spark.sql.util.CaseInsensitiveStringMap", "kind" : "def"}, {"label" : "getPaths", "tail" : "(map: CaseInsensitiveStringMap): Seq[String]", "member" : "org.apache.spark.sql.execution.datasources.v2.FileDataSourceV2.getPaths", "link" : "org\/apache\/spark\/sql\/v2\/avro\/AvroDataSourceV2.html#getPaths(map:org.apache.spark.sql.util.CaseInsensitiveStringMap):Seq[String]", "kind" : "def"}, {"label" : "sparkSession", "tail" : ": SparkSession", "member" : "org.apache.spark.sql.execution.datasources.v2.FileDataSourceV2.sparkSession", "link" : "org\/apache\/spark\/sql\/v2\/avro\/AvroDataSourceV2.html#sparkSession:org.apache.spark.sql.SparkSession", "kind" : "lazy val"}, {"label" : "synchronized", "tail" : "(arg0: ⇒ T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "org\/apache\/spark\/sql\/v2\/avro\/AvroDataSourceV2.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "org\/apache\/spark\/sql\/v2\/avro\/AvroDataSourceV2.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "org\/apache\/spark\/sql\/v2\/avro\/AvroDataSourceV2.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "org\/apache\/spark\/sql\/v2\/avro\/AvroDataSourceV2.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "org\/apache\/spark\/sql\/v2\/avro\/AvroDataSourceV2.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "org\/apache\/spark\/sql\/v2\/avro\/AvroDataSourceV2.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "org\/apache\/spark\/sql\/v2\/avro\/AvroDataSourceV2.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "org\/apache\/spark\/sql\/v2\/avro\/AvroDataSourceV2.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "org\/apache\/spark\/sql\/v2\/avro\/AvroDataSourceV2.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "org\/apache\/spark\/sql\/v2\/avro\/AvroDataSourceV2.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "org\/apache\/spark\/sql\/v2\/avro\/AvroDataSourceV2.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "org\/apache\/spark\/sql\/v2\/avro\/AvroDataSourceV2.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "org\/apache\/spark\/sql\/v2\/avro\/AvroDataSourceV2.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "org\/apache\/spark\/sql\/v2\/avro\/AvroDataSourceV2.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.equals", "link" : "org\/apache\/spark\/sql\/v2\/avro\/AvroDataSourceV2.html#equals(x$1:Any):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "org\/apache\/spark\/sql\/v2\/avro\/AvroDataSourceV2.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_]", "member" : "scala.AnyRef.getClass", "link" : "org\/apache\/spark\/sql\/v2\/avro\/AvroDataSourceV2.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "org\/apache\/spark\/sql\/v2\/avro\/AvroDataSourceV2.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "org\/apache\/spark\/sql\/v2\/avro\/AvroDataSourceV2.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "class" : "org\/apache\/spark\/sql\/v2\/avro\/AvroDataSourceV2.html", "kind" : "class"}, {"name" : "org.apache.spark.sql.v2.avro.AvroPartitionReaderFactory", "shortDescription" : "A factory used to create AVRO readers.", "members_case class" : [{"label" : "buildReader", "tail" : "(partitionedFile: PartitionedFile): PartitionReader[InternalRow]", "member" : "org.apache.spark.sql.v2.avro.AvroPartitionReaderFactory.buildReader", "link" : "org\/apache\/spark\/sql\/v2\/avro\/AvroPartitionReaderFactory.html#buildReader(partitionedFile:org.apache.spark.sql.execution.datasources.PartitionedFile):org.apache.spark.sql.connector.read.PartitionReader[org.apache.spark.sql.catalyst.InternalRow]", "kind" : "def"}, {"member" : "org.apache.spark.sql.v2.avro.AvroPartitionReaderFactory#<init>", "error" : "unsupported entity"}, {"label" : "filters", "tail" : ": Seq[Filter]", "member" : "org.apache.spark.sql.v2.avro.AvroPartitionReaderFactory.filters", "link" : "org\/apache\/spark\/sql\/v2\/avro\/AvroPartitionReaderFactory.html#filters:Seq[org.apache.spark.sql.sources.Filter]", "kind" : "val"}, {"label" : "parsedOptions", "tail" : ": AvroOptions", "member" : "org.apache.spark.sql.v2.avro.AvroPartitionReaderFactory.parsedOptions", "link" : "org\/apache\/spark\/sql\/v2\/avro\/AvroPartitionReaderFactory.html#parsedOptions:org.apache.spark.sql.avro.AvroOptions", "kind" : "val"}, {"label" : "partitionSchema", "tail" : ": StructType", "member" : "org.apache.spark.sql.v2.avro.AvroPartitionReaderFactory.partitionSchema", "link" : "org\/apache\/spark\/sql\/v2\/avro\/AvroPartitionReaderFactory.html#partitionSchema:org.apache.spark.sql.types.StructType", "kind" : "val"}, {"label" : "readDataSchema", "tail" : ": StructType", "member" : "org.apache.spark.sql.v2.avro.AvroPartitionReaderFactory.readDataSchema", "link" : "org\/apache\/spark\/sql\/v2\/avro\/AvroPartitionReaderFactory.html#readDataSchema:org.apache.spark.sql.types.StructType", "kind" : "val"}, {"label" : "dataSchema", "tail" : ": StructType", "member" : "org.apache.spark.sql.v2.avro.AvroPartitionReaderFactory.dataSchema", "link" : "org\/apache\/spark\/sql\/v2\/avro\/AvroPartitionReaderFactory.html#dataSchema:org.apache.spark.sql.types.StructType", "kind" : "val"}, {"label" : "broadcastedConf", "tail" : ": Broadcast[SerializableConfiguration]", "member" : "org.apache.spark.sql.v2.avro.AvroPartitionReaderFactory.broadcastedConf", "link" : "org\/apache\/spark\/sql\/v2\/avro\/AvroPartitionReaderFactory.html#broadcastedConf:org.apache.spark.broadcast.Broadcast[org.apache.spark.util.SerializableConfiguration]", "kind" : "val"}, {"label" : "sqlConf", "tail" : ": SQLConf", "member" : "org.apache.spark.sql.v2.avro.AvroPartitionReaderFactory.sqlConf", "link" : "org\/apache\/spark\/sql\/v2\/avro\/AvroPartitionReaderFactory.html#sqlConf:org.apache.spark.sql.internal.SQLConf", "kind" : "val"}, {"label" : "initializeLogIfNecessary", "tail" : "(isInterpreter: Boolean, silent: Boolean): Boolean", "member" : "org.apache.spark.internal.Logging.initializeLogIfNecessary", "link" : "org\/apache\/spark\/sql\/v2\/avro\/AvroPartitionReaderFactory.html#initializeLogIfNecessary(isInterpreter:Boolean,silent:Boolean):Boolean", "kind" : "def"}, {"label" : "initializeLogIfNecessary", "tail" : "(isInterpreter: Boolean): Unit", "member" : "org.apache.spark.internal.Logging.initializeLogIfNecessary", "link" : "org\/apache\/spark\/sql\/v2\/avro\/AvroPartitionReaderFactory.html#initializeLogIfNecessary(isInterpreter:Boolean):Unit", "kind" : "def"}, {"label" : "isTraceEnabled", "tail" : "(): Boolean", "member" : "org.apache.spark.internal.Logging.isTraceEnabled", "link" : "org\/apache\/spark\/sql\/v2\/avro\/AvroPartitionReaderFactory.html#isTraceEnabled():Boolean", "kind" : "def"}, {"label" : "logError", "tail" : "(msg: ⇒ String, throwable: Throwable): Unit", "member" : "org.apache.spark.internal.Logging.logError", "link" : "org\/apache\/spark\/sql\/v2\/avro\/AvroPartitionReaderFactory.html#logError(msg:=>String,throwable:Throwable):Unit", "kind" : "def"}, {"label" : "logWarning", "tail" : "(msg: ⇒ String, throwable: Throwable): Unit", "member" : "org.apache.spark.internal.Logging.logWarning", "link" : "org\/apache\/spark\/sql\/v2\/avro\/AvroPartitionReaderFactory.html#logWarning(msg:=>String,throwable:Throwable):Unit", "kind" : "def"}, {"label" : "logTrace", "tail" : "(msg: ⇒ String, throwable: Throwable): Unit", "member" : "org.apache.spark.internal.Logging.logTrace", "link" : "org\/apache\/spark\/sql\/v2\/avro\/AvroPartitionReaderFactory.html#logTrace(msg:=>String,throwable:Throwable):Unit", "kind" : "def"}, {"label" : "logDebug", "tail" : "(msg: ⇒ String, throwable: Throwable): Unit", "member" : "org.apache.spark.internal.Logging.logDebug", "link" : "org\/apache\/spark\/sql\/v2\/avro\/AvroPartitionReaderFactory.html#logDebug(msg:=>String,throwable:Throwable):Unit", "kind" : "def"}, {"label" : "logInfo", "tail" : "(msg: ⇒ String, throwable: Throwable): Unit", "member" : "org.apache.spark.internal.Logging.logInfo", "link" : "org\/apache\/spark\/sql\/v2\/avro\/AvroPartitionReaderFactory.html#logInfo(msg:=>String,throwable:Throwable):Unit", "kind" : "def"}, {"label" : "logError", "tail" : "(msg: ⇒ String): Unit", "member" : "org.apache.spark.internal.Logging.logError", "link" : "org\/apache\/spark\/sql\/v2\/avro\/AvroPartitionReaderFactory.html#logError(msg:=>String):Unit", "kind" : "def"}, {"label" : "logWarning", "tail" : "(msg: ⇒ String): Unit", "member" : "org.apache.spark.internal.Logging.logWarning", "link" : "org\/apache\/spark\/sql\/v2\/avro\/AvroPartitionReaderFactory.html#logWarning(msg:=>String):Unit", "kind" : "def"}, {"label" : "logTrace", "tail" : "(msg: ⇒ String): Unit", "member" : "org.apache.spark.internal.Logging.logTrace", "link" : "org\/apache\/spark\/sql\/v2\/avro\/AvroPartitionReaderFactory.html#logTrace(msg:=>String):Unit", "kind" : "def"}, {"label" : "logDebug", "tail" : "(msg: ⇒ String): Unit", "member" : "org.apache.spark.internal.Logging.logDebug", "link" : "org\/apache\/spark\/sql\/v2\/avro\/AvroPartitionReaderFactory.html#logDebug(msg:=>String):Unit", "kind" : "def"}, {"label" : "logInfo", "tail" : "(msg: ⇒ String): Unit", "member" : "org.apache.spark.internal.Logging.logInfo", "link" : "org\/apache\/spark\/sql\/v2\/avro\/AvroPartitionReaderFactory.html#logInfo(msg:=>String):Unit", "kind" : "def"}, {"label" : "log", "tail" : "(): Logger", "member" : "org.apache.spark.internal.Logging.log", "link" : "org\/apache\/spark\/sql\/v2\/avro\/AvroPartitionReaderFactory.html#log:org.slf4j.Logger", "kind" : "def"}, {"label" : "logName", "tail" : "(): String", "member" : "org.apache.spark.internal.Logging.logName", "link" : "org\/apache\/spark\/sql\/v2\/avro\/AvroPartitionReaderFactory.html#logName:String", "kind" : "def"}, {"label" : "buildColumnarReader", "tail" : "(partitionedFile: PartitionedFile): PartitionReader[ColumnarBatch]", "member" : "org.apache.spark.sql.execution.datasources.v2.FilePartitionReaderFactory.buildColumnarReader", "link" : "org\/apache\/spark\/sql\/v2\/avro\/AvroPartitionReaderFactory.html#buildColumnarReader(partitionedFile:org.apache.spark.sql.execution.datasources.PartitionedFile):org.apache.spark.sql.connector.read.PartitionReader[org.apache.spark.sql.vectorized.ColumnarBatch]", "kind" : "def"}, {"label" : "createColumnarReader", "tail" : "(partition: InputPartition): PartitionReader[ColumnarBatch]", "member" : "org.apache.spark.sql.execution.datasources.v2.FilePartitionReaderFactory.createColumnarReader", "link" : "org\/apache\/spark\/sql\/v2\/avro\/AvroPartitionReaderFactory.html#createColumnarReader(partition:org.apache.spark.sql.connector.read.InputPartition):org.apache.spark.sql.connector.read.PartitionReader[org.apache.spark.sql.vectorized.ColumnarBatch]", "kind" : "def"}, {"label" : "createReader", "tail" : "(partition: InputPartition): PartitionReader[InternalRow]", "member" : "org.apache.spark.sql.execution.datasources.v2.FilePartitionReaderFactory.createReader", "link" : "org\/apache\/spark\/sql\/v2\/avro\/AvroPartitionReaderFactory.html#createReader(partition:org.apache.spark.sql.connector.read.InputPartition):org.apache.spark.sql.connector.read.PartitionReader[org.apache.spark.sql.catalyst.InternalRow]", "kind" : "def"}, {"label" : "supportColumnarReads", "tail" : "(arg0: InputPartition): Boolean", "member" : "org.apache.spark.sql.connector.read.PartitionReaderFactory.supportColumnarReads", "link" : "org\/apache\/spark\/sql\/v2\/avro\/AvroPartitionReaderFactory.html#supportColumnarReads(x$1:org.apache.spark.sql.connector.read.InputPartition):Boolean", "kind" : "def"}, {"label" : "synchronized", "tail" : "(arg0: ⇒ T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "org\/apache\/spark\/sql\/v2\/avro\/AvroPartitionReaderFactory.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "org\/apache\/spark\/sql\/v2\/avro\/AvroPartitionReaderFactory.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "org\/apache\/spark\/sql\/v2\/avro\/AvroPartitionReaderFactory.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "org\/apache\/spark\/sql\/v2\/avro\/AvroPartitionReaderFactory.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "org\/apache\/spark\/sql\/v2\/avro\/AvroPartitionReaderFactory.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "org\/apache\/spark\/sql\/v2\/avro\/AvroPartitionReaderFactory.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "org\/apache\/spark\/sql\/v2\/avro\/AvroPartitionReaderFactory.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "org\/apache\/spark\/sql\/v2\/avro\/AvroPartitionReaderFactory.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "org\/apache\/spark\/sql\/v2\/avro\/AvroPartitionReaderFactory.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "org\/apache\/spark\/sql\/v2\/avro\/AvroPartitionReaderFactory.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "org\/apache\/spark\/sql\/v2\/avro\/AvroPartitionReaderFactory.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "org\/apache\/spark\/sql\/v2\/avro\/AvroPartitionReaderFactory.html#notify():Unit", "kind" : "final def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "org\/apache\/spark\/sql\/v2\/avro\/AvroPartitionReaderFactory.html#clone():Object", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_]", "member" : "scala.AnyRef.getClass", "link" : "org\/apache\/spark\/sql\/v2\/avro\/AvroPartitionReaderFactory.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "org\/apache\/spark\/sql\/v2\/avro\/AvroPartitionReaderFactory.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "org\/apache\/spark\/sql\/v2\/avro\/AvroPartitionReaderFactory.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "case class" : "org\/apache\/spark\/sql\/v2\/avro\/AvroPartitionReaderFactory.html", "kind" : "case class"}, {"name" : "org.apache.spark.sql.v2.avro.AvroScan", "shortDescription" : "", "members_case class" : [{"label" : "getMetaData", "tail" : "(): Map[String, String]", "member" : "org.apache.spark.sql.v2.avro.AvroScan.getMetaData", "link" : "org\/apache\/spark\/sql\/v2\/avro\/AvroScan.html#getMetaData():Map[String,String]", "kind" : "def"}, {"label" : "description", "tail" : "(): String", "member" : "org.apache.spark.sql.v2.avro.AvroScan.description", "link" : "org\/apache\/spark\/sql\/v2\/avro\/AvroScan.html#description():String", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "org.apache.spark.sql.v2.avro.AvroScan.hashCode", "link" : "org\/apache\/spark\/sql\/v2\/avro\/AvroScan.html#hashCode():Int", "kind" : "def"}, {"label" : "equals", "tail" : "(obj: Any): Boolean", "member" : "org.apache.spark.sql.v2.avro.AvroScan.equals", "link" : "org\/apache\/spark\/sql\/v2\/avro\/AvroScan.html#equals(obj:Any):Boolean", "kind" : "def"}, {"label" : "withFilters", "tail" : "(partitionFilters: Seq[Expression], dataFilters: Seq[Expression]): FileScan", "member" : "org.apache.spark.sql.v2.avro.AvroScan.withFilters", "link" : "org\/apache\/spark\/sql\/v2\/avro\/AvroScan.html#withFilters(partitionFilters:Seq[org.apache.spark.sql.catalyst.expressions.Expression],dataFilters:Seq[org.apache.spark.sql.catalyst.expressions.Expression]):org.apache.spark.sql.execution.datasources.v2.FileScan", "kind" : "def"}, {"label" : "createReaderFactory", "tail" : "(): PartitionReaderFactory", "member" : "org.apache.spark.sql.v2.avro.AvroScan.createReaderFactory", "link" : "org\/apache\/spark\/sql\/v2\/avro\/AvroScan.html#createReaderFactory():org.apache.spark.sql.connector.read.PartitionReaderFactory", "kind" : "def"}, {"label" : "isSplitable", "tail" : "(path: Path): Boolean", "member" : "org.apache.spark.sql.v2.avro.AvroScan.isSplitable", "link" : "org\/apache\/spark\/sql\/v2\/avro\/AvroScan.html#isSplitable(path:org.apache.hadoop.fs.Path):Boolean", "kind" : "def"}, {"member" : "org.apache.spark.sql.v2.avro.AvroScan#<init>", "error" : "unsupported entity"}, {"label" : "dataFilters", "tail" : ": Seq[Expression]", "member" : "org.apache.spark.sql.v2.avro.AvroScan.dataFilters", "link" : "org\/apache\/spark\/sql\/v2\/avro\/AvroScan.html#dataFilters:Seq[org.apache.spark.sql.catalyst.expressions.Expression]", "kind" : "val"}, {"label" : "partitionFilters", "tail" : ": Seq[Expression]", "member" : "org.apache.spark.sql.v2.avro.AvroScan.partitionFilters", "link" : "org\/apache\/spark\/sql\/v2\/avro\/AvroScan.html#partitionFilters:Seq[org.apache.spark.sql.catalyst.expressions.Expression]", "kind" : "val"}, {"label" : "pushedFilters", "tail" : ": Array[Filter]", "member" : "org.apache.spark.sql.v2.avro.AvroScan.pushedFilters", "link" : "org\/apache\/spark\/sql\/v2\/avro\/AvroScan.html#pushedFilters:Array[org.apache.spark.sql.sources.Filter]", "kind" : "val"}, {"label" : "options", "tail" : ": CaseInsensitiveStringMap", "member" : "org.apache.spark.sql.v2.avro.AvroScan.options", "link" : "org\/apache\/spark\/sql\/v2\/avro\/AvroScan.html#options:org.apache.spark.sql.util.CaseInsensitiveStringMap", "kind" : "val"}, {"label" : "readPartitionSchema", "tail" : ": StructType", "member" : "org.apache.spark.sql.v2.avro.AvroScan.readPartitionSchema", "link" : "org\/apache\/spark\/sql\/v2\/avro\/AvroScan.html#readPartitionSchema:org.apache.spark.sql.types.StructType", "kind" : "val"}, {"label" : "readDataSchema", "tail" : ": StructType", "member" : "org.apache.spark.sql.v2.avro.AvroScan.readDataSchema", "link" : "org\/apache\/spark\/sql\/v2\/avro\/AvroScan.html#readDataSchema:org.apache.spark.sql.types.StructType", "kind" : "val"}, {"label" : "dataSchema", "tail" : ": StructType", "member" : "org.apache.spark.sql.v2.avro.AvroScan.dataSchema", "link" : "org\/apache\/spark\/sql\/v2\/avro\/AvroScan.html#dataSchema:org.apache.spark.sql.types.StructType", "kind" : "val"}, {"label" : "fileIndex", "tail" : ": PartitioningAwareFileIndex", "member" : "org.apache.spark.sql.v2.avro.AvroScan.fileIndex", "link" : "org\/apache\/spark\/sql\/v2\/avro\/AvroScan.html#fileIndex:org.apache.spark.sql.execution.datasources.PartitioningAwareFileIndex", "kind" : "val"}, {"label" : "sparkSession", "tail" : ": SparkSession", "member" : "org.apache.spark.sql.v2.avro.AvroScan.sparkSession", "link" : "org\/apache\/spark\/sql\/v2\/avro\/AvroScan.html#sparkSession:org.apache.spark.sql.SparkSession", "kind" : "val"}, {"label" : "equivalentFilters", "tail" : "(a: Array[Filter], b: Array[Filter]): Boolean", "member" : "org.apache.spark.sql.execution.datasources.v2.FileScan.equivalentFilters", "link" : "org\/apache\/spark\/sql\/v2\/avro\/AvroScan.html#equivalentFilters(a:Array[org.apache.spark.sql.sources.Filter],b:Array[org.apache.spark.sql.sources.Filter]):Boolean", "kind" : "def"}, {"label" : "readSchema", "tail" : "(): StructType", "member" : "org.apache.spark.sql.execution.datasources.v2.FileScan.readSchema", "link" : "org\/apache\/spark\/sql\/v2\/avro\/AvroScan.html#readSchema():org.apache.spark.sql.types.StructType", "kind" : "def"}, {"label" : "toBatch", "tail" : "(): Batch", "member" : "org.apache.spark.sql.execution.datasources.v2.FileScan.toBatch", "link" : "org\/apache\/spark\/sql\/v2\/avro\/AvroScan.html#toBatch():org.apache.spark.sql.connector.read.Batch", "kind" : "def"}, {"label" : "estimateStatistics", "tail" : "(): Statistics", "member" : "org.apache.spark.sql.execution.datasources.v2.FileScan.estimateStatistics", "link" : "org\/apache\/spark\/sql\/v2\/avro\/AvroScan.html#estimateStatistics():org.apache.spark.sql.connector.read.Statistics", "kind" : "def"}, {"label" : "planInputPartitions", "tail" : "(): Array[InputPartition]", "member" : "org.apache.spark.sql.execution.datasources.v2.FileScan.planInputPartitions", "link" : "org\/apache\/spark\/sql\/v2\/avro\/AvroScan.html#planInputPartitions():Array[org.apache.spark.sql.connector.read.InputPartition]", "kind" : "def"}, {"label" : "partitions", "tail" : "(): Seq[FilePartition]", "member" : "org.apache.spark.sql.execution.datasources.v2.FileScan.partitions", "link" : "org\/apache\/spark\/sql\/v2\/avro\/AvroScan.html#partitions:Seq[org.apache.spark.sql.execution.datasources.FilePartition]", "kind" : "def"}, {"label" : "maxMetadataValueLength", "tail" : ": Int", "member" : "org.apache.spark.sql.execution.datasources.v2.FileScan.maxMetadataValueLength", "link" : "org\/apache\/spark\/sql\/v2\/avro\/AvroScan.html#maxMetadataValueLength:Int", "kind" : "val"}, {"label" : "seqToString", "tail" : "(seq: Seq[Any]): String", "member" : "org.apache.spark.sql.execution.datasources.v2.FileScan.seqToString", "link" : "org\/apache\/spark\/sql\/v2\/avro\/AvroScan.html#seqToString(seq:Seq[Any]):String", "kind" : "def"}, {"label" : "getFileUnSplittableReason", "tail" : "(path: Path): String", "member" : "org.apache.spark.sql.execution.datasources.v2.FileScan.getFileUnSplittableReason", "link" : "org\/apache\/spark\/sql\/v2\/avro\/AvroScan.html#getFileUnSplittableReason(path:org.apache.hadoop.fs.Path):String", "kind" : "def"}, {"label" : "initializeLogIfNecessary", "tail" : "(isInterpreter: Boolean, silent: Boolean): Boolean", "member" : "org.apache.spark.internal.Logging.initializeLogIfNecessary", "link" : "org\/apache\/spark\/sql\/v2\/avro\/AvroScan.html#initializeLogIfNecessary(isInterpreter:Boolean,silent:Boolean):Boolean", "kind" : "def"}, {"label" : "initializeLogIfNecessary", "tail" : "(isInterpreter: Boolean): Unit", "member" : "org.apache.spark.internal.Logging.initializeLogIfNecessary", "link" : "org\/apache\/spark\/sql\/v2\/avro\/AvroScan.html#initializeLogIfNecessary(isInterpreter:Boolean):Unit", "kind" : "def"}, {"label" : "isTraceEnabled", "tail" : "(): Boolean", "member" : "org.apache.spark.internal.Logging.isTraceEnabled", "link" : "org\/apache\/spark\/sql\/v2\/avro\/AvroScan.html#isTraceEnabled():Boolean", "kind" : "def"}, {"label" : "logError", "tail" : "(msg: ⇒ String, throwable: Throwable): Unit", "member" : "org.apache.spark.internal.Logging.logError", "link" : "org\/apache\/spark\/sql\/v2\/avro\/AvroScan.html#logError(msg:=>String,throwable:Throwable):Unit", "kind" : "def"}, {"label" : "logWarning", "tail" : "(msg: ⇒ String, throwable: Throwable): Unit", "member" : "org.apache.spark.internal.Logging.logWarning", "link" : "org\/apache\/spark\/sql\/v2\/avro\/AvroScan.html#logWarning(msg:=>String,throwable:Throwable):Unit", "kind" : "def"}, {"label" : "logTrace", "tail" : "(msg: ⇒ String, throwable: Throwable): Unit", "member" : "org.apache.spark.internal.Logging.logTrace", "link" : "org\/apache\/spark\/sql\/v2\/avro\/AvroScan.html#logTrace(msg:=>String,throwable:Throwable):Unit", "kind" : "def"}, {"label" : "logDebug", "tail" : "(msg: ⇒ String, throwable: Throwable): Unit", "member" : "org.apache.spark.internal.Logging.logDebug", "link" : "org\/apache\/spark\/sql\/v2\/avro\/AvroScan.html#logDebug(msg:=>String,throwable:Throwable):Unit", "kind" : "def"}, {"label" : "logInfo", "tail" : "(msg: ⇒ String, throwable: Throwable): Unit", "member" : "org.apache.spark.internal.Logging.logInfo", "link" : "org\/apache\/spark\/sql\/v2\/avro\/AvroScan.html#logInfo(msg:=>String,throwable:Throwable):Unit", "kind" : "def"}, {"label" : "logError", "tail" : "(msg: ⇒ String): Unit", "member" : "org.apache.spark.internal.Logging.logError", "link" : "org\/apache\/spark\/sql\/v2\/avro\/AvroScan.html#logError(msg:=>String):Unit", "kind" : "def"}, {"label" : "logWarning", "tail" : "(msg: ⇒ String): Unit", "member" : "org.apache.spark.internal.Logging.logWarning", "link" : "org\/apache\/spark\/sql\/v2\/avro\/AvroScan.html#logWarning(msg:=>String):Unit", "kind" : "def"}, {"label" : "logTrace", "tail" : "(msg: ⇒ String): Unit", "member" : "org.apache.spark.internal.Logging.logTrace", "link" : "org\/apache\/spark\/sql\/v2\/avro\/AvroScan.html#logTrace(msg:=>String):Unit", "kind" : "def"}, {"label" : "logDebug", "tail" : "(msg: ⇒ String): Unit", "member" : "org.apache.spark.internal.Logging.logDebug", "link" : "org\/apache\/spark\/sql\/v2\/avro\/AvroScan.html#logDebug(msg:=>String):Unit", "kind" : "def"}, {"label" : "logInfo", "tail" : "(msg: ⇒ String): Unit", "member" : "org.apache.spark.internal.Logging.logInfo", "link" : "org\/apache\/spark\/sql\/v2\/avro\/AvroScan.html#logInfo(msg:=>String):Unit", "kind" : "def"}, {"label" : "log", "tail" : "(): Logger", "member" : "org.apache.spark.internal.Logging.log", "link" : "org\/apache\/spark\/sql\/v2\/avro\/AvroScan.html#log:org.slf4j.Logger", "kind" : "def"}, {"label" : "logName", "tail" : "(): String", "member" : "org.apache.spark.internal.Logging.logName", "link" : "org\/apache\/spark\/sql\/v2\/avro\/AvroScan.html#logName:String", "kind" : "def"}, {"label" : "supportedCustomMetrics", "tail" : "(): Array[CustomMetric]", "member" : "org.apache.spark.sql.connector.read.Scan.supportedCustomMetrics", "link" : "org\/apache\/spark\/sql\/v2\/avro\/AvroScan.html#supportedCustomMetrics():Array[org.apache.spark.sql.connector.metric.CustomMetric]", "kind" : "def"}, {"label" : "toContinuousStream", "tail" : "(arg0: String): ContinuousStream", "member" : "org.apache.spark.sql.connector.read.Scan.toContinuousStream", "link" : "org\/apache\/spark\/sql\/v2\/avro\/AvroScan.html#toContinuousStream(x$1:String):org.apache.spark.sql.connector.read.streaming.ContinuousStream", "kind" : "def"}, {"label" : "toMicroBatchStream", "tail" : "(arg0: String): MicroBatchStream", "member" : "org.apache.spark.sql.connector.read.Scan.toMicroBatchStream", "link" : "org\/apache\/spark\/sql\/v2\/avro\/AvroScan.html#toMicroBatchStream(x$1:String):org.apache.spark.sql.connector.read.streaming.MicroBatchStream", "kind" : "def"}, {"label" : "synchronized", "tail" : "(arg0: ⇒ T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "org\/apache\/spark\/sql\/v2\/avro\/AvroScan.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "org\/apache\/spark\/sql\/v2\/avro\/AvroScan.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "org\/apache\/spark\/sql\/v2\/avro\/AvroScan.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "org\/apache\/spark\/sql\/v2\/avro\/AvroScan.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "org\/apache\/spark\/sql\/v2\/avro\/AvroScan.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "org\/apache\/spark\/sql\/v2\/avro\/AvroScan.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "org\/apache\/spark\/sql\/v2\/avro\/AvroScan.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "org\/apache\/spark\/sql\/v2\/avro\/AvroScan.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "org\/apache\/spark\/sql\/v2\/avro\/AvroScan.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "org\/apache\/spark\/sql\/v2\/avro\/AvroScan.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "org\/apache\/spark\/sql\/v2\/avro\/AvroScan.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "org\/apache\/spark\/sql\/v2\/avro\/AvroScan.html#notify():Unit", "kind" : "final def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "org\/apache\/spark\/sql\/v2\/avro\/AvroScan.html#clone():Object", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_]", "member" : "scala.AnyRef.getClass", "link" : "org\/apache\/spark\/sql\/v2\/avro\/AvroScan.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "org\/apache\/spark\/sql\/v2\/avro\/AvroScan.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "org\/apache\/spark\/sql\/v2\/avro\/AvroScan.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "case class" : "org\/apache\/spark\/sql\/v2\/avro\/AvroScan.html", "kind" : "case class"}, {"name" : "org.apache.spark.sql.v2.avro.AvroScanBuilder", "shortDescription" : "", "members_class" : [{"label" : "pushedFilters", "tail" : "(): Array[Filter]", "member" : "org.apache.spark.sql.v2.avro.AvroScanBuilder.pushedFilters", "link" : "org\/apache\/spark\/sql\/v2\/avro\/AvroScanBuilder.html#pushedFilters():Array[org.apache.spark.sql.sources.Filter]", "kind" : "def"}, {"label" : "pushFilters", "tail" : "(filters: Array[Filter]): Array[Filter]", "member" : "org.apache.spark.sql.v2.avro.AvroScanBuilder.pushFilters", "link" : "org\/apache\/spark\/sql\/v2\/avro\/AvroScanBuilder.html#pushFilters(filters:Array[org.apache.spark.sql.sources.Filter]):Array[org.apache.spark.sql.sources.Filter]", "kind" : "def"}, {"label" : "build", "tail" : "(): Scan", "member" : "org.apache.spark.sql.v2.avro.AvroScanBuilder.build", "link" : "org\/apache\/spark\/sql\/v2\/avro\/AvroScanBuilder.html#build():org.apache.spark.sql.connector.read.Scan", "kind" : "def"}, {"member" : "org.apache.spark.sql.v2.avro.AvroScanBuilder#<init>", "error" : "unsupported entity"}, {"label" : "readPartitionSchema", "tail" : "(): StructType", "member" : "org.apache.spark.sql.execution.datasources.v2.FileScanBuilder.readPartitionSchema", "link" : "org\/apache\/spark\/sql\/v2\/avro\/AvroScanBuilder.html#readPartitionSchema():org.apache.spark.sql.types.StructType", "kind" : "def"}, {"label" : "readDataSchema", "tail" : "(): StructType", "member" : "org.apache.spark.sql.execution.datasources.v2.FileScanBuilder.readDataSchema", "link" : "org\/apache\/spark\/sql\/v2\/avro\/AvroScanBuilder.html#readDataSchema():org.apache.spark.sql.types.StructType", "kind" : "def"}, {"label" : "pruneColumns", "tail" : "(requiredSchema: StructType): Unit", "member" : "org.apache.spark.sql.execution.datasources.v2.FileScanBuilder.pruneColumns", "link" : "org\/apache\/spark\/sql\/v2\/avro\/AvroScanBuilder.html#pruneColumns(requiredSchema:org.apache.spark.sql.types.StructType):Unit", "kind" : "def"}, {"label" : "requiredSchema", "tail" : ": StructType", "member" : "org.apache.spark.sql.execution.datasources.v2.FileScanBuilder.requiredSchema", "link" : "org\/apache\/spark\/sql\/v2\/avro\/AvroScanBuilder.html#requiredSchema:org.apache.spark.sql.types.StructType", "kind" : "var"}, {"label" : "supportsNestedSchemaPruning", "tail" : ": Boolean", "member" : "org.apache.spark.sql.execution.datasources.v2.FileScanBuilder.supportsNestedSchemaPruning", "link" : "org\/apache\/spark\/sql\/v2\/avro\/AvroScanBuilder.html#supportsNestedSchemaPruning:Boolean", "kind" : "val"}, {"label" : "synchronized", "tail" : "(arg0: ⇒ T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "org\/apache\/spark\/sql\/v2\/avro\/AvroScanBuilder.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "org\/apache\/spark\/sql\/v2\/avro\/AvroScanBuilder.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "org\/apache\/spark\/sql\/v2\/avro\/AvroScanBuilder.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "org\/apache\/spark\/sql\/v2\/avro\/AvroScanBuilder.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "org\/apache\/spark\/sql\/v2\/avro\/AvroScanBuilder.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "org\/apache\/spark\/sql\/v2\/avro\/AvroScanBuilder.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "org\/apache\/spark\/sql\/v2\/avro\/AvroScanBuilder.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "org\/apache\/spark\/sql\/v2\/avro\/AvroScanBuilder.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "org\/apache\/spark\/sql\/v2\/avro\/AvroScanBuilder.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "org\/apache\/spark\/sql\/v2\/avro\/AvroScanBuilder.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "org\/apache\/spark\/sql\/v2\/avro\/AvroScanBuilder.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "org\/apache\/spark\/sql\/v2\/avro\/AvroScanBuilder.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "org\/apache\/spark\/sql\/v2\/avro\/AvroScanBuilder.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "org\/apache\/spark\/sql\/v2\/avro\/AvroScanBuilder.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.equals", "link" : "org\/apache\/spark\/sql\/v2\/avro\/AvroScanBuilder.html#equals(x$1:Any):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "org\/apache\/spark\/sql\/v2\/avro\/AvroScanBuilder.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_]", "member" : "scala.AnyRef.getClass", "link" : "org\/apache\/spark\/sql\/v2\/avro\/AvroScanBuilder.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "org\/apache\/spark\/sql\/v2\/avro\/AvroScanBuilder.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "org\/apache\/spark\/sql\/v2\/avro\/AvroScanBuilder.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "class" : "org\/apache\/spark\/sql\/v2\/avro\/AvroScanBuilder.html", "kind" : "class"}, {"name" : "org.apache.spark.sql.v2.avro.AvroTable", "shortDescription" : "", "members_case class" : [{"label" : "formatName", "tail" : "(): String", "member" : "org.apache.spark.sql.v2.avro.AvroTable.formatName", "link" : "org\/apache\/spark\/sql\/v2\/avro\/AvroTable.html#formatName:String", "kind" : "def"}, {"label" : "supportsDataType", "tail" : "(dataType: DataType): Boolean", "member" : "org.apache.spark.sql.v2.avro.AvroTable.supportsDataType", "link" : "org\/apache\/spark\/sql\/v2\/avro\/AvroTable.html#supportsDataType(dataType:org.apache.spark.sql.types.DataType):Boolean", "kind" : "def"}, {"label" : "newWriteBuilder", "tail" : "(info: LogicalWriteInfo): WriteBuilder", "member" : "org.apache.spark.sql.v2.avro.AvroTable.newWriteBuilder", "link" : "org\/apache\/spark\/sql\/v2\/avro\/AvroTable.html#newWriteBuilder(info:org.apache.spark.sql.connector.write.LogicalWriteInfo):org.apache.spark.sql.connector.write.WriteBuilder", "kind" : "def"}, {"label" : "inferSchema", "tail" : "(files: Seq[FileStatus]): Option[StructType]", "member" : "org.apache.spark.sql.v2.avro.AvroTable.inferSchema", "link" : "org\/apache\/spark\/sql\/v2\/avro\/AvroTable.html#inferSchema(files:Seq[org.apache.hadoop.fs.FileStatus]):Option[org.apache.spark.sql.types.StructType]", "kind" : "def"}, {"label" : "newScanBuilder", "tail" : "(options: CaseInsensitiveStringMap): AvroScanBuilder", "member" : "org.apache.spark.sql.v2.avro.AvroTable.newScanBuilder", "link" : "org\/apache\/spark\/sql\/v2\/avro\/AvroTable.html#newScanBuilder(options:org.apache.spark.sql.util.CaseInsensitiveStringMap):org.apache.spark.sql.v2.avro.AvroScanBuilder", "kind" : "def"}, {"member" : "org.apache.spark.sql.v2.avro.AvroTable#<init>", "error" : "unsupported entity"}, {"label" : "fallbackFileFormat", "tail" : ": Class[_ <: FileFormat]", "member" : "org.apache.spark.sql.v2.avro.AvroTable.fallbackFileFormat", "link" : "org\/apache\/spark\/sql\/v2\/avro\/AvroTable.html#fallbackFileFormat:Class[_<:org.apache.spark.sql.execution.datasources.FileFormat]", "kind" : "val"}, {"label" : "userSpecifiedSchema", "tail" : ": Option[StructType]", "member" : "org.apache.spark.sql.v2.avro.AvroTable.userSpecifiedSchema", "link" : "org\/apache\/spark\/sql\/v2\/avro\/AvroTable.html#userSpecifiedSchema:Option[org.apache.spark.sql.types.StructType]", "kind" : "val"}, {"label" : "paths", "tail" : ": Seq[String]", "member" : "org.apache.spark.sql.v2.avro.AvroTable.paths", "link" : "org\/apache\/spark\/sql\/v2\/avro\/AvroTable.html#paths:Seq[String]", "kind" : "val"}, {"label" : "options", "tail" : ": CaseInsensitiveStringMap", "member" : "org.apache.spark.sql.v2.avro.AvroTable.options", "link" : "org\/apache\/spark\/sql\/v2\/avro\/AvroTable.html#options:org.apache.spark.sql.util.CaseInsensitiveStringMap", "kind" : "val"}, {"label" : "sparkSession", "tail" : ": SparkSession", "member" : "org.apache.spark.sql.v2.avro.AvroTable.sparkSession", "link" : "org\/apache\/spark\/sql\/v2\/avro\/AvroTable.html#sparkSession:org.apache.spark.sql.SparkSession", "kind" : "val"}, {"label" : "name", "tail" : ": String", "member" : "org.apache.spark.sql.v2.avro.AvroTable.name", "link" : "org\/apache\/spark\/sql\/v2\/avro\/AvroTable.html#name:String", "kind" : "val"}, {"label" : "capabilities", "tail" : "(): Set[TableCapability]", "member" : "org.apache.spark.sql.execution.datasources.v2.FileTable.capabilities", "link" : "org\/apache\/spark\/sql\/v2\/avro\/AvroTable.html#capabilities():java.util.Set[org.apache.spark.sql.connector.catalog.TableCapability]", "kind" : "def"}, {"label" : "properties", "tail" : "(): Map[String, String]", "member" : "org.apache.spark.sql.execution.datasources.v2.FileTable.properties", "link" : "org\/apache\/spark\/sql\/v2\/avro\/AvroTable.html#properties():java.util.Map[String,String]", "kind" : "def"}, {"label" : "partitioning", "tail" : "(): Array[Transform]", "member" : "org.apache.spark.sql.execution.datasources.v2.FileTable.partitioning", "link" : "org\/apache\/spark\/sql\/v2\/avro\/AvroTable.html#partitioning():Array[org.apache.spark.sql.connector.expressions.Transform]", "kind" : "def"}, {"label" : "schema", "tail" : ": StructType", "member" : "org.apache.spark.sql.execution.datasources.v2.FileTable.schema", "link" : "org\/apache\/spark\/sql\/v2\/avro\/AvroTable.html#schema:org.apache.spark.sql.types.StructType", "kind" : "lazy val"}, {"label" : "dataSchema", "tail" : ": StructType", "member" : "org.apache.spark.sql.execution.datasources.v2.FileTable.dataSchema", "link" : "org\/apache\/spark\/sql\/v2\/avro\/AvroTable.html#dataSchema:org.apache.spark.sql.types.StructType", "kind" : "lazy val"}, {"label" : "fileIndex", "tail" : ": PartitioningAwareFileIndex", "member" : "org.apache.spark.sql.execution.datasources.v2.FileTable.fileIndex", "link" : "org\/apache\/spark\/sql\/v2\/avro\/AvroTable.html#fileIndex:org.apache.spark.sql.execution.datasources.PartitioningAwareFileIndex", "kind" : "lazy val"}, {"label" : "synchronized", "tail" : "(arg0: ⇒ T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "org\/apache\/spark\/sql\/v2\/avro\/AvroTable.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "org\/apache\/spark\/sql\/v2\/avro\/AvroTable.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "org\/apache\/spark\/sql\/v2\/avro\/AvroTable.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "org\/apache\/spark\/sql\/v2\/avro\/AvroTable.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "org\/apache\/spark\/sql\/v2\/avro\/AvroTable.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "org\/apache\/spark\/sql\/v2\/avro\/AvroTable.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "org\/apache\/spark\/sql\/v2\/avro\/AvroTable.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "org\/apache\/spark\/sql\/v2\/avro\/AvroTable.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "org\/apache\/spark\/sql\/v2\/avro\/AvroTable.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "org\/apache\/spark\/sql\/v2\/avro\/AvroTable.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "org\/apache\/spark\/sql\/v2\/avro\/AvroTable.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "org\/apache\/spark\/sql\/v2\/avro\/AvroTable.html#notify():Unit", "kind" : "final def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "org\/apache\/spark\/sql\/v2\/avro\/AvroTable.html#clone():Object", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_]", "member" : "scala.AnyRef.getClass", "link" : "org\/apache\/spark\/sql\/v2\/avro\/AvroTable.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "org\/apache\/spark\/sql\/v2\/avro\/AvroTable.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "org\/apache\/spark\/sql\/v2\/avro\/AvroTable.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "case class" : "org\/apache\/spark\/sql\/v2\/avro\/AvroTable.html", "kind" : "case class"}, {"name" : "org.apache.spark.sql.v2.avro.AvroWrite", "shortDescription" : "", "members_case class" : [{"label" : "prepareWrite", "tail" : "(sqlConf: SQLConf, job: Job, options: Map[String, String], dataSchema: StructType): OutputWriterFactory", "member" : "org.apache.spark.sql.v2.avro.AvroWrite.prepareWrite", "link" : "org\/apache\/spark\/sql\/v2\/avro\/AvroWrite.html#prepareWrite(sqlConf:org.apache.spark.sql.internal.SQLConf,job:org.apache.hadoop.mapreduce.Job,options:Map[String,String],dataSchema:org.apache.spark.sql.types.StructType):org.apache.spark.sql.execution.datasources.OutputWriterFactory", "kind" : "def"}, {"member" : "org.apache.spark.sql.v2.avro.AvroWrite#<init>", "error" : "unsupported entity"}, {"label" : "info", "tail" : ": LogicalWriteInfo", "member" : "org.apache.spark.sql.v2.avro.AvroWrite.info", "link" : "org\/apache\/spark\/sql\/v2\/avro\/AvroWrite.html#info:org.apache.spark.sql.connector.write.LogicalWriteInfo", "kind" : "val"}, {"label" : "supportsDataType", "tail" : ": (DataType) ⇒ Boolean", "member" : "org.apache.spark.sql.v2.avro.AvroWrite.supportsDataType", "link" : "org\/apache\/spark\/sql\/v2\/avro\/AvroWrite.html#supportsDataType:org.apache.spark.sql.types.DataType=>Boolean", "kind" : "val"}, {"label" : "formatName", "tail" : ": String", "member" : "org.apache.spark.sql.v2.avro.AvroWrite.formatName", "link" : "org\/apache\/spark\/sql\/v2\/avro\/AvroWrite.html#formatName:String", "kind" : "val"}, {"label" : "paths", "tail" : ": Seq[String]", "member" : "org.apache.spark.sql.v2.avro.AvroWrite.paths", "link" : "org\/apache\/spark\/sql\/v2\/avro\/AvroWrite.html#paths:Seq[String]", "kind" : "val"}, {"label" : "toBatch", "tail" : "(): BatchWrite", "member" : "org.apache.spark.sql.execution.datasources.v2.FileWrite.toBatch", "link" : "org\/apache\/spark\/sql\/v2\/avro\/AvroWrite.html#toBatch():org.apache.spark.sql.connector.write.BatchWrite", "kind" : "def"}, {"label" : "description", "tail" : "(): String", "member" : "org.apache.spark.sql.execution.datasources.v2.FileWrite.description", "link" : "org\/apache\/spark\/sql\/v2\/avro\/AvroWrite.html#description():String", "kind" : "def"}, {"label" : "supportedCustomMetrics", "tail" : "(): Array[CustomMetric]", "member" : "org.apache.spark.sql.connector.write.Write.supportedCustomMetrics", "link" : "org\/apache\/spark\/sql\/v2\/avro\/AvroWrite.html#supportedCustomMetrics():Array[org.apache.spark.sql.connector.metric.CustomMetric]", "kind" : "def"}, {"label" : "toStreaming", "tail" : "(): StreamingWrite", "member" : "org.apache.spark.sql.connector.write.Write.toStreaming", "link" : "org\/apache\/spark\/sql\/v2\/avro\/AvroWrite.html#toStreaming():org.apache.spark.sql.connector.write.streaming.StreamingWrite", "kind" : "def"}, {"label" : "synchronized", "tail" : "(arg0: ⇒ T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "org\/apache\/spark\/sql\/v2\/avro\/AvroWrite.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "org\/apache\/spark\/sql\/v2\/avro\/AvroWrite.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "org\/apache\/spark\/sql\/v2\/avro\/AvroWrite.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "org\/apache\/spark\/sql\/v2\/avro\/AvroWrite.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "org\/apache\/spark\/sql\/v2\/avro\/AvroWrite.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "org\/apache\/spark\/sql\/v2\/avro\/AvroWrite.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "org\/apache\/spark\/sql\/v2\/avro\/AvroWrite.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "org\/apache\/spark\/sql\/v2\/avro\/AvroWrite.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "org\/apache\/spark\/sql\/v2\/avro\/AvroWrite.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "org\/apache\/spark\/sql\/v2\/avro\/AvroWrite.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "org\/apache\/spark\/sql\/v2\/avro\/AvroWrite.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "org\/apache\/spark\/sql\/v2\/avro\/AvroWrite.html#notify():Unit", "kind" : "final def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "org\/apache\/spark\/sql\/v2\/avro\/AvroWrite.html#clone():Object", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_]", "member" : "scala.AnyRef.getClass", "link" : "org\/apache\/spark\/sql\/v2\/avro\/AvroWrite.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "org\/apache\/spark\/sql\/v2\/avro\/AvroWrite.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "org\/apache\/spark\/sql\/v2\/avro\/AvroWrite.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "case class" : "org\/apache\/spark\/sql\/v2\/avro\/AvroWrite.html", "kind" : "case class"}], "org.apache.spark.sql" : [], "org" : []};