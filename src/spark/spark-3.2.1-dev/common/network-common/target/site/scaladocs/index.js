Index.PACKAGES = {"org.apache.spark" : [], "org.apache" : [], "org.apache.spark.network.server" : [{"name" : "org.apache.spark.network.server.AbstractAuthRpcHandler", "shortDescription" : "RPC Handler which performs authentication, and when it's successful, delegates furthercalls to another RPC handler.", "members_class" : [{"label" : "getMergedBlockMetaReqHandler", "tail" : "(): MergedBlockMetaReqHandler", "member" : "org.apache.spark.network.server.AbstractAuthRpcHandler.getMergedBlockMetaReqHandler", "link" : "org\/apache\/spark\/network\/server\/AbstractAuthRpcHandler.html#getMergedBlockMetaReqHandler():org.apache.spark.network.server.RpcHandler.MergedBlockMetaReqHandler", "kind" : "def"}, {"label" : "isAuthenticated", "tail" : "(): Boolean", "member" : "org.apache.spark.network.server.AbstractAuthRpcHandler.isAuthenticated", "link" : "org\/apache\/spark\/network\/server\/AbstractAuthRpcHandler.html#isAuthenticated():Boolean", "kind" : "def"}, {"label" : "exceptionCaught", "tail" : "(cause: Throwable, client: TransportClient): Unit", "member" : "org.apache.spark.network.server.AbstractAuthRpcHandler.exceptionCaught", "link" : "org\/apache\/spark\/network\/server\/AbstractAuthRpcHandler.html#exceptionCaught(cause:Throwable,client:org.apache.spark.network.client.TransportClient):Unit", "kind" : "def"}, {"label" : "channelInactive", "tail" : "(client: TransportClient): Unit", "member" : "org.apache.spark.network.server.AbstractAuthRpcHandler.channelInactive", "link" : "org\/apache\/spark\/network\/server\/AbstractAuthRpcHandler.html#channelInactive(client:org.apache.spark.network.client.TransportClient):Unit", "kind" : "def"}, {"label" : "channelActive", "tail" : "(client: TransportClient): Unit", "member" : "org.apache.spark.network.server.AbstractAuthRpcHandler.channelActive", "link" : "org\/apache\/spark\/network\/server\/AbstractAuthRpcHandler.html#channelActive(client:org.apache.spark.network.client.TransportClient):Unit", "kind" : "def"}, {"label" : "getStreamManager", "tail" : "(): StreamManager", "member" : "org.apache.spark.network.server.AbstractAuthRpcHandler.getStreamManager", "link" : "org\/apache\/spark\/network\/server\/AbstractAuthRpcHandler.html#getStreamManager():org.apache.spark.network.server.StreamManager", "kind" : "def"}, {"label" : "receiveStream", "tail" : "(client: TransportClient, message: ByteBuffer, callback: RpcResponseCallback): StreamCallbackWithID", "member" : "org.apache.spark.network.server.AbstractAuthRpcHandler.receiveStream", "link" : "org\/apache\/spark\/network\/server\/AbstractAuthRpcHandler.html#receiveStream(client:org.apache.spark.network.client.TransportClient,message:java.nio.ByteBuffer,callback:org.apache.spark.network.client.RpcResponseCallback):org.apache.spark.network.client.StreamCallbackWithID", "kind" : "final def"}, {"label" : "receive", "tail" : "(client: TransportClient, message: ByteBuffer): Unit", "member" : "org.apache.spark.network.server.AbstractAuthRpcHandler.receive", "link" : "org\/apache\/spark\/network\/server\/AbstractAuthRpcHandler.html#receive(client:org.apache.spark.network.client.TransportClient,message:java.nio.ByteBuffer):Unit", "kind" : "final def"}, {"label" : "receive", "tail" : "(client: TransportClient, message: ByteBuffer, callback: RpcResponseCallback): Unit", "member" : "org.apache.spark.network.server.AbstractAuthRpcHandler.receive", "link" : "org\/apache\/spark\/network\/server\/AbstractAuthRpcHandler.html#receive(client:org.apache.spark.network.client.TransportClient,message:java.nio.ByteBuffer,callback:org.apache.spark.network.client.RpcResponseCallback):Unit", "kind" : "final def"}, {"member" : "org.apache.spark.network.server.AbstractAuthRpcHandler#<init>", "error" : "unsupported entity"}, {"label" : "synchronized", "tail" : "(arg0: â‡’ T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "org\/apache\/spark\/network\/server\/AbstractAuthRpcHandler.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "org\/apache\/spark\/network\/server\/AbstractAuthRpcHandler.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "org\/apache\/spark\/network\/server\/AbstractAuthRpcHandler.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "org\/apache\/spark\/network\/server\/AbstractAuthRpcHandler.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "org\/apache\/spark\/network\/server\/AbstractAuthRpcHandler.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "org\/apache\/spark\/network\/server\/AbstractAuthRpcHandler.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "org\/apache\/spark\/network\/server\/AbstractAuthRpcHandler.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "org\/apache\/spark\/network\/server\/AbstractAuthRpcHandler.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "org\/apache\/spark\/network\/server\/AbstractAuthRpcHandler.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "org\/apache\/spark\/network\/server\/AbstractAuthRpcHandler.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "org\/apache\/spark\/network\/server\/AbstractAuthRpcHandler.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "org\/apache\/spark\/network\/server\/AbstractAuthRpcHandler.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "org\/apache\/spark\/network\/server\/AbstractAuthRpcHandler.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "org\/apache\/spark\/network\/server\/AbstractAuthRpcHandler.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.equals", "link" : "org\/apache\/spark\/network\/server\/AbstractAuthRpcHandler.html#equals(x$1:Any):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "org\/apache\/spark\/network\/server\/AbstractAuthRpcHandler.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_]", "member" : "scala.AnyRef.getClass", "link" : "org\/apache\/spark\/network\/server\/AbstractAuthRpcHandler.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "org\/apache\/spark\/network\/server\/AbstractAuthRpcHandler.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "org\/apache\/spark\/network\/server\/AbstractAuthRpcHandler.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}, {"label" : "doAuthChallenge", "tail" : "(client: TransportClient, message: ByteBuffer, callback: RpcResponseCallback): Boolean", "member" : "org.apache.spark.network.server.AbstractAuthRpcHandler.doAuthChallenge", "link" : "org\/apache\/spark\/network\/server\/AbstractAuthRpcHandler.html#doAuthChallenge(client:org.apache.spark.network.client.TransportClient,message:java.nio.ByteBuffer,callback:org.apache.spark.network.client.RpcResponseCallback):Boolean", "kind" : "abstract def"}], "class" : "org\/apache\/spark\/network\/server\/AbstractAuthRpcHandler.html", "kind" : "class"}, {"name" : "org.apache.spark.network.server.BlockPushNonFatalFailure", "shortDescription" : "A special RuntimeException thrown when shuffle service experiences a non-fatal failurewith handling block push requests with push-based shuffle.", "members_class" : [{"label" : "getReturnCode", "tail" : "(): ReturnCode", "member" : "org.apache.spark.network.server.BlockPushNonFatalFailure.getReturnCode", "link" : "org\/apache\/spark\/network\/server\/BlockPushNonFatalFailure.html#getReturnCode():org.apache.spark.network.server.BlockPushNonFatalFailure.ReturnCode", "kind" : "def"}, {"label" : "getResponse", "tail" : "(): ByteBuffer", "member" : "org.apache.spark.network.server.BlockPushNonFatalFailure.getResponse", "link" : "org\/apache\/spark\/network\/server\/BlockPushNonFatalFailure.html#getResponse():java.nio.ByteBuffer", "kind" : "def"}, {"label" : "fillInStackTrace", "tail" : "(): Throwable", "member" : "org.apache.spark.network.server.BlockPushNonFatalFailure.fillInStackTrace", "link" : "org\/apache\/spark\/network\/server\/BlockPushNonFatalFailure.html#fillInStackTrace():Throwable", "kind" : "def"}, {"member" : "org.apache.spark.network.server.BlockPushNonFatalFailure#<init>", "error" : "unsupported entity"}, {"member" : "org.apache.spark.network.server.BlockPushNonFatalFailure#<init>", "error" : "unsupported entity"}, {"label" : "getSuppressed", "tail" : "(): Array[Throwable]", "member" : "java.lang.Throwable.getSuppressed", "link" : "org\/apache\/spark\/network\/server\/BlockPushNonFatalFailure.html#getSuppressed():Array[Throwable]", "kind" : "final def"}, {"label" : "addSuppressed", "tail" : "(arg0: Throwable): Unit", "member" : "java.lang.Throwable.addSuppressed", "link" : "org\/apache\/spark\/network\/server\/BlockPushNonFatalFailure.html#addSuppressed(x$1:Throwable):Unit", "kind" : "final def"}, {"label" : "setStackTrace", "tail" : "(arg0: Array[StackTraceElement]): Unit", "member" : "java.lang.Throwable.setStackTrace", "link" : "org\/apache\/spark\/network\/server\/BlockPushNonFatalFailure.html#setStackTrace(x$1:Array[StackTraceElement]):Unit", "kind" : "def"}, {"label" : "getStackTrace", "tail" : "(): Array[StackTraceElement]", "member" : "java.lang.Throwable.getStackTrace", "link" : "org\/apache\/spark\/network\/server\/BlockPushNonFatalFailure.html#getStackTrace():Array[StackTraceElement]", "kind" : "def"}, {"label" : "printStackTrace", "tail" : "(arg0: PrintWriter): Unit", "member" : "java.lang.Throwable.printStackTrace", "link" : "org\/apache\/spark\/network\/server\/BlockPushNonFatalFailure.html#printStackTrace(x$1:java.io.PrintWriter):Unit", "kind" : "def"}, {"label" : "printStackTrace", "tail" : "(arg0: PrintStream): Unit", "member" : "java.lang.Throwable.printStackTrace", "link" : "org\/apache\/spark\/network\/server\/BlockPushNonFatalFailure.html#printStackTrace(x$1:java.io.PrintStream):Unit", "kind" : "def"}, {"label" : "printStackTrace", "tail" : "(): Unit", "member" : "java.lang.Throwable.printStackTrace", "link" : "org\/apache\/spark\/network\/server\/BlockPushNonFatalFailure.html#printStackTrace():Unit", "kind" : "def"}, {"label" : "toString", "tail" : "(): String", "member" : "java.lang.Throwable.toString", "link" : "org\/apache\/spark\/network\/server\/BlockPushNonFatalFailure.html#toString():String", "kind" : "def"}, {"label" : "initCause", "tail" : "(arg0: Throwable): Throwable", "member" : "java.lang.Throwable.initCause", "link" : "org\/apache\/spark\/network\/server\/BlockPushNonFatalFailure.html#initCause(x$1:Throwable):Throwable", "kind" : "def"}, {"label" : "getCause", "tail" : "(): Throwable", "member" : "java.lang.Throwable.getCause", "link" : "org\/apache\/spark\/network\/server\/BlockPushNonFatalFailure.html#getCause():Throwable", "kind" : "def"}, {"label" : "getLocalizedMessage", "tail" : "(): String", "member" : "java.lang.Throwable.getLocalizedMessage", "link" : "org\/apache\/spark\/network\/server\/BlockPushNonFatalFailure.html#getLocalizedMessage():String", "kind" : "def"}, {"label" : "getMessage", "tail" : "(): String", "member" : "java.lang.Throwable.getMessage", "link" : "org\/apache\/spark\/network\/server\/BlockPushNonFatalFailure.html#getMessage():String", "kind" : "def"}, {"label" : "synchronized", "tail" : "(arg0: â‡’ T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "org\/apache\/spark\/network\/server\/BlockPushNonFatalFailure.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "org\/apache\/spark\/network\/server\/BlockPushNonFatalFailure.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "org\/apache\/spark\/network\/server\/BlockPushNonFatalFailure.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "org\/apache\/spark\/network\/server\/BlockPushNonFatalFailure.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "org\/apache\/spark\/network\/server\/BlockPushNonFatalFailure.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "org\/apache\/spark\/network\/server\/BlockPushNonFatalFailure.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "org\/apache\/spark\/network\/server\/BlockPushNonFatalFailure.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "org\/apache\/spark\/network\/server\/BlockPushNonFatalFailure.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "org\/apache\/spark\/network\/server\/BlockPushNonFatalFailure.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "org\/apache\/spark\/network\/server\/BlockPushNonFatalFailure.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "org\/apache\/spark\/network\/server\/BlockPushNonFatalFailure.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "org\/apache\/spark\/network\/server\/BlockPushNonFatalFailure.html#notify():Unit", "kind" : "final def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "org\/apache\/spark\/network\/server\/BlockPushNonFatalFailure.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.equals", "link" : "org\/apache\/spark\/network\/server\/BlockPushNonFatalFailure.html#equals(x$1:Any):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "org\/apache\/spark\/network\/server\/BlockPushNonFatalFailure.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_]", "member" : "scala.AnyRef.getClass", "link" : "org\/apache\/spark\/network\/server\/BlockPushNonFatalFailure.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "org\/apache\/spark\/network\/server\/BlockPushNonFatalFailure.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "org\/apache\/spark\/network\/server\/BlockPushNonFatalFailure.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "class" : "org\/apache\/spark\/network\/server\/BlockPushNonFatalFailure.html", "kind" : "class"}, {"name" : "org.apache.spark.network.server.ChunkFetchRequestHandler", "shortDescription" : "A dedicated ChannelHandler for processing ChunkFetchRequest messages.", "members_class" : [{"label" : "processFetchRequest", "tail" : "(channel: Channel, msg: ChunkFetchRequest): Unit", "member" : "org.apache.spark.network.server.ChunkFetchRequestHandler.processFetchRequest", "link" : "org\/apache\/spark\/network\/server\/ChunkFetchRequestHandler.html#processFetchRequest(channel:io.netty.channel.Channel,msg:org.apache.spark.network.protocol.ChunkFetchRequest):Unit", "kind" : "def"}, {"label" : "channelRead0", "tail" : "(ctx: ChannelHandlerContext, msg: ChunkFetchRequest): Unit", "member" : "org.apache.spark.network.server.ChunkFetchRequestHandler.channelRead0", "link" : "org\/apache\/spark\/network\/server\/ChunkFetchRequestHandler.html#channelRead0(ctx:io.netty.channel.ChannelHandlerContext,msg:org.apache.spark.network.protocol.ChunkFetchRequest):Unit", "kind" : "def"}, {"label" : "exceptionCaught", "tail" : "(ctx: ChannelHandlerContext, cause: Throwable): Unit", "member" : "org.apache.spark.network.server.ChunkFetchRequestHandler.exceptionCaught", "link" : "org\/apache\/spark\/network\/server\/ChunkFetchRequestHandler.html#exceptionCaught(ctx:io.netty.channel.ChannelHandlerContext,cause:Throwable):Unit", "kind" : "def"}, {"member" : "org.apache.spark.network.server.ChunkFetchRequestHandler#<init>", "error" : "unsupported entity"}, {"label" : "channelRead", "tail" : "(arg0: ChannelHandlerContext, arg1: Any): Unit", "member" : "io.netty.channel.SimpleChannelInboundHandler.channelRead", "link" : "org\/apache\/spark\/network\/server\/ChunkFetchRequestHandler.html#channelRead(x$1:io.netty.channel.ChannelHandlerContext,x$2:Any):Unit", "kind" : "def"}, {"label" : "acceptInboundMessage", "tail" : "(arg0: Any): Boolean", "member" : "io.netty.channel.SimpleChannelInboundHandler.acceptInboundMessage", "link" : "org\/apache\/spark\/network\/server\/ChunkFetchRequestHandler.html#acceptInboundMessage(x$1:Any):Boolean", "kind" : "def"}, {"label" : "channelWritabilityChanged", "tail" : "(arg0: ChannelHandlerContext): Unit", "member" : "io.netty.channel.ChannelInboundHandlerAdapter.channelWritabilityChanged", "link" : "org\/apache\/spark\/network\/server\/ChunkFetchRequestHandler.html#channelWritabilityChanged(x$1:io.netty.channel.ChannelHandlerContext):Unit", "kind" : "def"}, {"label" : "userEventTriggered", "tail" : "(arg0: ChannelHandlerContext, arg1: Any): Unit", "member" : "io.netty.channel.ChannelInboundHandlerAdapter.userEventTriggered", "link" : "org\/apache\/spark\/network\/server\/ChunkFetchRequestHandler.html#userEventTriggered(x$1:io.netty.channel.ChannelHandlerContext,x$2:Any):Unit", "kind" : "def"}, {"label" : "channelReadComplete", "tail" : "(arg0: ChannelHandlerContext): Unit", "member" : "io.netty.channel.ChannelInboundHandlerAdapter.channelReadComplete", "link" : "org\/apache\/spark\/network\/server\/ChunkFetchRequestHandler.html#channelReadComplete(x$1:io.netty.channel.ChannelHandlerContext):Unit", "kind" : "def"}, {"label" : "channelInactive", "tail" : "(arg0: ChannelHandlerContext): Unit", "member" : "io.netty.channel.ChannelInboundHandlerAdapter.channelInactive", "link" : "org\/apache\/spark\/network\/server\/ChunkFetchRequestHandler.html#channelInactive(x$1:io.netty.channel.ChannelHandlerContext):Unit", "kind" : "def"}, {"label" : "channelActive", "tail" : "(arg0: ChannelHandlerContext): Unit", "member" : "io.netty.channel.ChannelInboundHandlerAdapter.channelActive", "link" : "org\/apache\/spark\/network\/server\/ChunkFetchRequestHandler.html#channelActive(x$1:io.netty.channel.ChannelHandlerContext):Unit", "kind" : "def"}, {"label" : "channelUnregistered", "tail" : "(arg0: ChannelHandlerContext): Unit", "member" : "io.netty.channel.ChannelInboundHandlerAdapter.channelUnregistered", "link" : "org\/apache\/spark\/network\/server\/ChunkFetchRequestHandler.html#channelUnregistered(x$1:io.netty.channel.ChannelHandlerContext):Unit", "kind" : "def"}, {"label" : "channelRegistered", "tail" : "(arg0: ChannelHandlerContext): Unit", "member" : "io.netty.channel.ChannelInboundHandlerAdapter.channelRegistered", "link" : "org\/apache\/spark\/network\/server\/ChunkFetchRequestHandler.html#channelRegistered(x$1:io.netty.channel.ChannelHandlerContext):Unit", "kind" : "def"}, {"label" : "handlerRemoved", "tail" : "(arg0: ChannelHandlerContext): Unit", "member" : "io.netty.channel.ChannelHandlerAdapter.handlerRemoved", "link" : "org\/apache\/spark\/network\/server\/ChunkFetchRequestHandler.html#handlerRemoved(x$1:io.netty.channel.ChannelHandlerContext):Unit", "kind" : "def"}, {"label" : "handlerAdded", "tail" : "(arg0: ChannelHandlerContext): Unit", "member" : "io.netty.channel.ChannelHandlerAdapter.handlerAdded", "link" : "org\/apache\/spark\/network\/server\/ChunkFetchRequestHandler.html#handlerAdded(x$1:io.netty.channel.ChannelHandlerContext):Unit", "kind" : "def"}, {"label" : "isSharable", "tail" : "(): Boolean", "member" : "io.netty.channel.ChannelHandlerAdapter.isSharable", "link" : "org\/apache\/spark\/network\/server\/ChunkFetchRequestHandler.html#isSharable():Boolean", "kind" : "def"}, {"label" : "ensureNotSharable", "tail" : "(): Unit", "member" : "io.netty.channel.ChannelHandlerAdapter.ensureNotSharable", "link" : "org\/apache\/spark\/network\/server\/ChunkFetchRequestHandler.html#ensureNotSharable():Unit", "kind" : "def"}, {"label" : "synchronized", "tail" : "(arg0: â‡’ T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "org\/apache\/spark\/network\/server\/ChunkFetchRequestHandler.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "org\/apache\/spark\/network\/server\/ChunkFetchRequestHandler.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "org\/apache\/spark\/network\/server\/ChunkFetchRequestHandler.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "org\/apache\/spark\/network\/server\/ChunkFetchRequestHandler.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "org\/apache\/spark\/network\/server\/ChunkFetchRequestHandler.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "org\/apache\/spark\/network\/server\/ChunkFetchRequestHandler.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "org\/apache\/spark\/network\/server\/ChunkFetchRequestHandler.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "org\/apache\/spark\/network\/server\/ChunkFetchRequestHandler.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "org\/apache\/spark\/network\/server\/ChunkFetchRequestHandler.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "org\/apache\/spark\/network\/server\/ChunkFetchRequestHandler.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "org\/apache\/spark\/network\/server\/ChunkFetchRequestHandler.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "org\/apache\/spark\/network\/server\/ChunkFetchRequestHandler.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "org\/apache\/spark\/network\/server\/ChunkFetchRequestHandler.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "org\/apache\/spark\/network\/server\/ChunkFetchRequestHandler.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.equals", "link" : "org\/apache\/spark\/network\/server\/ChunkFetchRequestHandler.html#equals(x$1:Any):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "org\/apache\/spark\/network\/server\/ChunkFetchRequestHandler.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_]", "member" : "scala.AnyRef.getClass", "link" : "org\/apache\/spark\/network\/server\/ChunkFetchRequestHandler.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "org\/apache\/spark\/network\/server\/ChunkFetchRequestHandler.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "org\/apache\/spark\/network\/server\/ChunkFetchRequestHandler.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "class" : "org\/apache\/spark\/network\/server\/ChunkFetchRequestHandler.html", "kind" : "class"}, {"name" : "org.apache.spark.network.server.MessageHandler", "shortDescription" : "Handles either request or response messages coming off of Netty.", "members_class" : [{"member" : "org.apache.spark.network.server.MessageHandler#<init>", "error" : "unsupported entity"}, {"label" : "synchronized", "tail" : "(arg0: â‡’ T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "org\/apache\/spark\/network\/server\/MessageHandler.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "org\/apache\/spark\/network\/server\/MessageHandler.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "org\/apache\/spark\/network\/server\/MessageHandler.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "org\/apache\/spark\/network\/server\/MessageHandler.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "org\/apache\/spark\/network\/server\/MessageHandler.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "org\/apache\/spark\/network\/server\/MessageHandler.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "org\/apache\/spark\/network\/server\/MessageHandler.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "org\/apache\/spark\/network\/server\/MessageHandler.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "org\/apache\/spark\/network\/server\/MessageHandler.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "org\/apache\/spark\/network\/server\/MessageHandler.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "org\/apache\/spark\/network\/server\/MessageHandler.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "org\/apache\/spark\/network\/server\/MessageHandler.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "org\/apache\/spark\/network\/server\/MessageHandler.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "org\/apache\/spark\/network\/server\/MessageHandler.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.equals", "link" : "org\/apache\/spark\/network\/server\/MessageHandler.html#equals(x$1:Any):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "org\/apache\/spark\/network\/server\/MessageHandler.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_]", "member" : "scala.AnyRef.getClass", "link" : "org\/apache\/spark\/network\/server\/MessageHandler.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "org\/apache\/spark\/network\/server\/MessageHandler.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "org\/apache\/spark\/network\/server\/MessageHandler.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}, {"label" : "channelInactive", "tail" : "(): Unit", "member" : "org.apache.spark.network.server.MessageHandler.channelInactive", "link" : "org\/apache\/spark\/network\/server\/MessageHandler.html#channelInactive():Unit", "kind" : "abstract def"}, {"label" : "exceptionCaught", "tail" : "(cause: Throwable): Unit", "member" : "org.apache.spark.network.server.MessageHandler.exceptionCaught", "link" : "org\/apache\/spark\/network\/server\/MessageHandler.html#exceptionCaught(cause:Throwable):Unit", "kind" : "abstract def"}, {"label" : "channelActive", "tail" : "(): Unit", "member" : "org.apache.spark.network.server.MessageHandler.channelActive", "link" : "org\/apache\/spark\/network\/server\/MessageHandler.html#channelActive():Unit", "kind" : "abstract def"}, {"label" : "handle", "tail" : "(message: T): Unit", "member" : "org.apache.spark.network.server.MessageHandler.handle", "link" : "org\/apache\/spark\/network\/server\/MessageHandler.html#handle(message:T):Unit", "kind" : "abstract def"}], "class" : "org\/apache\/spark\/network\/server\/MessageHandler.html", "kind" : "class"}, {"name" : "org.apache.spark.network.server.NoOpRpcHandler", "shortDescription" : "An RpcHandler suitable for a client-only TransportContext, which cannot receive RPCs.", "members_class" : [{"label" : "getStreamManager", "tail" : "(): StreamManager", "member" : "org.apache.spark.network.server.NoOpRpcHandler.getStreamManager", "link" : "org\/apache\/spark\/network\/server\/NoOpRpcHandler.html#getStreamManager():org.apache.spark.network.server.StreamManager", "kind" : "def"}, {"label" : "receive", "tail" : "(client: TransportClient, message: ByteBuffer, callback: RpcResponseCallback): Unit", "member" : "org.apache.spark.network.server.NoOpRpcHandler.receive", "link" : "org\/apache\/spark\/network\/server\/NoOpRpcHandler.html#receive(client:org.apache.spark.network.client.TransportClient,message:java.nio.ByteBuffer,callback:org.apache.spark.network.client.RpcResponseCallback):Unit", "kind" : "def"}, {"member" : "org.apache.spark.network.server.NoOpRpcHandler#<init>", "error" : "unsupported entity"}, {"label" : "exceptionCaught", "tail" : "(cause: Throwable, client: TransportClient): Unit", "member" : "org.apache.spark.network.server.RpcHandler.exceptionCaught", "link" : "org\/apache\/spark\/network\/server\/NoOpRpcHandler.html#exceptionCaught(cause:Throwable,client:org.apache.spark.network.client.TransportClient):Unit", "kind" : "def"}, {"label" : "channelInactive", "tail" : "(client: TransportClient): Unit", "member" : "org.apache.spark.network.server.RpcHandler.channelInactive", "link" : "org\/apache\/spark\/network\/server\/NoOpRpcHandler.html#channelInactive(client:org.apache.spark.network.client.TransportClient):Unit", "kind" : "def"}, {"label" : "channelActive", "tail" : "(client: TransportClient): Unit", "member" : "org.apache.spark.network.server.RpcHandler.channelActive", "link" : "org\/apache\/spark\/network\/server\/NoOpRpcHandler.html#channelActive(client:org.apache.spark.network.client.TransportClient):Unit", "kind" : "def"}, {"label" : "getMergedBlockMetaReqHandler", "tail" : "(): MergedBlockMetaReqHandler", "member" : "org.apache.spark.network.server.RpcHandler.getMergedBlockMetaReqHandler", "link" : "org\/apache\/spark\/network\/server\/NoOpRpcHandler.html#getMergedBlockMetaReqHandler():org.apache.spark.network.server.RpcHandler.MergedBlockMetaReqHandler", "kind" : "def"}, {"label" : "receive", "tail" : "(client: TransportClient, message: ByteBuffer): Unit", "member" : "org.apache.spark.network.server.RpcHandler.receive", "link" : "org\/apache\/spark\/network\/server\/NoOpRpcHandler.html#receive(client:org.apache.spark.network.client.TransportClient,message:java.nio.ByteBuffer):Unit", "kind" : "def"}, {"label" : "receiveStream", "tail" : "(client: TransportClient, messageHeader: ByteBuffer, callback: RpcResponseCallback): StreamCallbackWithID", "member" : "org.apache.spark.network.server.RpcHandler.receiveStream", "link" : "org\/apache\/spark\/network\/server\/NoOpRpcHandler.html#receiveStream(client:org.apache.spark.network.client.TransportClient,messageHeader:java.nio.ByteBuffer,callback:org.apache.spark.network.client.RpcResponseCallback):org.apache.spark.network.client.StreamCallbackWithID", "kind" : "def"}, {"label" : "synchronized", "tail" : "(arg0: â‡’ T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "org\/apache\/spark\/network\/server\/NoOpRpcHandler.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "org\/apache\/spark\/network\/server\/NoOpRpcHandler.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "org\/apache\/spark\/network\/server\/NoOpRpcHandler.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "org\/apache\/spark\/network\/server\/NoOpRpcHandler.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "org\/apache\/spark\/network\/server\/NoOpRpcHandler.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "org\/apache\/spark\/network\/server\/NoOpRpcHandler.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "org\/apache\/spark\/network\/server\/NoOpRpcHandler.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "org\/apache\/spark\/network\/server\/NoOpRpcHandler.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "org\/apache\/spark\/network\/server\/NoOpRpcHandler.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "org\/apache\/spark\/network\/server\/NoOpRpcHandler.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "org\/apache\/spark\/network\/server\/NoOpRpcHandler.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "org\/apache\/spark\/network\/server\/NoOpRpcHandler.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "org\/apache\/spark\/network\/server\/NoOpRpcHandler.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "org\/apache\/spark\/network\/server\/NoOpRpcHandler.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.equals", "link" : "org\/apache\/spark\/network\/server\/NoOpRpcHandler.html#equals(x$1:Any):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "org\/apache\/spark\/network\/server\/NoOpRpcHandler.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_]", "member" : "scala.AnyRef.getClass", "link" : "org\/apache\/spark\/network\/server\/NoOpRpcHandler.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "org\/apache\/spark\/network\/server\/NoOpRpcHandler.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "org\/apache\/spark\/network\/server\/NoOpRpcHandler.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "class" : "org\/apache\/spark\/network\/server\/NoOpRpcHandler.html", "kind" : "class"}, {"name" : "org.apache.spark.network.server.OneForOneStreamManager", "shortDescription" : "StreamManager which allows registration of an Iterator&lt;ManagedBuffer&gt;, which areindividually fetched as chunks by the client.", "members_class" : [{"label" : "numStreamStates", "tail" : "(): Int", "member" : "org.apache.spark.network.server.OneForOneStreamManager.numStreamStates", "link" : "org\/apache\/spark\/network\/server\/OneForOneStreamManager.html#numStreamStates():Int", "kind" : "def"}, {"label" : "registerStream", "tail" : "(appId: String, buffers: Iterator[ManagedBuffer], channel: Channel): Long", "member" : "org.apache.spark.network.server.OneForOneStreamManager.registerStream", "link" : "org\/apache\/spark\/network\/server\/OneForOneStreamManager.html#registerStream(appId:String,buffers:java.util.Iterator[org.apache.spark.network.buffer.ManagedBuffer],channel:io.netty.channel.Channel):Long", "kind" : "def"}, {"label" : "chunksBeingTransferred", "tail" : "(): Long", "member" : "org.apache.spark.network.server.OneForOneStreamManager.chunksBeingTransferred", "link" : "org\/apache\/spark\/network\/server\/OneForOneStreamManager.html#chunksBeingTransferred():Long", "kind" : "def"}, {"label" : "streamSent", "tail" : "(streamId: String): Unit", "member" : "org.apache.spark.network.server.OneForOneStreamManager.streamSent", "link" : "org\/apache\/spark\/network\/server\/OneForOneStreamManager.html#streamSent(streamId:String):Unit", "kind" : "def"}, {"label" : "chunkSent", "tail" : "(streamId: Long): Unit", "member" : "org.apache.spark.network.server.OneForOneStreamManager.chunkSent", "link" : "org\/apache\/spark\/network\/server\/OneForOneStreamManager.html#chunkSent(streamId:Long):Unit", "kind" : "def"}, {"label" : "streamBeingSent", "tail" : "(streamId: String): Unit", "member" : "org.apache.spark.network.server.OneForOneStreamManager.streamBeingSent", "link" : "org\/apache\/spark\/network\/server\/OneForOneStreamManager.html#streamBeingSent(streamId:String):Unit", "kind" : "def"}, {"label" : "chunkBeingSent", "tail" : "(streamId: Long): Unit", "member" : "org.apache.spark.network.server.OneForOneStreamManager.chunkBeingSent", "link" : "org\/apache\/spark\/network\/server\/OneForOneStreamManager.html#chunkBeingSent(streamId:Long):Unit", "kind" : "def"}, {"label" : "checkAuthorization", "tail" : "(client: TransportClient, streamId: Long): Unit", "member" : "org.apache.spark.network.server.OneForOneStreamManager.checkAuthorization", "link" : "org\/apache\/spark\/network\/server\/OneForOneStreamManager.html#checkAuthorization(client:org.apache.spark.network.client.TransportClient,streamId:Long):Unit", "kind" : "def"}, {"label" : "connectionTerminated", "tail" : "(channel: Channel): Unit", "member" : "org.apache.spark.network.server.OneForOneStreamManager.connectionTerminated", "link" : "org\/apache\/spark\/network\/server\/OneForOneStreamManager.html#connectionTerminated(channel:io.netty.channel.Channel):Unit", "kind" : "def"}, {"label" : "openStream", "tail" : "(streamChunkId: String): ManagedBuffer", "member" : "org.apache.spark.network.server.OneForOneStreamManager.openStream", "link" : "org\/apache\/spark\/network\/server\/OneForOneStreamManager.html#openStream(streamChunkId:String):org.apache.spark.network.buffer.ManagedBuffer", "kind" : "def"}, {"label" : "getChunk", "tail" : "(streamId: Long, chunkIndex: Int): ManagedBuffer", "member" : "org.apache.spark.network.server.OneForOneStreamManager.getChunk", "link" : "org\/apache\/spark\/network\/server\/OneForOneStreamManager.html#getChunk(streamId:Long,chunkIndex:Int):org.apache.spark.network.buffer.ManagedBuffer", "kind" : "def"}, {"member" : "org.apache.spark.network.server.OneForOneStreamManager#<init>", "error" : "unsupported entity"}, {"label" : "synchronized", "tail" : "(arg0: â‡’ T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "org\/apache\/spark\/network\/server\/OneForOneStreamManager.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "org\/apache\/spark\/network\/server\/OneForOneStreamManager.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "org\/apache\/spark\/network\/server\/OneForOneStreamManager.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "org\/apache\/spark\/network\/server\/OneForOneStreamManager.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "org\/apache\/spark\/network\/server\/OneForOneStreamManager.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "org\/apache\/spark\/network\/server\/OneForOneStreamManager.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "org\/apache\/spark\/network\/server\/OneForOneStreamManager.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "org\/apache\/spark\/network\/server\/OneForOneStreamManager.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "org\/apache\/spark\/network\/server\/OneForOneStreamManager.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "org\/apache\/spark\/network\/server\/OneForOneStreamManager.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "org\/apache\/spark\/network\/server\/OneForOneStreamManager.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "org\/apache\/spark\/network\/server\/OneForOneStreamManager.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "org\/apache\/spark\/network\/server\/OneForOneStreamManager.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "org\/apache\/spark\/network\/server\/OneForOneStreamManager.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.equals", "link" : "org\/apache\/spark\/network\/server\/OneForOneStreamManager.html#equals(x$1:Any):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "org\/apache\/spark\/network\/server\/OneForOneStreamManager.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_]", "member" : "scala.AnyRef.getClass", "link" : "org\/apache\/spark\/network\/server\/OneForOneStreamManager.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "org\/apache\/spark\/network\/server\/OneForOneStreamManager.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "org\/apache\/spark\/network\/server\/OneForOneStreamManager.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "class" : "org\/apache\/spark\/network\/server\/OneForOneStreamManager.html", "kind" : "class"}, {"name" : "org.apache.spark.network.server.RpcHandler", "shortDescription" : "Handler for sendRPC() messages sent by org.apache.spark.network.client.TransportClients.", "members_class" : [{"label" : "exceptionCaught", "tail" : "(cause: Throwable, client: TransportClient): Unit", "member" : "org.apache.spark.network.server.RpcHandler.exceptionCaught", "link" : "org\/apache\/spark\/network\/server\/RpcHandler.html#exceptionCaught(cause:Throwable,client:org.apache.spark.network.client.TransportClient):Unit", "kind" : "def"}, {"label" : "channelInactive", "tail" : "(client: TransportClient): Unit", "member" : "org.apache.spark.network.server.RpcHandler.channelInactive", "link" : "org\/apache\/spark\/network\/server\/RpcHandler.html#channelInactive(client:org.apache.spark.network.client.TransportClient):Unit", "kind" : "def"}, {"label" : "channelActive", "tail" : "(client: TransportClient): Unit", "member" : "org.apache.spark.network.server.RpcHandler.channelActive", "link" : "org\/apache\/spark\/network\/server\/RpcHandler.html#channelActive(client:org.apache.spark.network.client.TransportClient):Unit", "kind" : "def"}, {"label" : "getMergedBlockMetaReqHandler", "tail" : "(): MergedBlockMetaReqHandler", "member" : "org.apache.spark.network.server.RpcHandler.getMergedBlockMetaReqHandler", "link" : "org\/apache\/spark\/network\/server\/RpcHandler.html#getMergedBlockMetaReqHandler():org.apache.spark.network.server.RpcHandler.MergedBlockMetaReqHandler", "kind" : "def"}, {"label" : "receive", "tail" : "(client: TransportClient, message: ByteBuffer): Unit", "member" : "org.apache.spark.network.server.RpcHandler.receive", "link" : "org\/apache\/spark\/network\/server\/RpcHandler.html#receive(client:org.apache.spark.network.client.TransportClient,message:java.nio.ByteBuffer):Unit", "kind" : "def"}, {"label" : "receiveStream", "tail" : "(client: TransportClient, messageHeader: ByteBuffer, callback: RpcResponseCallback): StreamCallbackWithID", "member" : "org.apache.spark.network.server.RpcHandler.receiveStream", "link" : "org\/apache\/spark\/network\/server\/RpcHandler.html#receiveStream(client:org.apache.spark.network.client.TransportClient,messageHeader:java.nio.ByteBuffer,callback:org.apache.spark.network.client.RpcResponseCallback):org.apache.spark.network.client.StreamCallbackWithID", "kind" : "def"}, {"member" : "org.apache.spark.network.server.RpcHandler#<init>", "error" : "unsupported entity"}, {"label" : "synchronized", "tail" : "(arg0: â‡’ T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "org\/apache\/spark\/network\/server\/RpcHandler.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "org\/apache\/spark\/network\/server\/RpcHandler.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "org\/apache\/spark\/network\/server\/RpcHandler.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "org\/apache\/spark\/network\/server\/RpcHandler.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "org\/apache\/spark\/network\/server\/RpcHandler.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "org\/apache\/spark\/network\/server\/RpcHandler.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "org\/apache\/spark\/network\/server\/RpcHandler.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "org\/apache\/spark\/network\/server\/RpcHandler.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "org\/apache\/spark\/network\/server\/RpcHandler.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "org\/apache\/spark\/network\/server\/RpcHandler.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "org\/apache\/spark\/network\/server\/RpcHandler.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "org\/apache\/spark\/network\/server\/RpcHandler.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "org\/apache\/spark\/network\/server\/RpcHandler.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "org\/apache\/spark\/network\/server\/RpcHandler.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.equals", "link" : "org\/apache\/spark\/network\/server\/RpcHandler.html#equals(x$1:Any):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "org\/apache\/spark\/network\/server\/RpcHandler.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_]", "member" : "scala.AnyRef.getClass", "link" : "org\/apache\/spark\/network\/server\/RpcHandler.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "org\/apache\/spark\/network\/server\/RpcHandler.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "org\/apache\/spark\/network\/server\/RpcHandler.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}, {"label" : "getStreamManager", "tail" : "(): StreamManager", "member" : "org.apache.spark.network.server.RpcHandler.getStreamManager", "link" : "org\/apache\/spark\/network\/server\/RpcHandler.html#getStreamManager():org.apache.spark.network.server.StreamManager", "kind" : "abstract def"}, {"label" : "receive", "tail" : "(client: TransportClient, message: ByteBuffer, callback: RpcResponseCallback): Unit", "member" : "org.apache.spark.network.server.RpcHandler.receive", "link" : "org\/apache\/spark\/network\/server\/RpcHandler.html#receive(client:org.apache.spark.network.client.TransportClient,message:java.nio.ByteBuffer,callback:org.apache.spark.network.client.RpcResponseCallback):Unit", "kind" : "abstract def"}], "class" : "org\/apache\/spark\/network\/server\/RpcHandler.html", "kind" : "class"}, {"name" : "org.apache.spark.network.server.StreamManager", "shortDescription" : "The StreamManager is used to fetch individual chunks from a stream.", "members_class" : [{"label" : "streamSent", "tail" : "(streamId: String): Unit", "member" : "org.apache.spark.network.server.StreamManager.streamSent", "link" : "org\/apache\/spark\/network\/server\/StreamManager.html#streamSent(streamId:String):Unit", "kind" : "def"}, {"label" : "chunkSent", "tail" : "(streamId: Long): Unit", "member" : "org.apache.spark.network.server.StreamManager.chunkSent", "link" : "org\/apache\/spark\/network\/server\/StreamManager.html#chunkSent(streamId:Long):Unit", "kind" : "def"}, {"label" : "streamBeingSent", "tail" : "(streamId: String): Unit", "member" : "org.apache.spark.network.server.StreamManager.streamBeingSent", "link" : "org\/apache\/spark\/network\/server\/StreamManager.html#streamBeingSent(streamId:String):Unit", "kind" : "def"}, {"label" : "chunkBeingSent", "tail" : "(streamId: Long): Unit", "member" : "org.apache.spark.network.server.StreamManager.chunkBeingSent", "link" : "org\/apache\/spark\/network\/server\/StreamManager.html#chunkBeingSent(streamId:Long):Unit", "kind" : "def"}, {"label" : "chunksBeingTransferred", "tail" : "(): Long", "member" : "org.apache.spark.network.server.StreamManager.chunksBeingTransferred", "link" : "org\/apache\/spark\/network\/server\/StreamManager.html#chunksBeingTransferred():Long", "kind" : "def"}, {"label" : "checkAuthorization", "tail" : "(client: TransportClient, streamId: Long): Unit", "member" : "org.apache.spark.network.server.StreamManager.checkAuthorization", "link" : "org\/apache\/spark\/network\/server\/StreamManager.html#checkAuthorization(client:org.apache.spark.network.client.TransportClient,streamId:Long):Unit", "kind" : "def"}, {"label" : "connectionTerminated", "tail" : "(channel: Channel): Unit", "member" : "org.apache.spark.network.server.StreamManager.connectionTerminated", "link" : "org\/apache\/spark\/network\/server\/StreamManager.html#connectionTerminated(channel:io.netty.channel.Channel):Unit", "kind" : "def"}, {"label" : "openStream", "tail" : "(streamId: String): ManagedBuffer", "member" : "org.apache.spark.network.server.StreamManager.openStream", "link" : "org\/apache\/spark\/network\/server\/StreamManager.html#openStream(streamId:String):org.apache.spark.network.buffer.ManagedBuffer", "kind" : "def"}, {"member" : "org.apache.spark.network.server.StreamManager#<init>", "error" : "unsupported entity"}, {"label" : "synchronized", "tail" : "(arg0: â‡’ T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "org\/apache\/spark\/network\/server\/StreamManager.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "org\/apache\/spark\/network\/server\/StreamManager.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "org\/apache\/spark\/network\/server\/StreamManager.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "org\/apache\/spark\/network\/server\/StreamManager.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "org\/apache\/spark\/network\/server\/StreamManager.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "org\/apache\/spark\/network\/server\/StreamManager.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "org\/apache\/spark\/network\/server\/StreamManager.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "org\/apache\/spark\/network\/server\/StreamManager.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "org\/apache\/spark\/network\/server\/StreamManager.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "org\/apache\/spark\/network\/server\/StreamManager.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "org\/apache\/spark\/network\/server\/StreamManager.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "org\/apache\/spark\/network\/server\/StreamManager.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "org\/apache\/spark\/network\/server\/StreamManager.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "org\/apache\/spark\/network\/server\/StreamManager.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.equals", "link" : "org\/apache\/spark\/network\/server\/StreamManager.html#equals(x$1:Any):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "org\/apache\/spark\/network\/server\/StreamManager.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_]", "member" : "scala.AnyRef.getClass", "link" : "org\/apache\/spark\/network\/server\/StreamManager.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "org\/apache\/spark\/network\/server\/StreamManager.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "org\/apache\/spark\/network\/server\/StreamManager.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}, {"label" : "getChunk", "tail" : "(streamId: Long, chunkIndex: Int): ManagedBuffer", "member" : "org.apache.spark.network.server.StreamManager.getChunk", "link" : "org\/apache\/spark\/network\/server\/StreamManager.html#getChunk(streamId:Long,chunkIndex:Int):org.apache.spark.network.buffer.ManagedBuffer", "kind" : "abstract def"}], "class" : "org\/apache\/spark\/network\/server\/StreamManager.html", "kind" : "class"}, {"name" : "org.apache.spark.network.server.TransportChannelHandler", "shortDescription" : "The single Transport-level Channel handler which is used for delegating requests to theTransportRequestHandler and responses to the TransportResponseHandler.", "members_class" : [{"label" : "channelUnregistered", "tail" : "(ctx: ChannelHandlerContext): Unit", "member" : "org.apache.spark.network.server.TransportChannelHandler.channelUnregistered", "link" : "org\/apache\/spark\/network\/server\/TransportChannelHandler.html#channelUnregistered(ctx:io.netty.channel.ChannelHandlerContext):Unit", "kind" : "def"}, {"label" : "channelRegistered", "tail" : "(ctx: ChannelHandlerContext): Unit", "member" : "org.apache.spark.network.server.TransportChannelHandler.channelRegistered", "link" : "org\/apache\/spark\/network\/server\/TransportChannelHandler.html#channelRegistered(ctx:io.netty.channel.ChannelHandlerContext):Unit", "kind" : "def"}, {"label" : "getResponseHandler", "tail" : "(): TransportResponseHandler", "member" : "org.apache.spark.network.server.TransportChannelHandler.getResponseHandler", "link" : "org\/apache\/spark\/network\/server\/TransportChannelHandler.html#getResponseHandler():org.apache.spark.network.client.TransportResponseHandler", "kind" : "def"}, {"label" : "userEventTriggered", "tail" : "(ctx: ChannelHandlerContext, evt: Any): Unit", "member" : "org.apache.spark.network.server.TransportChannelHandler.userEventTriggered", "link" : "org\/apache\/spark\/network\/server\/TransportChannelHandler.html#userEventTriggered(ctx:io.netty.channel.ChannelHandlerContext,evt:Any):Unit", "kind" : "def"}, {"label" : "channelRead0", "tail" : "(ctx: ChannelHandlerContext, request: Message): Unit", "member" : "org.apache.spark.network.server.TransportChannelHandler.channelRead0", "link" : "org\/apache\/spark\/network\/server\/TransportChannelHandler.html#channelRead0(ctx:io.netty.channel.ChannelHandlerContext,request:org.apache.spark.network.protocol.Message):Unit", "kind" : "def"}, {"label" : "acceptInboundMessage", "tail" : "(msg: Any): Boolean", "member" : "org.apache.spark.network.server.TransportChannelHandler.acceptInboundMessage", "link" : "org\/apache\/spark\/network\/server\/TransportChannelHandler.html#acceptInboundMessage(msg:Any):Boolean", "kind" : "def"}, {"label" : "channelInactive", "tail" : "(ctx: ChannelHandlerContext): Unit", "member" : "org.apache.spark.network.server.TransportChannelHandler.channelInactive", "link" : "org\/apache\/spark\/network\/server\/TransportChannelHandler.html#channelInactive(ctx:io.netty.channel.ChannelHandlerContext):Unit", "kind" : "def"}, {"label" : "channelActive", "tail" : "(ctx: ChannelHandlerContext): Unit", "member" : "org.apache.spark.network.server.TransportChannelHandler.channelActive", "link" : "org\/apache\/spark\/network\/server\/TransportChannelHandler.html#channelActive(ctx:io.netty.channel.ChannelHandlerContext):Unit", "kind" : "def"}, {"label" : "exceptionCaught", "tail" : "(ctx: ChannelHandlerContext, cause: Throwable): Unit", "member" : "org.apache.spark.network.server.TransportChannelHandler.exceptionCaught", "link" : "org\/apache\/spark\/network\/server\/TransportChannelHandler.html#exceptionCaught(ctx:io.netty.channel.ChannelHandlerContext,cause:Throwable):Unit", "kind" : "def"}, {"label" : "getClient", "tail" : "(): TransportClient", "member" : "org.apache.spark.network.server.TransportChannelHandler.getClient", "link" : "org\/apache\/spark\/network\/server\/TransportChannelHandler.html#getClient():org.apache.spark.network.client.TransportClient", "kind" : "def"}, {"member" : "org.apache.spark.network.server.TransportChannelHandler#<init>", "error" : "unsupported entity"}, {"label" : "channelRead", "tail" : "(arg0: ChannelHandlerContext, arg1: Any): Unit", "member" : "io.netty.channel.SimpleChannelInboundHandler.channelRead", "link" : "org\/apache\/spark\/network\/server\/TransportChannelHandler.html#channelRead(x$1:io.netty.channel.ChannelHandlerContext,x$2:Any):Unit", "kind" : "def"}, {"label" : "channelWritabilityChanged", "tail" : "(arg0: ChannelHandlerContext): Unit", "member" : "io.netty.channel.ChannelInboundHandlerAdapter.channelWritabilityChanged", "link" : "org\/apache\/spark\/network\/server\/TransportChannelHandler.html#channelWritabilityChanged(x$1:io.netty.channel.ChannelHandlerContext):Unit", "kind" : "def"}, {"label" : "channelReadComplete", "tail" : "(arg0: ChannelHandlerContext): Unit", "member" : "io.netty.channel.ChannelInboundHandlerAdapter.channelReadComplete", "link" : "org\/apache\/spark\/network\/server\/TransportChannelHandler.html#channelReadComplete(x$1:io.netty.channel.ChannelHandlerContext):Unit", "kind" : "def"}, {"label" : "handlerRemoved", "tail" : "(arg0: ChannelHandlerContext): Unit", "member" : "io.netty.channel.ChannelHandlerAdapter.handlerRemoved", "link" : "org\/apache\/spark\/network\/server\/TransportChannelHandler.html#handlerRemoved(x$1:io.netty.channel.ChannelHandlerContext):Unit", "kind" : "def"}, {"label" : "handlerAdded", "tail" : "(arg0: ChannelHandlerContext): Unit", "member" : "io.netty.channel.ChannelHandlerAdapter.handlerAdded", "link" : "org\/apache\/spark\/network\/server\/TransportChannelHandler.html#handlerAdded(x$1:io.netty.channel.ChannelHandlerContext):Unit", "kind" : "def"}, {"label" : "isSharable", "tail" : "(): Boolean", "member" : "io.netty.channel.ChannelHandlerAdapter.isSharable", "link" : "org\/apache\/spark\/network\/server\/TransportChannelHandler.html#isSharable():Boolean", "kind" : "def"}, {"label" : "ensureNotSharable", "tail" : "(): Unit", "member" : "io.netty.channel.ChannelHandlerAdapter.ensureNotSharable", "link" : "org\/apache\/spark\/network\/server\/TransportChannelHandler.html#ensureNotSharable():Unit", "kind" : "def"}, {"label" : "synchronized", "tail" : "(arg0: â‡’ T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "org\/apache\/spark\/network\/server\/TransportChannelHandler.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "org\/apache\/spark\/network\/server\/TransportChannelHandler.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "org\/apache\/spark\/network\/server\/TransportChannelHandler.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "org\/apache\/spark\/network\/server\/TransportChannelHandler.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "org\/apache\/spark\/network\/server\/TransportChannelHandler.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "org\/apache\/spark\/network\/server\/TransportChannelHandler.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "org\/apache\/spark\/network\/server\/TransportChannelHandler.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "org\/apache\/spark\/network\/server\/TransportChannelHandler.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "org\/apache\/spark\/network\/server\/TransportChannelHandler.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "org\/apache\/spark\/network\/server\/TransportChannelHandler.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "org\/apache\/spark\/network\/server\/TransportChannelHandler.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "org\/apache\/spark\/network\/server\/TransportChannelHandler.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "org\/apache\/spark\/network\/server\/TransportChannelHandler.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "org\/apache\/spark\/network\/server\/TransportChannelHandler.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.equals", "link" : "org\/apache\/spark\/network\/server\/TransportChannelHandler.html#equals(x$1:Any):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "org\/apache\/spark\/network\/server\/TransportChannelHandler.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_]", "member" : "scala.AnyRef.getClass", "link" : "org\/apache\/spark\/network\/server\/TransportChannelHandler.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "org\/apache\/spark\/network\/server\/TransportChannelHandler.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "org\/apache\/spark\/network\/server\/TransportChannelHandler.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "class" : "org\/apache\/spark\/network\/server\/TransportChannelHandler.html", "kind" : "class"}, {"name" : "org.apache.spark.network.server.TransportRequestHandler", "shortDescription" : "A handler that processes requests from clients and writes chunk data back.", "members_class" : [{"label" : "handle", "tail" : "(request: RequestMessage): Unit", "member" : "org.apache.spark.network.server.TransportRequestHandler.handle", "link" : "org\/apache\/spark\/network\/server\/TransportRequestHandler.html#handle(request:org.apache.spark.network.protocol.RequestMessage):Unit", "kind" : "def"}, {"label" : "channelInactive", "tail" : "(): Unit", "member" : "org.apache.spark.network.server.TransportRequestHandler.channelInactive", "link" : "org\/apache\/spark\/network\/server\/TransportRequestHandler.html#channelInactive():Unit", "kind" : "def"}, {"label" : "channelActive", "tail" : "(): Unit", "member" : "org.apache.spark.network.server.TransportRequestHandler.channelActive", "link" : "org\/apache\/spark\/network\/server\/TransportRequestHandler.html#channelActive():Unit", "kind" : "def"}, {"label" : "exceptionCaught", "tail" : "(cause: Throwable): Unit", "member" : "org.apache.spark.network.server.TransportRequestHandler.exceptionCaught", "link" : "org\/apache\/spark\/network\/server\/TransportRequestHandler.html#exceptionCaught(cause:Throwable):Unit", "kind" : "def"}, {"member" : "org.apache.spark.network.server.TransportRequestHandler#<init>", "error" : "unsupported entity"}, {"label" : "synchronized", "tail" : "(arg0: â‡’ T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "org\/apache\/spark\/network\/server\/TransportRequestHandler.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "org\/apache\/spark\/network\/server\/TransportRequestHandler.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "org\/apache\/spark\/network\/server\/TransportRequestHandler.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "org\/apache\/spark\/network\/server\/TransportRequestHandler.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "org\/apache\/spark\/network\/server\/TransportRequestHandler.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "org\/apache\/spark\/network\/server\/TransportRequestHandler.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "org\/apache\/spark\/network\/server\/TransportRequestHandler.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "org\/apache\/spark\/network\/server\/TransportRequestHandler.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "org\/apache\/spark\/network\/server\/TransportRequestHandler.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "org\/apache\/spark\/network\/server\/TransportRequestHandler.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "org\/apache\/spark\/network\/server\/TransportRequestHandler.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "org\/apache\/spark\/network\/server\/TransportRequestHandler.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "org\/apache\/spark\/network\/server\/TransportRequestHandler.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "org\/apache\/spark\/network\/server\/TransportRequestHandler.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.equals", "link" : "org\/apache\/spark\/network\/server\/TransportRequestHandler.html#equals(x$1:Any):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "org\/apache\/spark\/network\/server\/TransportRequestHandler.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_]", "member" : "scala.AnyRef.getClass", "link" : "org\/apache\/spark\/network\/server\/TransportRequestHandler.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "org\/apache\/spark\/network\/server\/TransportRequestHandler.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "org\/apache\/spark\/network\/server\/TransportRequestHandler.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "class" : "org\/apache\/spark\/network\/server\/TransportRequestHandler.html", "kind" : "class"}, {"name" : "org.apache.spark.network.server.TransportServer", "shortDescription" : "Server for the efficient, low-level streaming service.", "members_class" : [{"label" : "getRegisteredConnections", "tail" : "(): Counter", "member" : "org.apache.spark.network.server.TransportServer.getRegisteredConnections", "link" : "org\/apache\/spark\/network\/server\/TransportServer.html#getRegisteredConnections():com.codahale.metrics.Counter", "kind" : "def"}, {"label" : "close", "tail" : "(): Unit", "member" : "org.apache.spark.network.server.TransportServer.close", "link" : "org\/apache\/spark\/network\/server\/TransportServer.html#close():Unit", "kind" : "def"}, {"label" : "getAllMetrics", "tail" : "(): MetricSet", "member" : "org.apache.spark.network.server.TransportServer.getAllMetrics", "link" : "org\/apache\/spark\/network\/server\/TransportServer.html#getAllMetrics():com.codahale.metrics.MetricSet", "kind" : "def"}, {"label" : "getPort", "tail" : "(): Int", "member" : "org.apache.spark.network.server.TransportServer.getPort", "link" : "org\/apache\/spark\/network\/server\/TransportServer.html#getPort():Int", "kind" : "def"}, {"member" : "org.apache.spark.network.server.TransportServer#<init>", "error" : "unsupported entity"}, {"label" : "synchronized", "tail" : "(arg0: â‡’ T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "org\/apache\/spark\/network\/server\/TransportServer.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "org\/apache\/spark\/network\/server\/TransportServer.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "org\/apache\/spark\/network\/server\/TransportServer.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "org\/apache\/spark\/network\/server\/TransportServer.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "org\/apache\/spark\/network\/server\/TransportServer.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "org\/apache\/spark\/network\/server\/TransportServer.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "org\/apache\/spark\/network\/server\/TransportServer.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "org\/apache\/spark\/network\/server\/TransportServer.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "org\/apache\/spark\/network\/server\/TransportServer.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "org\/apache\/spark\/network\/server\/TransportServer.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "org\/apache\/spark\/network\/server\/TransportServer.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "org\/apache\/spark\/network\/server\/TransportServer.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "org\/apache\/spark\/network\/server\/TransportServer.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "org\/apache\/spark\/network\/server\/TransportServer.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.equals", "link" : "org\/apache\/spark\/network\/server\/TransportServer.html#equals(x$1:Any):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "org\/apache\/spark\/network\/server\/TransportServer.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_]", "member" : "scala.AnyRef.getClass", "link" : "org\/apache\/spark\/network\/server\/TransportServer.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "org\/apache\/spark\/network\/server\/TransportServer.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "org\/apache\/spark\/network\/server\/TransportServer.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "class" : "org\/apache\/spark\/network\/server\/TransportServer.html", "kind" : "class"}, {"name" : "org.apache.spark.network.server.TransportServerBootstrap", "members_trait" : [{"member" : "org.apache.spark.network.server.TransportServerBootstrap#<init>", "error" : "unsupported entity"}, {"label" : "synchronized", "tail" : "(arg0: â‡’ T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "org\/apache\/spark\/network\/server\/TransportServerBootstrap.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "org\/apache\/spark\/network\/server\/TransportServerBootstrap.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "org\/apache\/spark\/network\/server\/TransportServerBootstrap.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "org\/apache\/spark\/network\/server\/TransportServerBootstrap.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "org\/apache\/spark\/network\/server\/TransportServerBootstrap.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "org\/apache\/spark\/network\/server\/TransportServerBootstrap.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "org\/apache\/spark\/network\/server\/TransportServerBootstrap.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "org\/apache\/spark\/network\/server\/TransportServerBootstrap.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "org\/apache\/spark\/network\/server\/TransportServerBootstrap.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "org\/apache\/spark\/network\/server\/TransportServerBootstrap.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "org\/apache\/spark\/network\/server\/TransportServerBootstrap.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "org\/apache\/spark\/network\/server\/TransportServerBootstrap.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "org\/apache\/spark\/network\/server\/TransportServerBootstrap.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "org\/apache\/spark\/network\/server\/TransportServerBootstrap.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.equals", "link" : "org\/apache\/spark\/network\/server\/TransportServerBootstrap.html#equals(x$1:Any):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "org\/apache\/spark\/network\/server\/TransportServerBootstrap.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_]", "member" : "scala.AnyRef.getClass", "link" : "org\/apache\/spark\/network\/server\/TransportServerBootstrap.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "org\/apache\/spark\/network\/server\/TransportServerBootstrap.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "org\/apache\/spark\/network\/server\/TransportServerBootstrap.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}, {"label" : "doBootstrap", "tail" : "(channel: Channel, rpcHandler: RpcHandler): RpcHandler", "member" : "org.apache.spark.network.server.TransportServerBootstrap.doBootstrap", "link" : "org\/apache\/spark\/network\/server\/TransportServerBootstrap.html#doBootstrap(channel:io.netty.channel.Channel,rpcHandler:org.apache.spark.network.server.RpcHandler):org.apache.spark.network.server.RpcHandler", "kind" : "abstract def"}], "shortDescription" : "A bootstrap which is executed on a TransportServer's client channel once a client connectsto the server.", "trait" : "org\/apache\/spark\/network\/server\/TransportServerBootstrap.html", "kind" : "trait"}], "org.apache.spark.network.crypto" : [{"name" : "org.apache.spark.network.crypto.AuthClientBootstrap", "shortDescription" : "Bootstraps a TransportClient by performing authentication using Spark's auth protocol.", "members_class" : [{"label" : "doBootstrap", "tail" : "(client: TransportClient, channel: Channel): Unit", "member" : "org.apache.spark.network.crypto.AuthClientBootstrap.doBootstrap", "link" : "org\/apache\/spark\/network\/crypto\/AuthClientBootstrap.html#doBootstrap(client:org.apache.spark.network.client.TransportClient,channel:io.netty.channel.Channel):Unit", "kind" : "def"}, {"member" : "org.apache.spark.network.crypto.AuthClientBootstrap#<init>", "error" : "unsupported entity"}, {"label" : "synchronized", "tail" : "(arg0: â‡’ T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "org\/apache\/spark\/network\/crypto\/AuthClientBootstrap.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "org\/apache\/spark\/network\/crypto\/AuthClientBootstrap.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "org\/apache\/spark\/network\/crypto\/AuthClientBootstrap.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "org\/apache\/spark\/network\/crypto\/AuthClientBootstrap.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "org\/apache\/spark\/network\/crypto\/AuthClientBootstrap.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "org\/apache\/spark\/network\/crypto\/AuthClientBootstrap.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "org\/apache\/spark\/network\/crypto\/AuthClientBootstrap.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "org\/apache\/spark\/network\/crypto\/AuthClientBootstrap.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "org\/apache\/spark\/network\/crypto\/AuthClientBootstrap.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "org\/apache\/spark\/network\/crypto\/AuthClientBootstrap.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "org\/apache\/spark\/network\/crypto\/AuthClientBootstrap.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "org\/apache\/spark\/network\/crypto\/AuthClientBootstrap.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "org\/apache\/spark\/network\/crypto\/AuthClientBootstrap.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "org\/apache\/spark\/network\/crypto\/AuthClientBootstrap.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.equals", "link" : "org\/apache\/spark\/network\/crypto\/AuthClientBootstrap.html#equals(x$1:Any):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "org\/apache\/spark\/network\/crypto\/AuthClientBootstrap.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_]", "member" : "scala.AnyRef.getClass", "link" : "org\/apache\/spark\/network\/crypto\/AuthClientBootstrap.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "org\/apache\/spark\/network\/crypto\/AuthClientBootstrap.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "org\/apache\/spark\/network\/crypto\/AuthClientBootstrap.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "class" : "org\/apache\/spark\/network\/crypto\/AuthClientBootstrap.html", "kind" : "class"}, {"name" : "org.apache.spark.network.crypto.AuthServerBootstrap", "shortDescription" : "A bootstrap which is executed on a TransportServer's client channel once a client connectsto the server, enabling authentication using Spark's auth protocol (and optionally SASL forclients that don't support the new protocol).", "members_class" : [{"label" : "doBootstrap", "tail" : "(channel: Channel, rpcHandler: RpcHandler): RpcHandler", "member" : "org.apache.spark.network.crypto.AuthServerBootstrap.doBootstrap", "link" : "org\/apache\/spark\/network\/crypto\/AuthServerBootstrap.html#doBootstrap(channel:io.netty.channel.Channel,rpcHandler:org.apache.spark.network.server.RpcHandler):org.apache.spark.network.server.RpcHandler", "kind" : "def"}, {"member" : "org.apache.spark.network.crypto.AuthServerBootstrap#<init>", "error" : "unsupported entity"}, {"label" : "synchronized", "tail" : "(arg0: â‡’ T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "org\/apache\/spark\/network\/crypto\/AuthServerBootstrap.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "org\/apache\/spark\/network\/crypto\/AuthServerBootstrap.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "org\/apache\/spark\/network\/crypto\/AuthServerBootstrap.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "org\/apache\/spark\/network\/crypto\/AuthServerBootstrap.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "org\/apache\/spark\/network\/crypto\/AuthServerBootstrap.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "org\/apache\/spark\/network\/crypto\/AuthServerBootstrap.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "org\/apache\/spark\/network\/crypto\/AuthServerBootstrap.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "org\/apache\/spark\/network\/crypto\/AuthServerBootstrap.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "org\/apache\/spark\/network\/crypto\/AuthServerBootstrap.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "org\/apache\/spark\/network\/crypto\/AuthServerBootstrap.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "org\/apache\/spark\/network\/crypto\/AuthServerBootstrap.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "org\/apache\/spark\/network\/crypto\/AuthServerBootstrap.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "org\/apache\/spark\/network\/crypto\/AuthServerBootstrap.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "org\/apache\/spark\/network\/crypto\/AuthServerBootstrap.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.equals", "link" : "org\/apache\/spark\/network\/crypto\/AuthServerBootstrap.html#equals(x$1:Any):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "org\/apache\/spark\/network\/crypto\/AuthServerBootstrap.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_]", "member" : "scala.AnyRef.getClass", "link" : "org\/apache\/spark\/network\/crypto\/AuthServerBootstrap.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "org\/apache\/spark\/network\/crypto\/AuthServerBootstrap.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "org\/apache\/spark\/network\/crypto\/AuthServerBootstrap.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "class" : "org\/apache\/spark\/network\/crypto\/AuthServerBootstrap.html", "kind" : "class"}, {"name" : "org.apache.spark.network.crypto.TransportCipher", "shortDescription" : "Cipher for encryption and decryption.", "members_class" : [{"label" : "addToChannel", "tail" : "(ch: Channel): Unit", "member" : "org.apache.spark.network.crypto.TransportCipher.addToChannel", "link" : "org\/apache\/spark\/network\/crypto\/TransportCipher.html#addToChannel(ch:io.netty.channel.Channel):Unit", "kind" : "def"}, {"label" : "getOutputIv", "tail" : "(): Array[Byte]", "member" : "org.apache.spark.network.crypto.TransportCipher.getOutputIv", "link" : "org\/apache\/spark\/network\/crypto\/TransportCipher.html#getOutputIv():Array[Byte]", "kind" : "def"}, {"label" : "getInputIv", "tail" : "(): Array[Byte]", "member" : "org.apache.spark.network.crypto.TransportCipher.getInputIv", "link" : "org\/apache\/spark\/network\/crypto\/TransportCipher.html#getInputIv():Array[Byte]", "kind" : "def"}, {"label" : "getCipherTransformation", "tail" : "(): String", "member" : "org.apache.spark.network.crypto.TransportCipher.getCipherTransformation", "link" : "org\/apache\/spark\/network\/crypto\/TransportCipher.html#getCipherTransformation():String", "kind" : "def"}, {"member" : "org.apache.spark.network.crypto.TransportCipher#<init>", "error" : "unsupported entity"}, {"label" : "synchronized", "tail" : "(arg0: â‡’ T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "org\/apache\/spark\/network\/crypto\/TransportCipher.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "org\/apache\/spark\/network\/crypto\/TransportCipher.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "org\/apache\/spark\/network\/crypto\/TransportCipher.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "org\/apache\/spark\/network\/crypto\/TransportCipher.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "org\/apache\/spark\/network\/crypto\/TransportCipher.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "org\/apache\/spark\/network\/crypto\/TransportCipher.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "org\/apache\/spark\/network\/crypto\/TransportCipher.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "org\/apache\/spark\/network\/crypto\/TransportCipher.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "org\/apache\/spark\/network\/crypto\/TransportCipher.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "org\/apache\/spark\/network\/crypto\/TransportCipher.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "org\/apache\/spark\/network\/crypto\/TransportCipher.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "org\/apache\/spark\/network\/crypto\/TransportCipher.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "org\/apache\/spark\/network\/crypto\/TransportCipher.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "org\/apache\/spark\/network\/crypto\/TransportCipher.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.equals", "link" : "org\/apache\/spark\/network\/crypto\/TransportCipher.html#equals(x$1:Any):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "org\/apache\/spark\/network\/crypto\/TransportCipher.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_]", "member" : "scala.AnyRef.getClass", "link" : "org\/apache\/spark\/network\/crypto\/TransportCipher.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "org\/apache\/spark\/network\/crypto\/TransportCipher.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "org\/apache\/spark\/network\/crypto\/TransportCipher.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "class" : "org\/apache\/spark\/network\/crypto\/TransportCipher.html", "kind" : "class"}], "org.apache.spark.network.client" : [{"name" : "org.apache.spark.network.client.BaseResponseCallback", "members_trait" : [{"member" : "org.apache.spark.network.client.BaseResponseCallback#<init>", "error" : "unsupported entity"}, {"label" : "synchronized", "tail" : "(arg0: â‡’ T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "org\/apache\/spark\/network\/client\/BaseResponseCallback.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "org\/apache\/spark\/network\/client\/BaseResponseCallback.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "org\/apache\/spark\/network\/client\/BaseResponseCallback.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "org\/apache\/spark\/network\/client\/BaseResponseCallback.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "org\/apache\/spark\/network\/client\/BaseResponseCallback.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "org\/apache\/spark\/network\/client\/BaseResponseCallback.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "org\/apache\/spark\/network\/client\/BaseResponseCallback.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "org\/apache\/spark\/network\/client\/BaseResponseCallback.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "org\/apache\/spark\/network\/client\/BaseResponseCallback.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "org\/apache\/spark\/network\/client\/BaseResponseCallback.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "org\/apache\/spark\/network\/client\/BaseResponseCallback.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "org\/apache\/spark\/network\/client\/BaseResponseCallback.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "org\/apache\/spark\/network\/client\/BaseResponseCallback.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "org\/apache\/spark\/network\/client\/BaseResponseCallback.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.equals", "link" : "org\/apache\/spark\/network\/client\/BaseResponseCallback.html#equals(x$1:Any):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "org\/apache\/spark\/network\/client\/BaseResponseCallback.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_]", "member" : "scala.AnyRef.getClass", "link" : "org\/apache\/spark\/network\/client\/BaseResponseCallback.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "org\/apache\/spark\/network\/client\/BaseResponseCallback.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "org\/apache\/spark\/network\/client\/BaseResponseCallback.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}, {"label" : "onFailure", "tail" : "(e: Throwable): Unit", "member" : "org.apache.spark.network.client.BaseResponseCallback.onFailure", "link" : "org\/apache\/spark\/network\/client\/BaseResponseCallback.html#onFailure(e:Throwable):Unit", "kind" : "abstract def"}], "shortDescription" : "A basic callback.", "trait" : "org\/apache\/spark\/network\/client\/BaseResponseCallback.html", "kind" : "trait"}, {"name" : "org.apache.spark.network.client.ChunkFetchFailureException", "shortDescription" : "General exception caused by a remote exception while fetching a chunk.", "members_class" : [{"member" : "org.apache.spark.network.client.ChunkFetchFailureException#<init>", "error" : "unsupported entity"}, {"member" : "org.apache.spark.network.client.ChunkFetchFailureException#<init>", "error" : "unsupported entity"}, {"label" : "getSuppressed", "tail" : "(): Array[Throwable]", "member" : "java.lang.Throwable.getSuppressed", "link" : "org\/apache\/spark\/network\/client\/ChunkFetchFailureException.html#getSuppressed():Array[Throwable]", "kind" : "final def"}, {"label" : "addSuppressed", "tail" : "(arg0: Throwable): Unit", "member" : "java.lang.Throwable.addSuppressed", "link" : "org\/apache\/spark\/network\/client\/ChunkFetchFailureException.html#addSuppressed(x$1:Throwable):Unit", "kind" : "final def"}, {"label" : "setStackTrace", "tail" : "(arg0: Array[StackTraceElement]): Unit", "member" : "java.lang.Throwable.setStackTrace", "link" : "org\/apache\/spark\/network\/client\/ChunkFetchFailureException.html#setStackTrace(x$1:Array[StackTraceElement]):Unit", "kind" : "def"}, {"label" : "getStackTrace", "tail" : "(): Array[StackTraceElement]", "member" : "java.lang.Throwable.getStackTrace", "link" : "org\/apache\/spark\/network\/client\/ChunkFetchFailureException.html#getStackTrace():Array[StackTraceElement]", "kind" : "def"}, {"label" : "fillInStackTrace", "tail" : "(): Throwable", "member" : "java.lang.Throwable.fillInStackTrace", "link" : "org\/apache\/spark\/network\/client\/ChunkFetchFailureException.html#fillInStackTrace():Throwable", "kind" : "def"}, {"label" : "printStackTrace", "tail" : "(arg0: PrintWriter): Unit", "member" : "java.lang.Throwable.printStackTrace", "link" : "org\/apache\/spark\/network\/client\/ChunkFetchFailureException.html#printStackTrace(x$1:java.io.PrintWriter):Unit", "kind" : "def"}, {"label" : "printStackTrace", "tail" : "(arg0: PrintStream): Unit", "member" : "java.lang.Throwable.printStackTrace", "link" : "org\/apache\/spark\/network\/client\/ChunkFetchFailureException.html#printStackTrace(x$1:java.io.PrintStream):Unit", "kind" : "def"}, {"label" : "printStackTrace", "tail" : "(): Unit", "member" : "java.lang.Throwable.printStackTrace", "link" : "org\/apache\/spark\/network\/client\/ChunkFetchFailureException.html#printStackTrace():Unit", "kind" : "def"}, {"label" : "toString", "tail" : "(): String", "member" : "java.lang.Throwable.toString", "link" : "org\/apache\/spark\/network\/client\/ChunkFetchFailureException.html#toString():String", "kind" : "def"}, {"label" : "initCause", "tail" : "(arg0: Throwable): Throwable", "member" : "java.lang.Throwable.initCause", "link" : "org\/apache\/spark\/network\/client\/ChunkFetchFailureException.html#initCause(x$1:Throwable):Throwable", "kind" : "def"}, {"label" : "getCause", "tail" : "(): Throwable", "member" : "java.lang.Throwable.getCause", "link" : "org\/apache\/spark\/network\/client\/ChunkFetchFailureException.html#getCause():Throwable", "kind" : "def"}, {"label" : "getLocalizedMessage", "tail" : "(): String", "member" : "java.lang.Throwable.getLocalizedMessage", "link" : "org\/apache\/spark\/network\/client\/ChunkFetchFailureException.html#getLocalizedMessage():String", "kind" : "def"}, {"label" : "getMessage", "tail" : "(): String", "member" : "java.lang.Throwable.getMessage", "link" : "org\/apache\/spark\/network\/client\/ChunkFetchFailureException.html#getMessage():String", "kind" : "def"}, {"label" : "synchronized", "tail" : "(arg0: â‡’ T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "org\/apache\/spark\/network\/client\/ChunkFetchFailureException.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "org\/apache\/spark\/network\/client\/ChunkFetchFailureException.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "org\/apache\/spark\/network\/client\/ChunkFetchFailureException.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "org\/apache\/spark\/network\/client\/ChunkFetchFailureException.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "org\/apache\/spark\/network\/client\/ChunkFetchFailureException.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "org\/apache\/spark\/network\/client\/ChunkFetchFailureException.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "org\/apache\/spark\/network\/client\/ChunkFetchFailureException.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "org\/apache\/spark\/network\/client\/ChunkFetchFailureException.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "org\/apache\/spark\/network\/client\/ChunkFetchFailureException.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "org\/apache\/spark\/network\/client\/ChunkFetchFailureException.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "org\/apache\/spark\/network\/client\/ChunkFetchFailureException.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "org\/apache\/spark\/network\/client\/ChunkFetchFailureException.html#notify():Unit", "kind" : "final def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "org\/apache\/spark\/network\/client\/ChunkFetchFailureException.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.equals", "link" : "org\/apache\/spark\/network\/client\/ChunkFetchFailureException.html#equals(x$1:Any):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "org\/apache\/spark\/network\/client\/ChunkFetchFailureException.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_]", "member" : "scala.AnyRef.getClass", "link" : "org\/apache\/spark\/network\/client\/ChunkFetchFailureException.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "org\/apache\/spark\/network\/client\/ChunkFetchFailureException.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "org\/apache\/spark\/network\/client\/ChunkFetchFailureException.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "class" : "org\/apache\/spark\/network\/client\/ChunkFetchFailureException.html", "kind" : "class"}, {"name" : "org.apache.spark.network.client.ChunkReceivedCallback", "members_trait" : [{"member" : "org.apache.spark.network.client.ChunkReceivedCallback#<init>", "error" : "unsupported entity"}, {"label" : "synchronized", "tail" : "(arg0: â‡’ T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "org\/apache\/spark\/network\/client\/ChunkReceivedCallback.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "org\/apache\/spark\/network\/client\/ChunkReceivedCallback.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "org\/apache\/spark\/network\/client\/ChunkReceivedCallback.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "org\/apache\/spark\/network\/client\/ChunkReceivedCallback.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "org\/apache\/spark\/network\/client\/ChunkReceivedCallback.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "org\/apache\/spark\/network\/client\/ChunkReceivedCallback.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "org\/apache\/spark\/network\/client\/ChunkReceivedCallback.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "org\/apache\/spark\/network\/client\/ChunkReceivedCallback.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "org\/apache\/spark\/network\/client\/ChunkReceivedCallback.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "org\/apache\/spark\/network\/client\/ChunkReceivedCallback.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "org\/apache\/spark\/network\/client\/ChunkReceivedCallback.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "org\/apache\/spark\/network\/client\/ChunkReceivedCallback.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "org\/apache\/spark\/network\/client\/ChunkReceivedCallback.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "org\/apache\/spark\/network\/client\/ChunkReceivedCallback.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.equals", "link" : "org\/apache\/spark\/network\/client\/ChunkReceivedCallback.html#equals(x$1:Any):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "org\/apache\/spark\/network\/client\/ChunkReceivedCallback.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_]", "member" : "scala.AnyRef.getClass", "link" : "org\/apache\/spark\/network\/client\/ChunkReceivedCallback.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "org\/apache\/spark\/network\/client\/ChunkReceivedCallback.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "org\/apache\/spark\/network\/client\/ChunkReceivedCallback.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}, {"label" : "onFailure", "tail" : "(chunkIndex: Int, e: Throwable): Unit", "member" : "org.apache.spark.network.client.ChunkReceivedCallback.onFailure", "link" : "org\/apache\/spark\/network\/client\/ChunkReceivedCallback.html#onFailure(chunkIndex:Int,e:Throwable):Unit", "kind" : "abstract def"}, {"label" : "onSuccess", "tail" : "(chunkIndex: Int, buffer: ManagedBuffer): Unit", "member" : "org.apache.spark.network.client.ChunkReceivedCallback.onSuccess", "link" : "org\/apache\/spark\/network\/client\/ChunkReceivedCallback.html#onSuccess(chunkIndex:Int,buffer:org.apache.spark.network.buffer.ManagedBuffer):Unit", "kind" : "abstract def"}], "shortDescription" : "Callback for the result of a single chunk result.", "trait" : "org\/apache\/spark\/network\/client\/ChunkReceivedCallback.html", "kind" : "trait"}, {"name" : "org.apache.spark.network.client.MergedBlockMetaResponseCallback", "members_trait" : [{"member" : "org.apache.spark.network.client.MergedBlockMetaResponseCallback#<init>", "error" : "unsupported entity"}, {"label" : "synchronized", "tail" : "(arg0: â‡’ T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "org\/apache\/spark\/network\/client\/MergedBlockMetaResponseCallback.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "org\/apache\/spark\/network\/client\/MergedBlockMetaResponseCallback.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "org\/apache\/spark\/network\/client\/MergedBlockMetaResponseCallback.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "org\/apache\/spark\/network\/client\/MergedBlockMetaResponseCallback.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "org\/apache\/spark\/network\/client\/MergedBlockMetaResponseCallback.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "org\/apache\/spark\/network\/client\/MergedBlockMetaResponseCallback.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "org\/apache\/spark\/network\/client\/MergedBlockMetaResponseCallback.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "org\/apache\/spark\/network\/client\/MergedBlockMetaResponseCallback.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "org\/apache\/spark\/network\/client\/MergedBlockMetaResponseCallback.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "org\/apache\/spark\/network\/client\/MergedBlockMetaResponseCallback.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "org\/apache\/spark\/network\/client\/MergedBlockMetaResponseCallback.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "org\/apache\/spark\/network\/client\/MergedBlockMetaResponseCallback.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "org\/apache\/spark\/network\/client\/MergedBlockMetaResponseCallback.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "org\/apache\/spark\/network\/client\/MergedBlockMetaResponseCallback.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.equals", "link" : "org\/apache\/spark\/network\/client\/MergedBlockMetaResponseCallback.html#equals(x$1:Any):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "org\/apache\/spark\/network\/client\/MergedBlockMetaResponseCallback.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_]", "member" : "scala.AnyRef.getClass", "link" : "org\/apache\/spark\/network\/client\/MergedBlockMetaResponseCallback.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "org\/apache\/spark\/network\/client\/MergedBlockMetaResponseCallback.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "org\/apache\/spark\/network\/client\/MergedBlockMetaResponseCallback.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}, {"label" : "onSuccess", "tail" : "(numChunks: Int, buffer: ManagedBuffer): Unit", "member" : "org.apache.spark.network.client.MergedBlockMetaResponseCallback.onSuccess", "link" : "org\/apache\/spark\/network\/client\/MergedBlockMetaResponseCallback.html#onSuccess(numChunks:Int,buffer:org.apache.spark.network.buffer.ManagedBuffer):Unit", "kind" : "abstract def"}, {"label" : "onFailure", "tail" : "(e: Throwable): Unit", "member" : "org.apache.spark.network.client.BaseResponseCallback.onFailure", "link" : "org\/apache\/spark\/network\/client\/MergedBlockMetaResponseCallback.html#onFailure(e:Throwable):Unit", "kind" : "abstract def"}], "shortDescription" : "Callback for the result of a singleorg.apache.spark.network.protocol.MergedBlockMetaRequest.", "trait" : "org\/apache\/spark\/network\/client\/MergedBlockMetaResponseCallback.html", "kind" : "trait"}, {"name" : "org.apache.spark.network.client.RpcResponseCallback", "members_trait" : [{"member" : "org.apache.spark.network.client.RpcResponseCallback#<init>", "error" : "unsupported entity"}, {"label" : "synchronized", "tail" : "(arg0: â‡’ T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "org\/apache\/spark\/network\/client\/RpcResponseCallback.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "org\/apache\/spark\/network\/client\/RpcResponseCallback.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "org\/apache\/spark\/network\/client\/RpcResponseCallback.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "org\/apache\/spark\/network\/client\/RpcResponseCallback.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "org\/apache\/spark\/network\/client\/RpcResponseCallback.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "org\/apache\/spark\/network\/client\/RpcResponseCallback.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "org\/apache\/spark\/network\/client\/RpcResponseCallback.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "org\/apache\/spark\/network\/client\/RpcResponseCallback.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "org\/apache\/spark\/network\/client\/RpcResponseCallback.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "org\/apache\/spark\/network\/client\/RpcResponseCallback.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "org\/apache\/spark\/network\/client\/RpcResponseCallback.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "org\/apache\/spark\/network\/client\/RpcResponseCallback.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "org\/apache\/spark\/network\/client\/RpcResponseCallback.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "org\/apache\/spark\/network\/client\/RpcResponseCallback.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.equals", "link" : "org\/apache\/spark\/network\/client\/RpcResponseCallback.html#equals(x$1:Any):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "org\/apache\/spark\/network\/client\/RpcResponseCallback.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_]", "member" : "scala.AnyRef.getClass", "link" : "org\/apache\/spark\/network\/client\/RpcResponseCallback.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "org\/apache\/spark\/network\/client\/RpcResponseCallback.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "org\/apache\/spark\/network\/client\/RpcResponseCallback.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}, {"label" : "onSuccess", "tail" : "(response: ByteBuffer): Unit", "member" : "org.apache.spark.network.client.RpcResponseCallback.onSuccess", "link" : "org\/apache\/spark\/network\/client\/RpcResponseCallback.html#onSuccess(response:java.nio.ByteBuffer):Unit", "kind" : "abstract def"}, {"label" : "onFailure", "tail" : "(e: Throwable): Unit", "member" : "org.apache.spark.network.client.BaseResponseCallback.onFailure", "link" : "org\/apache\/spark\/network\/client\/RpcResponseCallback.html#onFailure(e:Throwable):Unit", "kind" : "abstract def"}], "shortDescription" : "Callback for the result of a single RPC.", "trait" : "org\/apache\/spark\/network\/client\/RpcResponseCallback.html", "kind" : "trait"}, {"name" : "org.apache.spark.network.client.StreamCallback", "members_trait" : [{"member" : "org.apache.spark.network.client.StreamCallback#<init>", "error" : "unsupported entity"}, {"label" : "synchronized", "tail" : "(arg0: â‡’ T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "org\/apache\/spark\/network\/client\/StreamCallback.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "org\/apache\/spark\/network\/client\/StreamCallback.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "org\/apache\/spark\/network\/client\/StreamCallback.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "org\/apache\/spark\/network\/client\/StreamCallback.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "org\/apache\/spark\/network\/client\/StreamCallback.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "org\/apache\/spark\/network\/client\/StreamCallback.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "org\/apache\/spark\/network\/client\/StreamCallback.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "org\/apache\/spark\/network\/client\/StreamCallback.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "org\/apache\/spark\/network\/client\/StreamCallback.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "org\/apache\/spark\/network\/client\/StreamCallback.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "org\/apache\/spark\/network\/client\/StreamCallback.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "org\/apache\/spark\/network\/client\/StreamCallback.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "org\/apache\/spark\/network\/client\/StreamCallback.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "org\/apache\/spark\/network\/client\/StreamCallback.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.equals", "link" : "org\/apache\/spark\/network\/client\/StreamCallback.html#equals(x$1:Any):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "org\/apache\/spark\/network\/client\/StreamCallback.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_]", "member" : "scala.AnyRef.getClass", "link" : "org\/apache\/spark\/network\/client\/StreamCallback.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "org\/apache\/spark\/network\/client\/StreamCallback.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "org\/apache\/spark\/network\/client\/StreamCallback.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}, {"label" : "onFailure", "tail" : "(streamId: String, cause: Throwable): Unit", "member" : "org.apache.spark.network.client.StreamCallback.onFailure", "link" : "org\/apache\/spark\/network\/client\/StreamCallback.html#onFailure(streamId:String,cause:Throwable):Unit", "kind" : "abstract def"}, {"label" : "onComplete", "tail" : "(streamId: String): Unit", "member" : "org.apache.spark.network.client.StreamCallback.onComplete", "link" : "org\/apache\/spark\/network\/client\/StreamCallback.html#onComplete(streamId:String):Unit", "kind" : "abstract def"}, {"label" : "onData", "tail" : "(streamId: String, buf: ByteBuffer): Unit", "member" : "org.apache.spark.network.client.StreamCallback.onData", "link" : "org\/apache\/spark\/network\/client\/StreamCallback.html#onData(streamId:String,buf:java.nio.ByteBuffer):Unit", "kind" : "abstract def"}], "shortDescription" : "Callback for streaming data.", "trait" : "org\/apache\/spark\/network\/client\/StreamCallback.html", "kind" : "trait"}, {"name" : "org.apache.spark.network.client.StreamCallbackWithID", "members_trait" : [{"label" : "getCompletionResponse", "tail" : "(): ByteBuffer", "member" : "org.apache.spark.network.client.StreamCallbackWithID.getCompletionResponse", "link" : "org\/apache\/spark\/network\/client\/StreamCallbackWithID.html#getCompletionResponse():java.nio.ByteBuffer", "kind" : "def"}, {"member" : "org.apache.spark.network.client.StreamCallbackWithID#<init>", "error" : "unsupported entity"}, {"label" : "synchronized", "tail" : "(arg0: â‡’ T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "org\/apache\/spark\/network\/client\/StreamCallbackWithID.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "org\/apache\/spark\/network\/client\/StreamCallbackWithID.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "org\/apache\/spark\/network\/client\/StreamCallbackWithID.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "org\/apache\/spark\/network\/client\/StreamCallbackWithID.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "org\/apache\/spark\/network\/client\/StreamCallbackWithID.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "org\/apache\/spark\/network\/client\/StreamCallbackWithID.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "org\/apache\/spark\/network\/client\/StreamCallbackWithID.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "org\/apache\/spark\/network\/client\/StreamCallbackWithID.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "org\/apache\/spark\/network\/client\/StreamCallbackWithID.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "org\/apache\/spark\/network\/client\/StreamCallbackWithID.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "org\/apache\/spark\/network\/client\/StreamCallbackWithID.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "org\/apache\/spark\/network\/client\/StreamCallbackWithID.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "org\/apache\/spark\/network\/client\/StreamCallbackWithID.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "org\/apache\/spark\/network\/client\/StreamCallbackWithID.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.equals", "link" : "org\/apache\/spark\/network\/client\/StreamCallbackWithID.html#equals(x$1:Any):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "org\/apache\/spark\/network\/client\/StreamCallbackWithID.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_]", "member" : "scala.AnyRef.getClass", "link" : "org\/apache\/spark\/network\/client\/StreamCallbackWithID.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "org\/apache\/spark\/network\/client\/StreamCallbackWithID.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "org\/apache\/spark\/network\/client\/StreamCallbackWithID.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}, {"label" : "getID", "tail" : "(): String", "member" : "org.apache.spark.network.client.StreamCallbackWithID.getID", "link" : "org\/apache\/spark\/network\/client\/StreamCallbackWithID.html#getID():String", "kind" : "abstract def"}, {"label" : "onFailure", "tail" : "(streamId: String, cause: Throwable): Unit", "member" : "org.apache.spark.network.client.StreamCallback.onFailure", "link" : "org\/apache\/spark\/network\/client\/StreamCallbackWithID.html#onFailure(streamId:String,cause:Throwable):Unit", "kind" : "abstract def"}, {"label" : "onComplete", "tail" : "(streamId: String): Unit", "member" : "org.apache.spark.network.client.StreamCallback.onComplete", "link" : "org\/apache\/spark\/network\/client\/StreamCallbackWithID.html#onComplete(streamId:String):Unit", "kind" : "abstract def"}, {"label" : "onData", "tail" : "(streamId: String, buf: ByteBuffer): Unit", "member" : "org.apache.spark.network.client.StreamCallback.onData", "link" : "org\/apache\/spark\/network\/client\/StreamCallbackWithID.html#onData(streamId:String,buf:java.nio.ByteBuffer):Unit", "kind" : "abstract def"}], "shortDescription" : "", "trait" : "org\/apache\/spark\/network\/client\/StreamCallbackWithID.html", "kind" : "trait"}, {"name" : "org.apache.spark.network.client.StreamInterceptor", "shortDescription" : "An interceptor that is registered with the frame decoder to feed stream data to acallback.", "members_class" : [{"label" : "handle", "tail" : "(buf: ByteBuf): Boolean", "member" : "org.apache.spark.network.client.StreamInterceptor.handle", "link" : "org\/apache\/spark\/network\/client\/StreamInterceptor.html#handle(buf:io.netty.buffer.ByteBuf):Boolean", "kind" : "def"}, {"label" : "channelInactive", "tail" : "(): Unit", "member" : "org.apache.spark.network.client.StreamInterceptor.channelInactive", "link" : "org\/apache\/spark\/network\/client\/StreamInterceptor.html#channelInactive():Unit", "kind" : "def"}, {"label" : "exceptionCaught", "tail" : "(cause: Throwable): Unit", "member" : "org.apache.spark.network.client.StreamInterceptor.exceptionCaught", "link" : "org\/apache\/spark\/network\/client\/StreamInterceptor.html#exceptionCaught(cause:Throwable):Unit", "kind" : "def"}, {"member" : "org.apache.spark.network.client.StreamInterceptor#<init>", "error" : "unsupported entity"}, {"label" : "synchronized", "tail" : "(arg0: â‡’ T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "org\/apache\/spark\/network\/client\/StreamInterceptor.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "org\/apache\/spark\/network\/client\/StreamInterceptor.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "org\/apache\/spark\/network\/client\/StreamInterceptor.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "org\/apache\/spark\/network\/client\/StreamInterceptor.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "org\/apache\/spark\/network\/client\/StreamInterceptor.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "org\/apache\/spark\/network\/client\/StreamInterceptor.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "org\/apache\/spark\/network\/client\/StreamInterceptor.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "org\/apache\/spark\/network\/client\/StreamInterceptor.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "org\/apache\/spark\/network\/client\/StreamInterceptor.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "org\/apache\/spark\/network\/client\/StreamInterceptor.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "org\/apache\/spark\/network\/client\/StreamInterceptor.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "org\/apache\/spark\/network\/client\/StreamInterceptor.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "org\/apache\/spark\/network\/client\/StreamInterceptor.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "org\/apache\/spark\/network\/client\/StreamInterceptor.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.equals", "link" : "org\/apache\/spark\/network\/client\/StreamInterceptor.html#equals(x$1:Any):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "org\/apache\/spark\/network\/client\/StreamInterceptor.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_]", "member" : "scala.AnyRef.getClass", "link" : "org\/apache\/spark\/network\/client\/StreamInterceptor.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "org\/apache\/spark\/network\/client\/StreamInterceptor.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "org\/apache\/spark\/network\/client\/StreamInterceptor.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "class" : "org\/apache\/spark\/network\/client\/StreamInterceptor.html", "kind" : "class"}, {"name" : "org.apache.spark.network.client.TransportClient", "shortDescription" : "Client for fetching consecutive chunks of a pre-negotiated stream.", "members_class" : [{"label" : "toString", "tail" : "(): String", "member" : "org.apache.spark.network.client.TransportClient.toString", "link" : "org\/apache\/spark\/network\/client\/TransportClient.html#toString():String", "kind" : "def"}, {"label" : "close", "tail" : "(): Unit", "member" : "org.apache.spark.network.client.TransportClient.close", "link" : "org\/apache\/spark\/network\/client\/TransportClient.html#close():Unit", "kind" : "def"}, {"label" : "getHandler", "tail" : "(): TransportResponseHandler", "member" : "org.apache.spark.network.client.TransportClient.getHandler", "link" : "org\/apache\/spark\/network\/client\/TransportClient.html#getHandler():org.apache.spark.network.client.TransportResponseHandler", "kind" : "def"}, {"label" : "timeOut", "tail" : "(): Unit", "member" : "org.apache.spark.network.client.TransportClient.timeOut", "link" : "org\/apache\/spark\/network\/client\/TransportClient.html#timeOut():Unit", "kind" : "def"}, {"label" : "removeRpcRequest", "tail" : "(requestId: Long): Unit", "member" : "org.apache.spark.network.client.TransportClient.removeRpcRequest", "link" : "org\/apache\/spark\/network\/client\/TransportClient.html#removeRpcRequest(requestId:Long):Unit", "kind" : "def"}, {"label" : "send", "tail" : "(message: ByteBuffer): Unit", "member" : "org.apache.spark.network.client.TransportClient.send", "link" : "org\/apache\/spark\/network\/client\/TransportClient.html#send(message:java.nio.ByteBuffer):Unit", "kind" : "def"}, {"label" : "sendRpcSync", "tail" : "(message: ByteBuffer, timeoutMs: Long): ByteBuffer", "member" : "org.apache.spark.network.client.TransportClient.sendRpcSync", "link" : "org\/apache\/spark\/network\/client\/TransportClient.html#sendRpcSync(message:java.nio.ByteBuffer,timeoutMs:Long):java.nio.ByteBuffer", "kind" : "def"}, {"label" : "uploadStream", "tail" : "(meta: ManagedBuffer, data: ManagedBuffer, callback: RpcResponseCallback): Long", "member" : "org.apache.spark.network.client.TransportClient.uploadStream", "link" : "org\/apache\/spark\/network\/client\/TransportClient.html#uploadStream(meta:org.apache.spark.network.buffer.ManagedBuffer,data:org.apache.spark.network.buffer.ManagedBuffer,callback:org.apache.spark.network.client.RpcResponseCallback):Long", "kind" : "def"}, {"label" : "sendMergedBlockMetaReq", "tail" : "(appId: String, shuffleId: Int, shuffleMergeId: Int, reduceId: Int, callback: MergedBlockMetaResponseCallback): Unit", "member" : "org.apache.spark.network.client.TransportClient.sendMergedBlockMetaReq", "link" : "org\/apache\/spark\/network\/client\/TransportClient.html#sendMergedBlockMetaReq(appId:String,shuffleId:Int,shuffleMergeId:Int,reduceId:Int,callback:org.apache.spark.network.client.MergedBlockMetaResponseCallback):Unit", "kind" : "def"}, {"label" : "sendRpc", "tail" : "(message: ByteBuffer, callback: RpcResponseCallback): Long", "member" : "org.apache.spark.network.client.TransportClient.sendRpc", "link" : "org\/apache\/spark\/network\/client\/TransportClient.html#sendRpc(message:java.nio.ByteBuffer,callback:org.apache.spark.network.client.RpcResponseCallback):Long", "kind" : "def"}, {"label" : "stream", "tail" : "(streamId: String, callback: StreamCallback): Unit", "member" : "org.apache.spark.network.client.TransportClient.stream", "link" : "org\/apache\/spark\/network\/client\/TransportClient.html#stream(streamId:String,callback:org.apache.spark.network.client.StreamCallback):Unit", "kind" : "def"}, {"label" : "fetchChunk", "tail" : "(streamId: Long, chunkIndex: Int, callback: ChunkReceivedCallback): Unit", "member" : "org.apache.spark.network.client.TransportClient.fetchChunk", "link" : "org\/apache\/spark\/network\/client\/TransportClient.html#fetchChunk(streamId:Long,chunkIndex:Int,callback:org.apache.spark.network.client.ChunkReceivedCallback):Unit", "kind" : "def"}, {"label" : "setClientId", "tail" : "(id: String): Unit", "member" : "org.apache.spark.network.client.TransportClient.setClientId", "link" : "org\/apache\/spark\/network\/client\/TransportClient.html#setClientId(id:String):Unit", "kind" : "def"}, {"label" : "getClientId", "tail" : "(): String", "member" : "org.apache.spark.network.client.TransportClient.getClientId", "link" : "org\/apache\/spark\/network\/client\/TransportClient.html#getClientId():String", "kind" : "def"}, {"label" : "getSocketAddress", "tail" : "(): SocketAddress", "member" : "org.apache.spark.network.client.TransportClient.getSocketAddress", "link" : "org\/apache\/spark\/network\/client\/TransportClient.html#getSocketAddress():java.net.SocketAddress", "kind" : "def"}, {"label" : "isActive", "tail" : "(): Boolean", "member" : "org.apache.spark.network.client.TransportClient.isActive", "link" : "org\/apache\/spark\/network\/client\/TransportClient.html#isActive():Boolean", "kind" : "def"}, {"label" : "getChannel", "tail" : "(): Channel", "member" : "org.apache.spark.network.client.TransportClient.getChannel", "link" : "org\/apache\/spark\/network\/client\/TransportClient.html#getChannel():io.netty.channel.Channel", "kind" : "def"}, {"member" : "org.apache.spark.network.client.TransportClient#<init>", "error" : "unsupported entity"}, {"label" : "synchronized", "tail" : "(arg0: â‡’ T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "org\/apache\/spark\/network\/client\/TransportClient.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "org\/apache\/spark\/network\/client\/TransportClient.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "org\/apache\/spark\/network\/client\/TransportClient.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "org\/apache\/spark\/network\/client\/TransportClient.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "org\/apache\/spark\/network\/client\/TransportClient.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "org\/apache\/spark\/network\/client\/TransportClient.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "org\/apache\/spark\/network\/client\/TransportClient.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "org\/apache\/spark\/network\/client\/TransportClient.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "org\/apache\/spark\/network\/client\/TransportClient.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "org\/apache\/spark\/network\/client\/TransportClient.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "org\/apache\/spark\/network\/client\/TransportClient.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "org\/apache\/spark\/network\/client\/TransportClient.html#notify():Unit", "kind" : "final def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "org\/apache\/spark\/network\/client\/TransportClient.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.equals", "link" : "org\/apache\/spark\/network\/client\/TransportClient.html#equals(x$1:Any):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "org\/apache\/spark\/network\/client\/TransportClient.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_]", "member" : "scala.AnyRef.getClass", "link" : "org\/apache\/spark\/network\/client\/TransportClient.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "org\/apache\/spark\/network\/client\/TransportClient.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "org\/apache\/spark\/network\/client\/TransportClient.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "class" : "org\/apache\/spark\/network\/client\/TransportClient.html", "kind" : "class"}, {"name" : "org.apache.spark.network.client.TransportClientBootstrap", "members_trait" : [{"member" : "org.apache.spark.network.client.TransportClientBootstrap#<init>", "error" : "unsupported entity"}, {"label" : "synchronized", "tail" : "(arg0: â‡’ T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "org\/apache\/spark\/network\/client\/TransportClientBootstrap.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "org\/apache\/spark\/network\/client\/TransportClientBootstrap.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "org\/apache\/spark\/network\/client\/TransportClientBootstrap.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "org\/apache\/spark\/network\/client\/TransportClientBootstrap.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "org\/apache\/spark\/network\/client\/TransportClientBootstrap.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "org\/apache\/spark\/network\/client\/TransportClientBootstrap.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "org\/apache\/spark\/network\/client\/TransportClientBootstrap.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "org\/apache\/spark\/network\/client\/TransportClientBootstrap.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "org\/apache\/spark\/network\/client\/TransportClientBootstrap.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "org\/apache\/spark\/network\/client\/TransportClientBootstrap.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "org\/apache\/spark\/network\/client\/TransportClientBootstrap.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "org\/apache\/spark\/network\/client\/TransportClientBootstrap.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "org\/apache\/spark\/network\/client\/TransportClientBootstrap.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "org\/apache\/spark\/network\/client\/TransportClientBootstrap.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.equals", "link" : "org\/apache\/spark\/network\/client\/TransportClientBootstrap.html#equals(x$1:Any):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "org\/apache\/spark\/network\/client\/TransportClientBootstrap.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_]", "member" : "scala.AnyRef.getClass", "link" : "org\/apache\/spark\/network\/client\/TransportClientBootstrap.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "org\/apache\/spark\/network\/client\/TransportClientBootstrap.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "org\/apache\/spark\/network\/client\/TransportClientBootstrap.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}, {"label" : "doBootstrap", "tail" : "(client: TransportClient, channel: Channel): Unit", "member" : "org.apache.spark.network.client.TransportClientBootstrap.doBootstrap", "link" : "org\/apache\/spark\/network\/client\/TransportClientBootstrap.html#doBootstrap(client:org.apache.spark.network.client.TransportClient,channel:io.netty.channel.Channel):Unit", "kind" : "abstract def"}], "shortDescription" : "A bootstrap which is executed on a TransportClient before it is returned to the user.", "trait" : "org\/apache\/spark\/network\/client\/TransportClientBootstrap.html", "kind" : "trait"}, {"name" : "org.apache.spark.network.client.TransportClientFactory", "shortDescription" : "Factory for creating TransportClients by using createClient.", "members_class" : [{"label" : "close", "tail" : "(): Unit", "member" : "org.apache.spark.network.client.TransportClientFactory.close", "link" : "org\/apache\/spark\/network\/client\/TransportClientFactory.html#close():Unit", "kind" : "def"}, {"label" : "createUnmanagedClient", "tail" : "(remoteHost: String, remotePort: Int): TransportClient", "member" : "org.apache.spark.network.client.TransportClientFactory.createUnmanagedClient", "link" : "org\/apache\/spark\/network\/client\/TransportClientFactory.html#createUnmanagedClient(remoteHost:String,remotePort:Int):org.apache.spark.network.client.TransportClient", "kind" : "def"}, {"label" : "createClient", "tail" : "(remoteHost: String, remotePort: Int): TransportClient", "member" : "org.apache.spark.network.client.TransportClientFactory.createClient", "link" : "org\/apache\/spark\/network\/client\/TransportClientFactory.html#createClient(remoteHost:String,remotePort:Int):org.apache.spark.network.client.TransportClient", "kind" : "def"}, {"label" : "createClient", "tail" : "(remoteHost: String, remotePort: Int, fastFail: Boolean): TransportClient", "member" : "org.apache.spark.network.client.TransportClientFactory.createClient", "link" : "org\/apache\/spark\/network\/client\/TransportClientFactory.html#createClient(remoteHost:String,remotePort:Int,fastFail:Boolean):org.apache.spark.network.client.TransportClient", "kind" : "def"}, {"label" : "getAllMetrics", "tail" : "(): MetricSet", "member" : "org.apache.spark.network.client.TransportClientFactory.getAllMetrics", "link" : "org\/apache\/spark\/network\/client\/TransportClientFactory.html#getAllMetrics():com.codahale.metrics.MetricSet", "kind" : "def"}, {"member" : "org.apache.spark.network.client.TransportClientFactory#<init>", "error" : "unsupported entity"}, {"label" : "synchronized", "tail" : "(arg0: â‡’ T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "org\/apache\/spark\/network\/client\/TransportClientFactory.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "org\/apache\/spark\/network\/client\/TransportClientFactory.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "org\/apache\/spark\/network\/client\/TransportClientFactory.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "org\/apache\/spark\/network\/client\/TransportClientFactory.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "org\/apache\/spark\/network\/client\/TransportClientFactory.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "org\/apache\/spark\/network\/client\/TransportClientFactory.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "org\/apache\/spark\/network\/client\/TransportClientFactory.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "org\/apache\/spark\/network\/client\/TransportClientFactory.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "org\/apache\/spark\/network\/client\/TransportClientFactory.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "org\/apache\/spark\/network\/client\/TransportClientFactory.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "org\/apache\/spark\/network\/client\/TransportClientFactory.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "org\/apache\/spark\/network\/client\/TransportClientFactory.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "org\/apache\/spark\/network\/client\/TransportClientFactory.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "org\/apache\/spark\/network\/client\/TransportClientFactory.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.equals", "link" : "org\/apache\/spark\/network\/client\/TransportClientFactory.html#equals(x$1:Any):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "org\/apache\/spark\/network\/client\/TransportClientFactory.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_]", "member" : "scala.AnyRef.getClass", "link" : "org\/apache\/spark\/network\/client\/TransportClientFactory.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "org\/apache\/spark\/network\/client\/TransportClientFactory.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "org\/apache\/spark\/network\/client\/TransportClientFactory.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "class" : "org\/apache\/spark\/network\/client\/TransportClientFactory.html", "kind" : "class"}, {"name" : "org.apache.spark.network.client.TransportResponseHandler", "shortDescription" : "Handler that processes server responses, in response to requests issued from aTransportClient.", "members_class" : [{"label" : "updateTimeOfLastRequest", "tail" : "(): Unit", "member" : "org.apache.spark.network.client.TransportResponseHandler.updateTimeOfLastRequest", "link" : "org\/apache\/spark\/network\/client\/TransportResponseHandler.html#updateTimeOfLastRequest():Unit", "kind" : "def"}, {"label" : "getTimeOfLastRequestNs", "tail" : "(): Long", "member" : "org.apache.spark.network.client.TransportResponseHandler.getTimeOfLastRequestNs", "link" : "org\/apache\/spark\/network\/client\/TransportResponseHandler.html#getTimeOfLastRequestNs():Long", "kind" : "def"}, {"label" : "numOutstandingRequests", "tail" : "(): Int", "member" : "org.apache.spark.network.client.TransportResponseHandler.numOutstandingRequests", "link" : "org\/apache\/spark\/network\/client\/TransportResponseHandler.html#numOutstandingRequests():Int", "kind" : "def"}, {"label" : "handle", "tail" : "(message: ResponseMessage): Unit", "member" : "org.apache.spark.network.client.TransportResponseHandler.handle", "link" : "org\/apache\/spark\/network\/client\/TransportResponseHandler.html#handle(message:org.apache.spark.network.protocol.ResponseMessage):Unit", "kind" : "def"}, {"label" : "exceptionCaught", "tail" : "(cause: Throwable): Unit", "member" : "org.apache.spark.network.client.TransportResponseHandler.exceptionCaught", "link" : "org\/apache\/spark\/network\/client\/TransportResponseHandler.html#exceptionCaught(cause:Throwable):Unit", "kind" : "def"}, {"label" : "channelInactive", "tail" : "(): Unit", "member" : "org.apache.spark.network.client.TransportResponseHandler.channelInactive", "link" : "org\/apache\/spark\/network\/client\/TransportResponseHandler.html#channelInactive():Unit", "kind" : "def"}, {"label" : "channelActive", "tail" : "(): Unit", "member" : "org.apache.spark.network.client.TransportResponseHandler.channelActive", "link" : "org\/apache\/spark\/network\/client\/TransportResponseHandler.html#channelActive():Unit", "kind" : "def"}, {"label" : "deactivateStream", "tail" : "(): Unit", "member" : "org.apache.spark.network.client.TransportResponseHandler.deactivateStream", "link" : "org\/apache\/spark\/network\/client\/TransportResponseHandler.html#deactivateStream():Unit", "kind" : "def"}, {"label" : "addStreamCallback", "tail" : "(streamId: String, callback: StreamCallback): Unit", "member" : "org.apache.spark.network.client.TransportResponseHandler.addStreamCallback", "link" : "org\/apache\/spark\/network\/client\/TransportResponseHandler.html#addStreamCallback(streamId:String,callback:org.apache.spark.network.client.StreamCallback):Unit", "kind" : "def"}, {"label" : "removeRpcRequest", "tail" : "(requestId: Long): Unit", "member" : "org.apache.spark.network.client.TransportResponseHandler.removeRpcRequest", "link" : "org\/apache\/spark\/network\/client\/TransportResponseHandler.html#removeRpcRequest(requestId:Long):Unit", "kind" : "def"}, {"label" : "addRpcRequest", "tail" : "(requestId: Long, callback: BaseResponseCallback): Unit", "member" : "org.apache.spark.network.client.TransportResponseHandler.addRpcRequest", "link" : "org\/apache\/spark\/network\/client\/TransportResponseHandler.html#addRpcRequest(requestId:Long,callback:org.apache.spark.network.client.BaseResponseCallback):Unit", "kind" : "def"}, {"label" : "removeFetchRequest", "tail" : "(streamChunkId: StreamChunkId): Unit", "member" : "org.apache.spark.network.client.TransportResponseHandler.removeFetchRequest", "link" : "org\/apache\/spark\/network\/client\/TransportResponseHandler.html#removeFetchRequest(streamChunkId:org.apache.spark.network.protocol.StreamChunkId):Unit", "kind" : "def"}, {"label" : "addFetchRequest", "tail" : "(streamChunkId: StreamChunkId, callback: ChunkReceivedCallback): Unit", "member" : "org.apache.spark.network.client.TransportResponseHandler.addFetchRequest", "link" : "org\/apache\/spark\/network\/client\/TransportResponseHandler.html#addFetchRequest(streamChunkId:org.apache.spark.network.protocol.StreamChunkId,callback:org.apache.spark.network.client.ChunkReceivedCallback):Unit", "kind" : "def"}, {"member" : "org.apache.spark.network.client.TransportResponseHandler#<init>", "error" : "unsupported entity"}, {"label" : "synchronized", "tail" : "(arg0: â‡’ T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "org\/apache\/spark\/network\/client\/TransportResponseHandler.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "org\/apache\/spark\/network\/client\/TransportResponseHandler.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "org\/apache\/spark\/network\/client\/TransportResponseHandler.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "org\/apache\/spark\/network\/client\/TransportResponseHandler.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "org\/apache\/spark\/network\/client\/TransportResponseHandler.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "org\/apache\/spark\/network\/client\/TransportResponseHandler.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "org\/apache\/spark\/network\/client\/TransportResponseHandler.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "org\/apache\/spark\/network\/client\/TransportResponseHandler.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "org\/apache\/spark\/network\/client\/TransportResponseHandler.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "org\/apache\/spark\/network\/client\/TransportResponseHandler.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "org\/apache\/spark\/network\/client\/TransportResponseHandler.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "org\/apache\/spark\/network\/client\/TransportResponseHandler.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "org\/apache\/spark\/network\/client\/TransportResponseHandler.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "org\/apache\/spark\/network\/client\/TransportResponseHandler.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.equals", "link" : "org\/apache\/spark\/network\/client\/TransportResponseHandler.html#equals(x$1:Any):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "org\/apache\/spark\/network\/client\/TransportResponseHandler.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_]", "member" : "scala.AnyRef.getClass", "link" : "org\/apache\/spark\/network\/client\/TransportResponseHandler.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "org\/apache\/spark\/network\/client\/TransportResponseHandler.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "org\/apache\/spark\/network\/client\/TransportResponseHandler.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "class" : "org\/apache\/spark\/network\/client\/TransportResponseHandler.html", "kind" : "class"}], "org.apache.spark.network.protocol" : [{"name" : "org.apache.spark.network.protocol.AbstractMessage", "shortDescription" : "Abstract class for messages which optionally contain a body kept in a separate buffer.", "members_class" : [{"label" : "equals", "tail" : "(other: AbstractMessage): Boolean", "member" : "org.apache.spark.network.protocol.AbstractMessage.equals", "link" : "org\/apache\/spark\/network\/protocol\/AbstractMessage.html#equals(other:org.apache.spark.network.protocol.AbstractMessage):Boolean", "kind" : "def"}, {"label" : "isBodyInFrame", "tail" : "(): Boolean", "member" : "org.apache.spark.network.protocol.AbstractMessage.isBodyInFrame", "link" : "org\/apache\/spark\/network\/protocol\/AbstractMessage.html#isBodyInFrame():Boolean", "kind" : "def"}, {"label" : "body", "tail" : "(): ManagedBuffer", "member" : "org.apache.spark.network.protocol.AbstractMessage.body", "link" : "org\/apache\/spark\/network\/protocol\/AbstractMessage.html#body():org.apache.spark.network.buffer.ManagedBuffer", "kind" : "def"}, {"member" : "org.apache.spark.network.protocol.AbstractMessage#<init>", "error" : "unsupported entity"}, {"member" : "org.apache.spark.network.protocol.AbstractMessage#<init>", "error" : "unsupported entity"}, {"label" : "synchronized", "tail" : "(arg0: â‡’ T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "org\/apache\/spark\/network\/protocol\/AbstractMessage.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "org\/apache\/spark\/network\/protocol\/AbstractMessage.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "org\/apache\/spark\/network\/protocol\/AbstractMessage.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "org\/apache\/spark\/network\/protocol\/AbstractMessage.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "org\/apache\/spark\/network\/protocol\/AbstractMessage.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "org\/apache\/spark\/network\/protocol\/AbstractMessage.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "org\/apache\/spark\/network\/protocol\/AbstractMessage.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "org\/apache\/spark\/network\/protocol\/AbstractMessage.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "org\/apache\/spark\/network\/protocol\/AbstractMessage.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "org\/apache\/spark\/network\/protocol\/AbstractMessage.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "org\/apache\/spark\/network\/protocol\/AbstractMessage.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "org\/apache\/spark\/network\/protocol\/AbstractMessage.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "org\/apache\/spark\/network\/protocol\/AbstractMessage.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "org\/apache\/spark\/network\/protocol\/AbstractMessage.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.equals", "link" : "org\/apache\/spark\/network\/protocol\/AbstractMessage.html#equals(x$1:Any):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "org\/apache\/spark\/network\/protocol\/AbstractMessage.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_]", "member" : "scala.AnyRef.getClass", "link" : "org\/apache\/spark\/network\/protocol\/AbstractMessage.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "org\/apache\/spark\/network\/protocol\/AbstractMessage.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "org\/apache\/spark\/network\/protocol\/AbstractMessage.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}, {"label" : "type", "tail" : "(): Type", "member" : "org.apache.spark.network.protocol.Message.type", "link" : "org\/apache\/spark\/network\/protocol\/AbstractMessage.html#type():org.apache.spark.network.protocol.Message.Type", "kind" : "abstract def"}, {"label" : "encode", "tail" : "(buf: ByteBuf): Unit", "member" : "org.apache.spark.network.protocol.Encodable.encode", "link" : "org\/apache\/spark\/network\/protocol\/AbstractMessage.html#encode(buf:io.netty.buffer.ByteBuf):Unit", "kind" : "abstract def"}, {"label" : "encodedLength", "tail" : "(): Int", "member" : "org.apache.spark.network.protocol.Encodable.encodedLength", "link" : "org\/apache\/spark\/network\/protocol\/AbstractMessage.html#encodedLength():Int", "kind" : "abstract def"}], "class" : "org\/apache\/spark\/network\/protocol\/AbstractMessage.html", "kind" : "class"}, {"name" : "org.apache.spark.network.protocol.AbstractResponseMessage", "shortDescription" : "Abstract class for response messages.", "members_class" : [{"member" : "org.apache.spark.network.protocol.AbstractResponseMessage#<init>", "error" : "unsupported entity"}, {"label" : "equals", "tail" : "(other: AbstractMessage): Boolean", "member" : "org.apache.spark.network.protocol.AbstractMessage.equals", "link" : "org\/apache\/spark\/network\/protocol\/AbstractResponseMessage.html#equals(other:org.apache.spark.network.protocol.AbstractMessage):Boolean", "kind" : "def"}, {"label" : "isBodyInFrame", "tail" : "(): Boolean", "member" : "org.apache.spark.network.protocol.AbstractMessage.isBodyInFrame", "link" : "org\/apache\/spark\/network\/protocol\/AbstractResponseMessage.html#isBodyInFrame():Boolean", "kind" : "def"}, {"label" : "body", "tail" : "(): ManagedBuffer", "member" : "org.apache.spark.network.protocol.AbstractMessage.body", "link" : "org\/apache\/spark\/network\/protocol\/AbstractResponseMessage.html#body():org.apache.spark.network.buffer.ManagedBuffer", "kind" : "def"}, {"label" : "synchronized", "tail" : "(arg0: â‡’ T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "org\/apache\/spark\/network\/protocol\/AbstractResponseMessage.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "org\/apache\/spark\/network\/protocol\/AbstractResponseMessage.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "org\/apache\/spark\/network\/protocol\/AbstractResponseMessage.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "org\/apache\/spark\/network\/protocol\/AbstractResponseMessage.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "org\/apache\/spark\/network\/protocol\/AbstractResponseMessage.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "org\/apache\/spark\/network\/protocol\/AbstractResponseMessage.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "org\/apache\/spark\/network\/protocol\/AbstractResponseMessage.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "org\/apache\/spark\/network\/protocol\/AbstractResponseMessage.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "org\/apache\/spark\/network\/protocol\/AbstractResponseMessage.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "org\/apache\/spark\/network\/protocol\/AbstractResponseMessage.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "org\/apache\/spark\/network\/protocol\/AbstractResponseMessage.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "org\/apache\/spark\/network\/protocol\/AbstractResponseMessage.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "org\/apache\/spark\/network\/protocol\/AbstractResponseMessage.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "org\/apache\/spark\/network\/protocol\/AbstractResponseMessage.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.equals", "link" : "org\/apache\/spark\/network\/protocol\/AbstractResponseMessage.html#equals(x$1:Any):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "org\/apache\/spark\/network\/protocol\/AbstractResponseMessage.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_]", "member" : "scala.AnyRef.getClass", "link" : "org\/apache\/spark\/network\/protocol\/AbstractResponseMessage.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "org\/apache\/spark\/network\/protocol\/AbstractResponseMessage.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "org\/apache\/spark\/network\/protocol\/AbstractResponseMessage.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}, {"label" : "createFailureResponse", "tail" : "(error: String): ResponseMessage", "member" : "org.apache.spark.network.protocol.AbstractResponseMessage.createFailureResponse", "link" : "org\/apache\/spark\/network\/protocol\/AbstractResponseMessage.html#createFailureResponse(error:String):org.apache.spark.network.protocol.ResponseMessage", "kind" : "abstract def"}, {"label" : "type", "tail" : "(): Type", "member" : "org.apache.spark.network.protocol.Message.type", "link" : "org\/apache\/spark\/network\/protocol\/AbstractResponseMessage.html#type():org.apache.spark.network.protocol.Message.Type", "kind" : "abstract def"}, {"label" : "encode", "tail" : "(buf: ByteBuf): Unit", "member" : "org.apache.spark.network.protocol.Encodable.encode", "link" : "org\/apache\/spark\/network\/protocol\/AbstractResponseMessage.html#encode(buf:io.netty.buffer.ByteBuf):Unit", "kind" : "abstract def"}, {"label" : "encodedLength", "tail" : "(): Int", "member" : "org.apache.spark.network.protocol.Encodable.encodedLength", "link" : "org\/apache\/spark\/network\/protocol\/AbstractResponseMessage.html#encodedLength():Int", "kind" : "abstract def"}], "class" : "org\/apache\/spark\/network\/protocol\/AbstractResponseMessage.html", "kind" : "class"}, {"name" : "org.apache.spark.network.protocol.ChunkFetchFailure", "shortDescription" : "Response to ChunkFetchRequest when there is an error fetching the chunk.", "members_class" : [{"label" : "toString", "tail" : "(): String", "member" : "org.apache.spark.network.protocol.ChunkFetchFailure.toString", "link" : "org\/apache\/spark\/network\/protocol\/ChunkFetchFailure.html#toString():String", "kind" : "def"}, {"label" : "equals", "tail" : "(other: Any): Boolean", "member" : "org.apache.spark.network.protocol.ChunkFetchFailure.equals", "link" : "org\/apache\/spark\/network\/protocol\/ChunkFetchFailure.html#equals(other:Any):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "org.apache.spark.network.protocol.ChunkFetchFailure.hashCode", "link" : "org\/apache\/spark\/network\/protocol\/ChunkFetchFailure.html#hashCode():Int", "kind" : "def"}, {"label" : "encode", "tail" : "(buf: ByteBuf): Unit", "member" : "org.apache.spark.network.protocol.ChunkFetchFailure.encode", "link" : "org\/apache\/spark\/network\/protocol\/ChunkFetchFailure.html#encode(buf:io.netty.buffer.ByteBuf):Unit", "kind" : "def"}, {"label" : "encodedLength", "tail" : "(): Int", "member" : "org.apache.spark.network.protocol.ChunkFetchFailure.encodedLength", "link" : "org\/apache\/spark\/network\/protocol\/ChunkFetchFailure.html#encodedLength():Int", "kind" : "def"}, {"label" : "type", "tail" : "(): Type", "member" : "org.apache.spark.network.protocol.ChunkFetchFailure.type", "link" : "org\/apache\/spark\/network\/protocol\/ChunkFetchFailure.html#type():org.apache.spark.network.protocol.Message.Type", "kind" : "def"}, {"member" : "org.apache.spark.network.protocol.ChunkFetchFailure#<init>", "error" : "unsupported entity"}, {"label" : "equals", "tail" : "(other: AbstractMessage): Boolean", "member" : "org.apache.spark.network.protocol.AbstractMessage.equals", "link" : "org\/apache\/spark\/network\/protocol\/ChunkFetchFailure.html#equals(other:org.apache.spark.network.protocol.AbstractMessage):Boolean", "kind" : "def"}, {"label" : "isBodyInFrame", "tail" : "(): Boolean", "member" : "org.apache.spark.network.protocol.AbstractMessage.isBodyInFrame", "link" : "org\/apache\/spark\/network\/protocol\/ChunkFetchFailure.html#isBodyInFrame():Boolean", "kind" : "def"}, {"label" : "body", "tail" : "(): ManagedBuffer", "member" : "org.apache.spark.network.protocol.AbstractMessage.body", "link" : "org\/apache\/spark\/network\/protocol\/ChunkFetchFailure.html#body():org.apache.spark.network.buffer.ManagedBuffer", "kind" : "def"}, {"label" : "synchronized", "tail" : "(arg0: â‡’ T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "org\/apache\/spark\/network\/protocol\/ChunkFetchFailure.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "org\/apache\/spark\/network\/protocol\/ChunkFetchFailure.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "org\/apache\/spark\/network\/protocol\/ChunkFetchFailure.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "org\/apache\/spark\/network\/protocol\/ChunkFetchFailure.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "org\/apache\/spark\/network\/protocol\/ChunkFetchFailure.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "org\/apache\/spark\/network\/protocol\/ChunkFetchFailure.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "org\/apache\/spark\/network\/protocol\/ChunkFetchFailure.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "org\/apache\/spark\/network\/protocol\/ChunkFetchFailure.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "org\/apache\/spark\/network\/protocol\/ChunkFetchFailure.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "org\/apache\/spark\/network\/protocol\/ChunkFetchFailure.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "org\/apache\/spark\/network\/protocol\/ChunkFetchFailure.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "org\/apache\/spark\/network\/protocol\/ChunkFetchFailure.html#notify():Unit", "kind" : "final def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "org\/apache\/spark\/network\/protocol\/ChunkFetchFailure.html#clone():Object", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_]", "member" : "scala.AnyRef.getClass", "link" : "org\/apache\/spark\/network\/protocol\/ChunkFetchFailure.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "org\/apache\/spark\/network\/protocol\/ChunkFetchFailure.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "org\/apache\/spark\/network\/protocol\/ChunkFetchFailure.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "class" : "org\/apache\/spark\/network\/protocol\/ChunkFetchFailure.html", "kind" : "class"}, {"name" : "org.apache.spark.network.protocol.ChunkFetchRequest", "shortDescription" : "Request to fetch a sequence of a single chunk of a stream.", "members_class" : [{"label" : "toString", "tail" : "(): String", "member" : "org.apache.spark.network.protocol.ChunkFetchRequest.toString", "link" : "org\/apache\/spark\/network\/protocol\/ChunkFetchRequest.html#toString():String", "kind" : "def"}, {"label" : "equals", "tail" : "(other: Any): Boolean", "member" : "org.apache.spark.network.protocol.ChunkFetchRequest.equals", "link" : "org\/apache\/spark\/network\/protocol\/ChunkFetchRequest.html#equals(other:Any):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "org.apache.spark.network.protocol.ChunkFetchRequest.hashCode", "link" : "org\/apache\/spark\/network\/protocol\/ChunkFetchRequest.html#hashCode():Int", "kind" : "def"}, {"label" : "encode", "tail" : "(buf: ByteBuf): Unit", "member" : "org.apache.spark.network.protocol.ChunkFetchRequest.encode", "link" : "org\/apache\/spark\/network\/protocol\/ChunkFetchRequest.html#encode(buf:io.netty.buffer.ByteBuf):Unit", "kind" : "def"}, {"label" : "encodedLength", "tail" : "(): Int", "member" : "org.apache.spark.network.protocol.ChunkFetchRequest.encodedLength", "link" : "org\/apache\/spark\/network\/protocol\/ChunkFetchRequest.html#encodedLength():Int", "kind" : "def"}, {"label" : "type", "tail" : "(): Type", "member" : "org.apache.spark.network.protocol.ChunkFetchRequest.type", "link" : "org\/apache\/spark\/network\/protocol\/ChunkFetchRequest.html#type():org.apache.spark.network.protocol.Message.Type", "kind" : "def"}, {"member" : "org.apache.spark.network.protocol.ChunkFetchRequest#<init>", "error" : "unsupported entity"}, {"label" : "equals", "tail" : "(other: AbstractMessage): Boolean", "member" : "org.apache.spark.network.protocol.AbstractMessage.equals", "link" : "org\/apache\/spark\/network\/protocol\/ChunkFetchRequest.html#equals(other:org.apache.spark.network.protocol.AbstractMessage):Boolean", "kind" : "def"}, {"label" : "isBodyInFrame", "tail" : "(): Boolean", "member" : "org.apache.spark.network.protocol.AbstractMessage.isBodyInFrame", "link" : "org\/apache\/spark\/network\/protocol\/ChunkFetchRequest.html#isBodyInFrame():Boolean", "kind" : "def"}, {"label" : "body", "tail" : "(): ManagedBuffer", "member" : "org.apache.spark.network.protocol.AbstractMessage.body", "link" : "org\/apache\/spark\/network\/protocol\/ChunkFetchRequest.html#body():org.apache.spark.network.buffer.ManagedBuffer", "kind" : "def"}, {"label" : "synchronized", "tail" : "(arg0: â‡’ T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "org\/apache\/spark\/network\/protocol\/ChunkFetchRequest.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "org\/apache\/spark\/network\/protocol\/ChunkFetchRequest.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "org\/apache\/spark\/network\/protocol\/ChunkFetchRequest.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "org\/apache\/spark\/network\/protocol\/ChunkFetchRequest.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "org\/apache\/spark\/network\/protocol\/ChunkFetchRequest.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "org\/apache\/spark\/network\/protocol\/ChunkFetchRequest.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "org\/apache\/spark\/network\/protocol\/ChunkFetchRequest.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "org\/apache\/spark\/network\/protocol\/ChunkFetchRequest.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "org\/apache\/spark\/network\/protocol\/ChunkFetchRequest.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "org\/apache\/spark\/network\/protocol\/ChunkFetchRequest.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "org\/apache\/spark\/network\/protocol\/ChunkFetchRequest.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "org\/apache\/spark\/network\/protocol\/ChunkFetchRequest.html#notify():Unit", "kind" : "final def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "org\/apache\/spark\/network\/protocol\/ChunkFetchRequest.html#clone():Object", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_]", "member" : "scala.AnyRef.getClass", "link" : "org\/apache\/spark\/network\/protocol\/ChunkFetchRequest.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "org\/apache\/spark\/network\/protocol\/ChunkFetchRequest.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "org\/apache\/spark\/network\/protocol\/ChunkFetchRequest.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "class" : "org\/apache\/spark\/network\/protocol\/ChunkFetchRequest.html", "kind" : "class"}, {"name" : "org.apache.spark.network.protocol.ChunkFetchSuccess", "shortDescription" : "Response to ChunkFetchRequest when a chunk exists and has been successfully fetched.", "members_class" : [{"label" : "toString", "tail" : "(): String", "member" : "org.apache.spark.network.protocol.ChunkFetchSuccess.toString", "link" : "org\/apache\/spark\/network\/protocol\/ChunkFetchSuccess.html#toString():String", "kind" : "def"}, {"label" : "equals", "tail" : "(other: Any): Boolean", "member" : "org.apache.spark.network.protocol.ChunkFetchSuccess.equals", "link" : "org\/apache\/spark\/network\/protocol\/ChunkFetchSuccess.html#equals(other:Any):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "org.apache.spark.network.protocol.ChunkFetchSuccess.hashCode", "link" : "org\/apache\/spark\/network\/protocol\/ChunkFetchSuccess.html#hashCode():Int", "kind" : "def"}, {"label" : "createFailureResponse", "tail" : "(error: String): ResponseMessage", "member" : "org.apache.spark.network.protocol.ChunkFetchSuccess.createFailureResponse", "link" : "org\/apache\/spark\/network\/protocol\/ChunkFetchSuccess.html#createFailureResponse(error:String):org.apache.spark.network.protocol.ResponseMessage", "kind" : "def"}, {"label" : "encode", "tail" : "(buf: ByteBuf): Unit", "member" : "org.apache.spark.network.protocol.ChunkFetchSuccess.encode", "link" : "org\/apache\/spark\/network\/protocol\/ChunkFetchSuccess.html#encode(buf:io.netty.buffer.ByteBuf):Unit", "kind" : "def"}, {"label" : "encodedLength", "tail" : "(): Int", "member" : "org.apache.spark.network.protocol.ChunkFetchSuccess.encodedLength", "link" : "org\/apache\/spark\/network\/protocol\/ChunkFetchSuccess.html#encodedLength():Int", "kind" : "def"}, {"label" : "type", "tail" : "(): Type", "member" : "org.apache.spark.network.protocol.ChunkFetchSuccess.type", "link" : "org\/apache\/spark\/network\/protocol\/ChunkFetchSuccess.html#type():org.apache.spark.network.protocol.Message.Type", "kind" : "def"}, {"member" : "org.apache.spark.network.protocol.ChunkFetchSuccess#<init>", "error" : "unsupported entity"}, {"label" : "equals", "tail" : "(other: AbstractMessage): Boolean", "member" : "org.apache.spark.network.protocol.AbstractMessage.equals", "link" : "org\/apache\/spark\/network\/protocol\/ChunkFetchSuccess.html#equals(other:org.apache.spark.network.protocol.AbstractMessage):Boolean", "kind" : "def"}, {"label" : "isBodyInFrame", "tail" : "(): Boolean", "member" : "org.apache.spark.network.protocol.AbstractMessage.isBodyInFrame", "link" : "org\/apache\/spark\/network\/protocol\/ChunkFetchSuccess.html#isBodyInFrame():Boolean", "kind" : "def"}, {"label" : "body", "tail" : "(): ManagedBuffer", "member" : "org.apache.spark.network.protocol.AbstractMessage.body", "link" : "org\/apache\/spark\/network\/protocol\/ChunkFetchSuccess.html#body():org.apache.spark.network.buffer.ManagedBuffer", "kind" : "def"}, {"label" : "synchronized", "tail" : "(arg0: â‡’ T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "org\/apache\/spark\/network\/protocol\/ChunkFetchSuccess.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "org\/apache\/spark\/network\/protocol\/ChunkFetchSuccess.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "org\/apache\/spark\/network\/protocol\/ChunkFetchSuccess.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "org\/apache\/spark\/network\/protocol\/ChunkFetchSuccess.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "org\/apache\/spark\/network\/protocol\/ChunkFetchSuccess.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "org\/apache\/spark\/network\/protocol\/ChunkFetchSuccess.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "org\/apache\/spark\/network\/protocol\/ChunkFetchSuccess.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "org\/apache\/spark\/network\/protocol\/ChunkFetchSuccess.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "org\/apache\/spark\/network\/protocol\/ChunkFetchSuccess.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "org\/apache\/spark\/network\/protocol\/ChunkFetchSuccess.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "org\/apache\/spark\/network\/protocol\/ChunkFetchSuccess.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "org\/apache\/spark\/network\/protocol\/ChunkFetchSuccess.html#notify():Unit", "kind" : "final def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "org\/apache\/spark\/network\/protocol\/ChunkFetchSuccess.html#clone():Object", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_]", "member" : "scala.AnyRef.getClass", "link" : "org\/apache\/spark\/network\/protocol\/ChunkFetchSuccess.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "org\/apache\/spark\/network\/protocol\/ChunkFetchSuccess.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "org\/apache\/spark\/network\/protocol\/ChunkFetchSuccess.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "class" : "org\/apache\/spark\/network\/protocol\/ChunkFetchSuccess.html", "kind" : "class"}, {"name" : "org.apache.spark.network.protocol.Encodable", "members_trait" : [{"member" : "org.apache.spark.network.protocol.Encodable#<init>", "error" : "unsupported entity"}, {"label" : "synchronized", "tail" : "(arg0: â‡’ T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "org\/apache\/spark\/network\/protocol\/Encodable.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "org\/apache\/spark\/network\/protocol\/Encodable.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "org\/apache\/spark\/network\/protocol\/Encodable.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "org\/apache\/spark\/network\/protocol\/Encodable.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "org\/apache\/spark\/network\/protocol\/Encodable.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "org\/apache\/spark\/network\/protocol\/Encodable.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "org\/apache\/spark\/network\/protocol\/Encodable.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "org\/apache\/spark\/network\/protocol\/Encodable.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "org\/apache\/spark\/network\/protocol\/Encodable.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "org\/apache\/spark\/network\/protocol\/Encodable.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "org\/apache\/spark\/network\/protocol\/Encodable.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "org\/apache\/spark\/network\/protocol\/Encodable.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "org\/apache\/spark\/network\/protocol\/Encodable.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "org\/apache\/spark\/network\/protocol\/Encodable.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.equals", "link" : "org\/apache\/spark\/network\/protocol\/Encodable.html#equals(x$1:Any):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "org\/apache\/spark\/network\/protocol\/Encodable.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_]", "member" : "scala.AnyRef.getClass", "link" : "org\/apache\/spark\/network\/protocol\/Encodable.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "org\/apache\/spark\/network\/protocol\/Encodable.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "org\/apache\/spark\/network\/protocol\/Encodable.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}, {"label" : "encode", "tail" : "(buf: ByteBuf): Unit", "member" : "org.apache.spark.network.protocol.Encodable.encode", "link" : "org\/apache\/spark\/network\/protocol\/Encodable.html#encode(buf:io.netty.buffer.ByteBuf):Unit", "kind" : "abstract def"}, {"label" : "encodedLength", "tail" : "(): Int", "member" : "org.apache.spark.network.protocol.Encodable.encodedLength", "link" : "org\/apache\/spark\/network\/protocol\/Encodable.html#encodedLength():Int", "kind" : "abstract def"}], "shortDescription" : "Interface for an object which can be encoded into a ByteBuf.", "trait" : "org\/apache\/spark\/network\/protocol\/Encodable.html", "kind" : "trait"}, {"name" : "org.apache.spark.network.protocol.Encoders", "shortDescription" : "Provides a canonical set of Encoders for simple types.", "members_class" : [{"member" : "org.apache.spark.network.protocol.Encoders#<init>", "error" : "unsupported entity"}, {"label" : "synchronized", "tail" : "(arg0: â‡’ T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "org\/apache\/spark\/network\/protocol\/Encoders.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "org\/apache\/spark\/network\/protocol\/Encoders.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "org\/apache\/spark\/network\/protocol\/Encoders.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "org\/apache\/spark\/network\/protocol\/Encoders.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "org\/apache\/spark\/network\/protocol\/Encoders.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "org\/apache\/spark\/network\/protocol\/Encoders.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "org\/apache\/spark\/network\/protocol\/Encoders.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "org\/apache\/spark\/network\/protocol\/Encoders.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "org\/apache\/spark\/network\/protocol\/Encoders.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "org\/apache\/spark\/network\/protocol\/Encoders.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "org\/apache\/spark\/network\/protocol\/Encoders.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "org\/apache\/spark\/network\/protocol\/Encoders.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "org\/apache\/spark\/network\/protocol\/Encoders.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "org\/apache\/spark\/network\/protocol\/Encoders.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.equals", "link" : "org\/apache\/spark\/network\/protocol\/Encoders.html#equals(x$1:Any):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "org\/apache\/spark\/network\/protocol\/Encoders.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_]", "member" : "scala.AnyRef.getClass", "link" : "org\/apache\/spark\/network\/protocol\/Encoders.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "org\/apache\/spark\/network\/protocol\/Encoders.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "org\/apache\/spark\/network\/protocol\/Encoders.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "class" : "org\/apache\/spark\/network\/protocol\/Encoders.html", "kind" : "class"}, {"name" : "org.apache.spark.network.protocol.MergedBlockMetaRequest", "shortDescription" : "Request to find the meta information for the specified merged block.", "members_class" : [{"label" : "toString", "tail" : "(): String", "member" : "org.apache.spark.network.protocol.MergedBlockMetaRequest.toString", "link" : "org\/apache\/spark\/network\/protocol\/MergedBlockMetaRequest.html#toString():String", "kind" : "def"}, {"label" : "equals", "tail" : "(other: Any): Boolean", "member" : "org.apache.spark.network.protocol.MergedBlockMetaRequest.equals", "link" : "org\/apache\/spark\/network\/protocol\/MergedBlockMetaRequest.html#equals(other:Any):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "org.apache.spark.network.protocol.MergedBlockMetaRequest.hashCode", "link" : "org\/apache\/spark\/network\/protocol\/MergedBlockMetaRequest.html#hashCode():Int", "kind" : "def"}, {"label" : "encode", "tail" : "(buf: ByteBuf): Unit", "member" : "org.apache.spark.network.protocol.MergedBlockMetaRequest.encode", "link" : "org\/apache\/spark\/network\/protocol\/MergedBlockMetaRequest.html#encode(buf:io.netty.buffer.ByteBuf):Unit", "kind" : "def"}, {"label" : "encodedLength", "tail" : "(): Int", "member" : "org.apache.spark.network.protocol.MergedBlockMetaRequest.encodedLength", "link" : "org\/apache\/spark\/network\/protocol\/MergedBlockMetaRequest.html#encodedLength():Int", "kind" : "def"}, {"label" : "type", "tail" : "(): Type", "member" : "org.apache.spark.network.protocol.MergedBlockMetaRequest.type", "link" : "org\/apache\/spark\/network\/protocol\/MergedBlockMetaRequest.html#type():org.apache.spark.network.protocol.Message.Type", "kind" : "def"}, {"member" : "org.apache.spark.network.protocol.MergedBlockMetaRequest#<init>", "error" : "unsupported entity"}, {"label" : "equals", "tail" : "(other: AbstractMessage): Boolean", "member" : "org.apache.spark.network.protocol.AbstractMessage.equals", "link" : "org\/apache\/spark\/network\/protocol\/MergedBlockMetaRequest.html#equals(other:org.apache.spark.network.protocol.AbstractMessage):Boolean", "kind" : "def"}, {"label" : "isBodyInFrame", "tail" : "(): Boolean", "member" : "org.apache.spark.network.protocol.AbstractMessage.isBodyInFrame", "link" : "org\/apache\/spark\/network\/protocol\/MergedBlockMetaRequest.html#isBodyInFrame():Boolean", "kind" : "def"}, {"label" : "body", "tail" : "(): ManagedBuffer", "member" : "org.apache.spark.network.protocol.AbstractMessage.body", "link" : "org\/apache\/spark\/network\/protocol\/MergedBlockMetaRequest.html#body():org.apache.spark.network.buffer.ManagedBuffer", "kind" : "def"}, {"label" : "synchronized", "tail" : "(arg0: â‡’ T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "org\/apache\/spark\/network\/protocol\/MergedBlockMetaRequest.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "org\/apache\/spark\/network\/protocol\/MergedBlockMetaRequest.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "org\/apache\/spark\/network\/protocol\/MergedBlockMetaRequest.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "org\/apache\/spark\/network\/protocol\/MergedBlockMetaRequest.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "org\/apache\/spark\/network\/protocol\/MergedBlockMetaRequest.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "org\/apache\/spark\/network\/protocol\/MergedBlockMetaRequest.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "org\/apache\/spark\/network\/protocol\/MergedBlockMetaRequest.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "org\/apache\/spark\/network\/protocol\/MergedBlockMetaRequest.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "org\/apache\/spark\/network\/protocol\/MergedBlockMetaRequest.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "org\/apache\/spark\/network\/protocol\/MergedBlockMetaRequest.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "org\/apache\/spark\/network\/protocol\/MergedBlockMetaRequest.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "org\/apache\/spark\/network\/protocol\/MergedBlockMetaRequest.html#notify():Unit", "kind" : "final def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "org\/apache\/spark\/network\/protocol\/MergedBlockMetaRequest.html#clone():Object", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_]", "member" : "scala.AnyRef.getClass", "link" : "org\/apache\/spark\/network\/protocol\/MergedBlockMetaRequest.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "org\/apache\/spark\/network\/protocol\/MergedBlockMetaRequest.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "org\/apache\/spark\/network\/protocol\/MergedBlockMetaRequest.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "class" : "org\/apache\/spark\/network\/protocol\/MergedBlockMetaRequest.html", "kind" : "class"}, {"name" : "org.apache.spark.network.protocol.MergedBlockMetaSuccess", "shortDescription" : "Response to MergedBlockMetaRequest request.", "members_class" : [{"label" : "createFailureResponse", "tail" : "(error: String): ResponseMessage", "member" : "org.apache.spark.network.protocol.MergedBlockMetaSuccess.createFailureResponse", "link" : "org\/apache\/spark\/network\/protocol\/MergedBlockMetaSuccess.html#createFailureResponse(error:String):org.apache.spark.network.protocol.ResponseMessage", "kind" : "def"}, {"label" : "getNumChunks", "tail" : "(): Int", "member" : "org.apache.spark.network.protocol.MergedBlockMetaSuccess.getNumChunks", "link" : "org\/apache\/spark\/network\/protocol\/MergedBlockMetaSuccess.html#getNumChunks():Int", "kind" : "def"}, {"label" : "encode", "tail" : "(buf: ByteBuf): Unit", "member" : "org.apache.spark.network.protocol.MergedBlockMetaSuccess.encode", "link" : "org\/apache\/spark\/network\/protocol\/MergedBlockMetaSuccess.html#encode(buf:io.netty.buffer.ByteBuf):Unit", "kind" : "def"}, {"label" : "encodedLength", "tail" : "(): Int", "member" : "org.apache.spark.network.protocol.MergedBlockMetaSuccess.encodedLength", "link" : "org\/apache\/spark\/network\/protocol\/MergedBlockMetaSuccess.html#encodedLength():Int", "kind" : "def"}, {"label" : "toString", "tail" : "(): String", "member" : "org.apache.spark.network.protocol.MergedBlockMetaSuccess.toString", "link" : "org\/apache\/spark\/network\/protocol\/MergedBlockMetaSuccess.html#toString():String", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "org.apache.spark.network.protocol.MergedBlockMetaSuccess.hashCode", "link" : "org\/apache\/spark\/network\/protocol\/MergedBlockMetaSuccess.html#hashCode():Int", "kind" : "def"}, {"label" : "type", "tail" : "(): Type", "member" : "org.apache.spark.network.protocol.MergedBlockMetaSuccess.type", "link" : "org\/apache\/spark\/network\/protocol\/MergedBlockMetaSuccess.html#type():org.apache.spark.network.protocol.Message.Type", "kind" : "def"}, {"member" : "org.apache.spark.network.protocol.MergedBlockMetaSuccess#<init>", "error" : "unsupported entity"}, {"label" : "equals", "tail" : "(other: AbstractMessage): Boolean", "member" : "org.apache.spark.network.protocol.AbstractMessage.equals", "link" : "org\/apache\/spark\/network\/protocol\/MergedBlockMetaSuccess.html#equals(other:org.apache.spark.network.protocol.AbstractMessage):Boolean", "kind" : "def"}, {"label" : "isBodyInFrame", "tail" : "(): Boolean", "member" : "org.apache.spark.network.protocol.AbstractMessage.isBodyInFrame", "link" : "org\/apache\/spark\/network\/protocol\/MergedBlockMetaSuccess.html#isBodyInFrame():Boolean", "kind" : "def"}, {"label" : "body", "tail" : "(): ManagedBuffer", "member" : "org.apache.spark.network.protocol.AbstractMessage.body", "link" : "org\/apache\/spark\/network\/protocol\/MergedBlockMetaSuccess.html#body():org.apache.spark.network.buffer.ManagedBuffer", "kind" : "def"}, {"label" : "synchronized", "tail" : "(arg0: â‡’ T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "org\/apache\/spark\/network\/protocol\/MergedBlockMetaSuccess.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "org\/apache\/spark\/network\/protocol\/MergedBlockMetaSuccess.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "org\/apache\/spark\/network\/protocol\/MergedBlockMetaSuccess.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "org\/apache\/spark\/network\/protocol\/MergedBlockMetaSuccess.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "org\/apache\/spark\/network\/protocol\/MergedBlockMetaSuccess.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "org\/apache\/spark\/network\/protocol\/MergedBlockMetaSuccess.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "org\/apache\/spark\/network\/protocol\/MergedBlockMetaSuccess.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "org\/apache\/spark\/network\/protocol\/MergedBlockMetaSuccess.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "org\/apache\/spark\/network\/protocol\/MergedBlockMetaSuccess.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "org\/apache\/spark\/network\/protocol\/MergedBlockMetaSuccess.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "org\/apache\/spark\/network\/protocol\/MergedBlockMetaSuccess.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "org\/apache\/spark\/network\/protocol\/MergedBlockMetaSuccess.html#notify():Unit", "kind" : "final def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "org\/apache\/spark\/network\/protocol\/MergedBlockMetaSuccess.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.equals", "link" : "org\/apache\/spark\/network\/protocol\/MergedBlockMetaSuccess.html#equals(x$1:Any):Boolean", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_]", "member" : "scala.AnyRef.getClass", "link" : "org\/apache\/spark\/network\/protocol\/MergedBlockMetaSuccess.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "org\/apache\/spark\/network\/protocol\/MergedBlockMetaSuccess.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "org\/apache\/spark\/network\/protocol\/MergedBlockMetaSuccess.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "class" : "org\/apache\/spark\/network\/protocol\/MergedBlockMetaSuccess.html", "kind" : "class"}, {"name" : "org.apache.spark.network.protocol.Message", "members_trait" : [{"member" : "org.apache.spark.network.protocol.Message#<init>", "error" : "unsupported entity"}, {"label" : "synchronized", "tail" : "(arg0: â‡’ T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "org\/apache\/spark\/network\/protocol\/Message.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "org\/apache\/spark\/network\/protocol\/Message.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "org\/apache\/spark\/network\/protocol\/Message.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "org\/apache\/spark\/network\/protocol\/Message.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "org\/apache\/spark\/network\/protocol\/Message.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "org\/apache\/spark\/network\/protocol\/Message.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "org\/apache\/spark\/network\/protocol\/Message.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "org\/apache\/spark\/network\/protocol\/Message.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "org\/apache\/spark\/network\/protocol\/Message.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "org\/apache\/spark\/network\/protocol\/Message.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "org\/apache\/spark\/network\/protocol\/Message.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "org\/apache\/spark\/network\/protocol\/Message.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "org\/apache\/spark\/network\/protocol\/Message.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "org\/apache\/spark\/network\/protocol\/Message.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.equals", "link" : "org\/apache\/spark\/network\/protocol\/Message.html#equals(x$1:Any):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "org\/apache\/spark\/network\/protocol\/Message.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_]", "member" : "scala.AnyRef.getClass", "link" : "org\/apache\/spark\/network\/protocol\/Message.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "org\/apache\/spark\/network\/protocol\/Message.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "org\/apache\/spark\/network\/protocol\/Message.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}, {"label" : "isBodyInFrame", "tail" : "(): Boolean", "member" : "org.apache.spark.network.protocol.Message.isBodyInFrame", "link" : "org\/apache\/spark\/network\/protocol\/Message.html#isBodyInFrame():Boolean", "kind" : "abstract def"}, {"label" : "body", "tail" : "(): ManagedBuffer", "member" : "org.apache.spark.network.protocol.Message.body", "link" : "org\/apache\/spark\/network\/protocol\/Message.html#body():org.apache.spark.network.buffer.ManagedBuffer", "kind" : "abstract def"}, {"label" : "type", "tail" : "(): Type", "member" : "org.apache.spark.network.protocol.Message.type", "link" : "org\/apache\/spark\/network\/protocol\/Message.html#type():org.apache.spark.network.protocol.Message.Type", "kind" : "abstract def"}, {"label" : "encode", "tail" : "(buf: ByteBuf): Unit", "member" : "org.apache.spark.network.protocol.Encodable.encode", "link" : "org\/apache\/spark\/network\/protocol\/Message.html#encode(buf:io.netty.buffer.ByteBuf):Unit", "kind" : "abstract def"}, {"label" : "encodedLength", "tail" : "(): Int", "member" : "org.apache.spark.network.protocol.Encodable.encodedLength", "link" : "org\/apache\/spark\/network\/protocol\/Message.html#encodedLength():Int", "kind" : "abstract def"}], "shortDescription" : "An on-the-wire transmittable message.", "trait" : "org\/apache\/spark\/network\/protocol\/Message.html", "kind" : "trait"}, {"name" : "org.apache.spark.network.protocol.MessageDecoder", "shortDescription" : "Decoder used by the client side to encode server-to-client responses.", "members_class" : [{"label" : "decode", "tail" : "(ctx: ChannelHandlerContext, in: ByteBuf, out: List[AnyRef]): Unit", "member" : "org.apache.spark.network.protocol.MessageDecoder.decode", "link" : "org\/apache\/spark\/network\/protocol\/MessageDecoder.html#decode(ctx:io.netty.channel.ChannelHandlerContext,in:io.netty.buffer.ByteBuf,out:java.util.List[Object]):Unit", "kind" : "def"}, {"label" : "channelRead", "tail" : "(arg0: ChannelHandlerContext, arg1: Any): Unit", "member" : "io.netty.handler.codec.MessageToMessageDecoder.channelRead", "link" : "org\/apache\/spark\/network\/protocol\/MessageDecoder.html#channelRead(x$1:io.netty.channel.ChannelHandlerContext,x$2:Any):Unit", "kind" : "def"}, {"label" : "acceptInboundMessage", "tail" : "(arg0: Any): Boolean", "member" : "io.netty.handler.codec.MessageToMessageDecoder.acceptInboundMessage", "link" : "org\/apache\/spark\/network\/protocol\/MessageDecoder.html#acceptInboundMessage(x$1:Any):Boolean", "kind" : "def"}, {"label" : "exceptionCaught", "tail" : "(arg0: ChannelHandlerContext, arg1: Throwable): Unit", "member" : "io.netty.channel.ChannelInboundHandlerAdapter.exceptionCaught", "link" : "org\/apache\/spark\/network\/protocol\/MessageDecoder.html#exceptionCaught(x$1:io.netty.channel.ChannelHandlerContext,x$2:Throwable):Unit", "kind" : "def"}, {"label" : "channelWritabilityChanged", "tail" : "(arg0: ChannelHandlerContext): Unit", "member" : "io.netty.channel.ChannelInboundHandlerAdapter.channelWritabilityChanged", "link" : "org\/apache\/spark\/network\/protocol\/MessageDecoder.html#channelWritabilityChanged(x$1:io.netty.channel.ChannelHandlerContext):Unit", "kind" : "def"}, {"label" : "userEventTriggered", "tail" : "(arg0: ChannelHandlerContext, arg1: Any): Unit", "member" : "io.netty.channel.ChannelInboundHandlerAdapter.userEventTriggered", "link" : "org\/apache\/spark\/network\/protocol\/MessageDecoder.html#userEventTriggered(x$1:io.netty.channel.ChannelHandlerContext,x$2:Any):Unit", "kind" : "def"}, {"label" : "channelReadComplete", "tail" : "(arg0: ChannelHandlerContext): Unit", "member" : "io.netty.channel.ChannelInboundHandlerAdapter.channelReadComplete", "link" : "org\/apache\/spark\/network\/protocol\/MessageDecoder.html#channelReadComplete(x$1:io.netty.channel.ChannelHandlerContext):Unit", "kind" : "def"}, {"label" : "channelInactive", "tail" : "(arg0: ChannelHandlerContext): Unit", "member" : "io.netty.channel.ChannelInboundHandlerAdapter.channelInactive", "link" : "org\/apache\/spark\/network\/protocol\/MessageDecoder.html#channelInactive(x$1:io.netty.channel.ChannelHandlerContext):Unit", "kind" : "def"}, {"label" : "channelActive", "tail" : "(arg0: ChannelHandlerContext): Unit", "member" : "io.netty.channel.ChannelInboundHandlerAdapter.channelActive", "link" : "org\/apache\/spark\/network\/protocol\/MessageDecoder.html#channelActive(x$1:io.netty.channel.ChannelHandlerContext):Unit", "kind" : "def"}, {"label" : "channelUnregistered", "tail" : "(arg0: ChannelHandlerContext): Unit", "member" : "io.netty.channel.ChannelInboundHandlerAdapter.channelUnregistered", "link" : "org\/apache\/spark\/network\/protocol\/MessageDecoder.html#channelUnregistered(x$1:io.netty.channel.ChannelHandlerContext):Unit", "kind" : "def"}, {"label" : "channelRegistered", "tail" : "(arg0: ChannelHandlerContext): Unit", "member" : "io.netty.channel.ChannelInboundHandlerAdapter.channelRegistered", "link" : "org\/apache\/spark\/network\/protocol\/MessageDecoder.html#channelRegistered(x$1:io.netty.channel.ChannelHandlerContext):Unit", "kind" : "def"}, {"label" : "handlerRemoved", "tail" : "(arg0: ChannelHandlerContext): Unit", "member" : "io.netty.channel.ChannelHandlerAdapter.handlerRemoved", "link" : "org\/apache\/spark\/network\/protocol\/MessageDecoder.html#handlerRemoved(x$1:io.netty.channel.ChannelHandlerContext):Unit", "kind" : "def"}, {"label" : "handlerAdded", "tail" : "(arg0: ChannelHandlerContext): Unit", "member" : "io.netty.channel.ChannelHandlerAdapter.handlerAdded", "link" : "org\/apache\/spark\/network\/protocol\/MessageDecoder.html#handlerAdded(x$1:io.netty.channel.ChannelHandlerContext):Unit", "kind" : "def"}, {"label" : "isSharable", "tail" : "(): Boolean", "member" : "io.netty.channel.ChannelHandlerAdapter.isSharable", "link" : "org\/apache\/spark\/network\/protocol\/MessageDecoder.html#isSharable():Boolean", "kind" : "def"}, {"label" : "ensureNotSharable", "tail" : "(): Unit", "member" : "io.netty.channel.ChannelHandlerAdapter.ensureNotSharable", "link" : "org\/apache\/spark\/network\/protocol\/MessageDecoder.html#ensureNotSharable():Unit", "kind" : "def"}, {"label" : "synchronized", "tail" : "(arg0: â‡’ T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "org\/apache\/spark\/network\/protocol\/MessageDecoder.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "org\/apache\/spark\/network\/protocol\/MessageDecoder.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "org\/apache\/spark\/network\/protocol\/MessageDecoder.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "org\/apache\/spark\/network\/protocol\/MessageDecoder.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "org\/apache\/spark\/network\/protocol\/MessageDecoder.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "org\/apache\/spark\/network\/protocol\/MessageDecoder.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "org\/apache\/spark\/network\/protocol\/MessageDecoder.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "org\/apache\/spark\/network\/protocol\/MessageDecoder.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "org\/apache\/spark\/network\/protocol\/MessageDecoder.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "org\/apache\/spark\/network\/protocol\/MessageDecoder.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "org\/apache\/spark\/network\/protocol\/MessageDecoder.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "org\/apache\/spark\/network\/protocol\/MessageDecoder.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "org\/apache\/spark\/network\/protocol\/MessageDecoder.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "org\/apache\/spark\/network\/protocol\/MessageDecoder.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.equals", "link" : "org\/apache\/spark\/network\/protocol\/MessageDecoder.html#equals(x$1:Any):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "org\/apache\/spark\/network\/protocol\/MessageDecoder.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_]", "member" : "scala.AnyRef.getClass", "link" : "org\/apache\/spark\/network\/protocol\/MessageDecoder.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "org\/apache\/spark\/network\/protocol\/MessageDecoder.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "org\/apache\/spark\/network\/protocol\/MessageDecoder.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "class" : "org\/apache\/spark\/network\/protocol\/MessageDecoder.html", "kind" : "class"}, {"name" : "org.apache.spark.network.protocol.MessageEncoder", "shortDescription" : "Encoder used by the server side to encode server-to-client responses.", "members_class" : [{"label" : "encode", "tail" : "(ctx: ChannelHandlerContext, in: Message, out: List[AnyRef]): Unit", "member" : "org.apache.spark.network.protocol.MessageEncoder.encode", "link" : "org\/apache\/spark\/network\/protocol\/MessageEncoder.html#encode(ctx:io.netty.channel.ChannelHandlerContext,in:org.apache.spark.network.protocol.Message,out:java.util.List[Object]):Unit", "kind" : "def"}, {"label" : "write", "tail" : "(arg0: ChannelHandlerContext, arg1: Any, arg2: ChannelPromise): Unit", "member" : "io.netty.handler.codec.MessageToMessageEncoder.write", "link" : "org\/apache\/spark\/network\/protocol\/MessageEncoder.html#write(x$1:io.netty.channel.ChannelHandlerContext,x$2:Any,x$3:io.netty.channel.ChannelPromise):Unit", "kind" : "def"}, {"label" : "acceptOutboundMessage", "tail" : "(arg0: Any): Boolean", "member" : "io.netty.handler.codec.MessageToMessageEncoder.acceptOutboundMessage", "link" : "org\/apache\/spark\/network\/protocol\/MessageEncoder.html#acceptOutboundMessage(x$1:Any):Boolean", "kind" : "def"}, {"label" : "flush", "tail" : "(arg0: ChannelHandlerContext): Unit", "member" : "io.netty.channel.ChannelOutboundHandlerAdapter.flush", "link" : "org\/apache\/spark\/network\/protocol\/MessageEncoder.html#flush(x$1:io.netty.channel.ChannelHandlerContext):Unit", "kind" : "def"}, {"label" : "read", "tail" : "(arg0: ChannelHandlerContext): Unit", "member" : "io.netty.channel.ChannelOutboundHandlerAdapter.read", "link" : "org\/apache\/spark\/network\/protocol\/MessageEncoder.html#read(x$1:io.netty.channel.ChannelHandlerContext):Unit", "kind" : "def"}, {"label" : "deregister", "tail" : "(arg0: ChannelHandlerContext, arg1: ChannelPromise): Unit", "member" : "io.netty.channel.ChannelOutboundHandlerAdapter.deregister", "link" : "org\/apache\/spark\/network\/protocol\/MessageEncoder.html#deregister(x$1:io.netty.channel.ChannelHandlerContext,x$2:io.netty.channel.ChannelPromise):Unit", "kind" : "def"}, {"label" : "close", "tail" : "(arg0: ChannelHandlerContext, arg1: ChannelPromise): Unit", "member" : "io.netty.channel.ChannelOutboundHandlerAdapter.close", "link" : "org\/apache\/spark\/network\/protocol\/MessageEncoder.html#close(x$1:io.netty.channel.ChannelHandlerContext,x$2:io.netty.channel.ChannelPromise):Unit", "kind" : "def"}, {"label" : "disconnect", "tail" : "(arg0: ChannelHandlerContext, arg1: ChannelPromise): Unit", "member" : "io.netty.channel.ChannelOutboundHandlerAdapter.disconnect", "link" : "org\/apache\/spark\/network\/protocol\/MessageEncoder.html#disconnect(x$1:io.netty.channel.ChannelHandlerContext,x$2:io.netty.channel.ChannelPromise):Unit", "kind" : "def"}, {"label" : "connect", "tail" : "(arg0: ChannelHandlerContext, arg1: SocketAddress, arg2: SocketAddress, arg3: ChannelPromise): Unit", "member" : "io.netty.channel.ChannelOutboundHandlerAdapter.connect", "link" : "org\/apache\/spark\/network\/protocol\/MessageEncoder.html#connect(x$1:io.netty.channel.ChannelHandlerContext,x$2:java.net.SocketAddress,x$3:java.net.SocketAddress,x$4:io.netty.channel.ChannelPromise):Unit", "kind" : "def"}, {"label" : "bind", "tail" : "(arg0: ChannelHandlerContext, arg1: SocketAddress, arg2: ChannelPromise): Unit", "member" : "io.netty.channel.ChannelOutboundHandlerAdapter.bind", "link" : "org\/apache\/spark\/network\/protocol\/MessageEncoder.html#bind(x$1:io.netty.channel.ChannelHandlerContext,x$2:java.net.SocketAddress,x$3:io.netty.channel.ChannelPromise):Unit", "kind" : "def"}, {"label" : "exceptionCaught", "tail" : "(arg0: ChannelHandlerContext, arg1: Throwable): Unit", "member" : "io.netty.channel.ChannelHandlerAdapter.exceptionCaught", "link" : "org\/apache\/spark\/network\/protocol\/MessageEncoder.html#exceptionCaught(x$1:io.netty.channel.ChannelHandlerContext,x$2:Throwable):Unit", "kind" : "def"}, {"label" : "handlerRemoved", "tail" : "(arg0: ChannelHandlerContext): Unit", "member" : "io.netty.channel.ChannelHandlerAdapter.handlerRemoved", "link" : "org\/apache\/spark\/network\/protocol\/MessageEncoder.html#handlerRemoved(x$1:io.netty.channel.ChannelHandlerContext):Unit", "kind" : "def"}, {"label" : "handlerAdded", "tail" : "(arg0: ChannelHandlerContext): Unit", "member" : "io.netty.channel.ChannelHandlerAdapter.handlerAdded", "link" : "org\/apache\/spark\/network\/protocol\/MessageEncoder.html#handlerAdded(x$1:io.netty.channel.ChannelHandlerContext):Unit", "kind" : "def"}, {"label" : "isSharable", "tail" : "(): Boolean", "member" : "io.netty.channel.ChannelHandlerAdapter.isSharable", "link" : "org\/apache\/spark\/network\/protocol\/MessageEncoder.html#isSharable():Boolean", "kind" : "def"}, {"label" : "ensureNotSharable", "tail" : "(): Unit", "member" : "io.netty.channel.ChannelHandlerAdapter.ensureNotSharable", "link" : "org\/apache\/spark\/network\/protocol\/MessageEncoder.html#ensureNotSharable():Unit", "kind" : "def"}, {"label" : "synchronized", "tail" : "(arg0: â‡’ T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "org\/apache\/spark\/network\/protocol\/MessageEncoder.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "org\/apache\/spark\/network\/protocol\/MessageEncoder.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "org\/apache\/spark\/network\/protocol\/MessageEncoder.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "org\/apache\/spark\/network\/protocol\/MessageEncoder.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "org\/apache\/spark\/network\/protocol\/MessageEncoder.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "org\/apache\/spark\/network\/protocol\/MessageEncoder.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "org\/apache\/spark\/network\/protocol\/MessageEncoder.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "org\/apache\/spark\/network\/protocol\/MessageEncoder.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "org\/apache\/spark\/network\/protocol\/MessageEncoder.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "org\/apache\/spark\/network\/protocol\/MessageEncoder.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "org\/apache\/spark\/network\/protocol\/MessageEncoder.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "org\/apache\/spark\/network\/protocol\/MessageEncoder.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "org\/apache\/spark\/network\/protocol\/MessageEncoder.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "org\/apache\/spark\/network\/protocol\/MessageEncoder.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.equals", "link" : "org\/apache\/spark\/network\/protocol\/MessageEncoder.html#equals(x$1:Any):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "org\/apache\/spark\/network\/protocol\/MessageEncoder.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_]", "member" : "scala.AnyRef.getClass", "link" : "org\/apache\/spark\/network\/protocol\/MessageEncoder.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "org\/apache\/spark\/network\/protocol\/MessageEncoder.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "org\/apache\/spark\/network\/protocol\/MessageEncoder.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "class" : "org\/apache\/spark\/network\/protocol\/MessageEncoder.html", "kind" : "class"}, {"name" : "org.apache.spark.network.protocol.OneWayMessage", "shortDescription" : "A RPC that does not expect a reply, which is handled by a remoteorg.apache.spark.network.server.RpcHandler.", "members_class" : [{"label" : "toString", "tail" : "(): String", "member" : "org.apache.spark.network.protocol.OneWayMessage.toString", "link" : "org\/apache\/spark\/network\/protocol\/OneWayMessage.html#toString():String", "kind" : "def"}, {"label" : "equals", "tail" : "(other: Any): Boolean", "member" : "org.apache.spark.network.protocol.OneWayMessage.equals", "link" : "org\/apache\/spark\/network\/protocol\/OneWayMessage.html#equals(other:Any):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "org.apache.spark.network.protocol.OneWayMessage.hashCode", "link" : "org\/apache\/spark\/network\/protocol\/OneWayMessage.html#hashCode():Int", "kind" : "def"}, {"label" : "encode", "tail" : "(buf: ByteBuf): Unit", "member" : "org.apache.spark.network.protocol.OneWayMessage.encode", "link" : "org\/apache\/spark\/network\/protocol\/OneWayMessage.html#encode(buf:io.netty.buffer.ByteBuf):Unit", "kind" : "def"}, {"label" : "encodedLength", "tail" : "(): Int", "member" : "org.apache.spark.network.protocol.OneWayMessage.encodedLength", "link" : "org\/apache\/spark\/network\/protocol\/OneWayMessage.html#encodedLength():Int", "kind" : "def"}, {"label" : "type", "tail" : "(): Type", "member" : "org.apache.spark.network.protocol.OneWayMessage.type", "link" : "org\/apache\/spark\/network\/protocol\/OneWayMessage.html#type():org.apache.spark.network.protocol.Message.Type", "kind" : "def"}, {"member" : "org.apache.spark.network.protocol.OneWayMessage#<init>", "error" : "unsupported entity"}, {"label" : "equals", "tail" : "(other: AbstractMessage): Boolean", "member" : "org.apache.spark.network.protocol.AbstractMessage.equals", "link" : "org\/apache\/spark\/network\/protocol\/OneWayMessage.html#equals(other:org.apache.spark.network.protocol.AbstractMessage):Boolean", "kind" : "def"}, {"label" : "isBodyInFrame", "tail" : "(): Boolean", "member" : "org.apache.spark.network.protocol.AbstractMessage.isBodyInFrame", "link" : "org\/apache\/spark\/network\/protocol\/OneWayMessage.html#isBodyInFrame():Boolean", "kind" : "def"}, {"label" : "body", "tail" : "(): ManagedBuffer", "member" : "org.apache.spark.network.protocol.AbstractMessage.body", "link" : "org\/apache\/spark\/network\/protocol\/OneWayMessage.html#body():org.apache.spark.network.buffer.ManagedBuffer", "kind" : "def"}, {"label" : "synchronized", "tail" : "(arg0: â‡’ T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "org\/apache\/spark\/network\/protocol\/OneWayMessage.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "org\/apache\/spark\/network\/protocol\/OneWayMessage.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "org\/apache\/spark\/network\/protocol\/OneWayMessage.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "org\/apache\/spark\/network\/protocol\/OneWayMessage.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "org\/apache\/spark\/network\/protocol\/OneWayMessage.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "org\/apache\/spark\/network\/protocol\/OneWayMessage.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "org\/apache\/spark\/network\/protocol\/OneWayMessage.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "org\/apache\/spark\/network\/protocol\/OneWayMessage.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "org\/apache\/spark\/network\/protocol\/OneWayMessage.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "org\/apache\/spark\/network\/protocol\/OneWayMessage.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "org\/apache\/spark\/network\/protocol\/OneWayMessage.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "org\/apache\/spark\/network\/protocol\/OneWayMessage.html#notify():Unit", "kind" : "final def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "org\/apache\/spark\/network\/protocol\/OneWayMessage.html#clone():Object", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_]", "member" : "scala.AnyRef.getClass", "link" : "org\/apache\/spark\/network\/protocol\/OneWayMessage.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "org\/apache\/spark\/network\/protocol\/OneWayMessage.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "org\/apache\/spark\/network\/protocol\/OneWayMessage.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "class" : "org\/apache\/spark\/network\/protocol\/OneWayMessage.html", "kind" : "class"}, {"name" : "org.apache.spark.network.protocol.RequestMessage", "members_trait" : [{"member" : "org.apache.spark.network.protocol.RequestMessage#<init>", "error" : "unsupported entity"}, {"label" : "synchronized", "tail" : "(arg0: â‡’ T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "org\/apache\/spark\/network\/protocol\/RequestMessage.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "org\/apache\/spark\/network\/protocol\/RequestMessage.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "org\/apache\/spark\/network\/protocol\/RequestMessage.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "org\/apache\/spark\/network\/protocol\/RequestMessage.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "org\/apache\/spark\/network\/protocol\/RequestMessage.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "org\/apache\/spark\/network\/protocol\/RequestMessage.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "org\/apache\/spark\/network\/protocol\/RequestMessage.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "org\/apache\/spark\/network\/protocol\/RequestMessage.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "org\/apache\/spark\/network\/protocol\/RequestMessage.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "org\/apache\/spark\/network\/protocol\/RequestMessage.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "org\/apache\/spark\/network\/protocol\/RequestMessage.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "org\/apache\/spark\/network\/protocol\/RequestMessage.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "org\/apache\/spark\/network\/protocol\/RequestMessage.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "org\/apache\/spark\/network\/protocol\/RequestMessage.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.equals", "link" : "org\/apache\/spark\/network\/protocol\/RequestMessage.html#equals(x$1:Any):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "org\/apache\/spark\/network\/protocol\/RequestMessage.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_]", "member" : "scala.AnyRef.getClass", "link" : "org\/apache\/spark\/network\/protocol\/RequestMessage.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "org\/apache\/spark\/network\/protocol\/RequestMessage.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "org\/apache\/spark\/network\/protocol\/RequestMessage.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}, {"label" : "isBodyInFrame", "tail" : "(): Boolean", "member" : "org.apache.spark.network.protocol.Message.isBodyInFrame", "link" : "org\/apache\/spark\/network\/protocol\/RequestMessage.html#isBodyInFrame():Boolean", "kind" : "abstract def"}, {"label" : "body", "tail" : "(): ManagedBuffer", "member" : "org.apache.spark.network.protocol.Message.body", "link" : "org\/apache\/spark\/network\/protocol\/RequestMessage.html#body():org.apache.spark.network.buffer.ManagedBuffer", "kind" : "abstract def"}, {"label" : "type", "tail" : "(): Type", "member" : "org.apache.spark.network.protocol.Message.type", "link" : "org\/apache\/spark\/network\/protocol\/RequestMessage.html#type():org.apache.spark.network.protocol.Message.Type", "kind" : "abstract def"}, {"label" : "encode", "tail" : "(buf: ByteBuf): Unit", "member" : "org.apache.spark.network.protocol.Encodable.encode", "link" : "org\/apache\/spark\/network\/protocol\/RequestMessage.html#encode(buf:io.netty.buffer.ByteBuf):Unit", "kind" : "abstract def"}, {"label" : "encodedLength", "tail" : "(): Int", "member" : "org.apache.spark.network.protocol.Encodable.encodedLength", "link" : "org\/apache\/spark\/network\/protocol\/RequestMessage.html#encodedLength():Int", "kind" : "abstract def"}], "shortDescription" : "Messages from the client to the server.", "trait" : "org\/apache\/spark\/network\/protocol\/RequestMessage.html", "kind" : "trait"}, {"name" : "org.apache.spark.network.protocol.ResponseMessage", "members_trait" : [{"member" : "org.apache.spark.network.protocol.ResponseMessage#<init>", "error" : "unsupported entity"}, {"label" : "synchronized", "tail" : "(arg0: â‡’ T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "org\/apache\/spark\/network\/protocol\/ResponseMessage.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "org\/apache\/spark\/network\/protocol\/ResponseMessage.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "org\/apache\/spark\/network\/protocol\/ResponseMessage.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "org\/apache\/spark\/network\/protocol\/ResponseMessage.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "org\/apache\/spark\/network\/protocol\/ResponseMessage.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "org\/apache\/spark\/network\/protocol\/ResponseMessage.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "org\/apache\/spark\/network\/protocol\/ResponseMessage.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "org\/apache\/spark\/network\/protocol\/ResponseMessage.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "org\/apache\/spark\/network\/protocol\/ResponseMessage.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "org\/apache\/spark\/network\/protocol\/ResponseMessage.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "org\/apache\/spark\/network\/protocol\/ResponseMessage.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "org\/apache\/spark\/network\/protocol\/ResponseMessage.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "org\/apache\/spark\/network\/protocol\/ResponseMessage.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "org\/apache\/spark\/network\/protocol\/ResponseMessage.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.equals", "link" : "org\/apache\/spark\/network\/protocol\/ResponseMessage.html#equals(x$1:Any):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "org\/apache\/spark\/network\/protocol\/ResponseMessage.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_]", "member" : "scala.AnyRef.getClass", "link" : "org\/apache\/spark\/network\/protocol\/ResponseMessage.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "org\/apache\/spark\/network\/protocol\/ResponseMessage.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "org\/apache\/spark\/network\/protocol\/ResponseMessage.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}, {"label" : "isBodyInFrame", "tail" : "(): Boolean", "member" : "org.apache.spark.network.protocol.Message.isBodyInFrame", "link" : "org\/apache\/spark\/network\/protocol\/ResponseMessage.html#isBodyInFrame():Boolean", "kind" : "abstract def"}, {"label" : "body", "tail" : "(): ManagedBuffer", "member" : "org.apache.spark.network.protocol.Message.body", "link" : "org\/apache\/spark\/network\/protocol\/ResponseMessage.html#body():org.apache.spark.network.buffer.ManagedBuffer", "kind" : "abstract def"}, {"label" : "type", "tail" : "(): Type", "member" : "org.apache.spark.network.protocol.Message.type", "link" : "org\/apache\/spark\/network\/protocol\/ResponseMessage.html#type():org.apache.spark.network.protocol.Message.Type", "kind" : "abstract def"}, {"label" : "encode", "tail" : "(buf: ByteBuf): Unit", "member" : "org.apache.spark.network.protocol.Encodable.encode", "link" : "org\/apache\/spark\/network\/protocol\/ResponseMessage.html#encode(buf:io.netty.buffer.ByteBuf):Unit", "kind" : "abstract def"}, {"label" : "encodedLength", "tail" : "(): Int", "member" : "org.apache.spark.network.protocol.Encodable.encodedLength", "link" : "org\/apache\/spark\/network\/protocol\/ResponseMessage.html#encodedLength():Int", "kind" : "abstract def"}], "shortDescription" : "Messages from the server to the client.", "trait" : "org\/apache\/spark\/network\/protocol\/ResponseMessage.html", "kind" : "trait"}, {"name" : "org.apache.spark.network.protocol.RpcFailure", "shortDescription" : "Response to RpcRequest for a failed RPC.", "members_class" : [{"label" : "toString", "tail" : "(): String", "member" : "org.apache.spark.network.protocol.RpcFailure.toString", "link" : "org\/apache\/spark\/network\/protocol\/RpcFailure.html#toString():String", "kind" : "def"}, {"label" : "equals", "tail" : "(other: Any): Boolean", "member" : "org.apache.spark.network.protocol.RpcFailure.equals", "link" : "org\/apache\/spark\/network\/protocol\/RpcFailure.html#equals(other:Any):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "org.apache.spark.network.protocol.RpcFailure.hashCode", "link" : "org\/apache\/spark\/network\/protocol\/RpcFailure.html#hashCode():Int", "kind" : "def"}, {"label" : "encode", "tail" : "(buf: ByteBuf): Unit", "member" : "org.apache.spark.network.protocol.RpcFailure.encode", "link" : "org\/apache\/spark\/network\/protocol\/RpcFailure.html#encode(buf:io.netty.buffer.ByteBuf):Unit", "kind" : "def"}, {"label" : "encodedLength", "tail" : "(): Int", "member" : "org.apache.spark.network.protocol.RpcFailure.encodedLength", "link" : "org\/apache\/spark\/network\/protocol\/RpcFailure.html#encodedLength():Int", "kind" : "def"}, {"label" : "type", "tail" : "(): Type", "member" : "org.apache.spark.network.protocol.RpcFailure.type", "link" : "org\/apache\/spark\/network\/protocol\/RpcFailure.html#type():org.apache.spark.network.protocol.Message.Type", "kind" : "def"}, {"member" : "org.apache.spark.network.protocol.RpcFailure#<init>", "error" : "unsupported entity"}, {"label" : "equals", "tail" : "(other: AbstractMessage): Boolean", "member" : "org.apache.spark.network.protocol.AbstractMessage.equals", "link" : "org\/apache\/spark\/network\/protocol\/RpcFailure.html#equals(other:org.apache.spark.network.protocol.AbstractMessage):Boolean", "kind" : "def"}, {"label" : "isBodyInFrame", "tail" : "(): Boolean", "member" : "org.apache.spark.network.protocol.AbstractMessage.isBodyInFrame", "link" : "org\/apache\/spark\/network\/protocol\/RpcFailure.html#isBodyInFrame():Boolean", "kind" : "def"}, {"label" : "body", "tail" : "(): ManagedBuffer", "member" : "org.apache.spark.network.protocol.AbstractMessage.body", "link" : "org\/apache\/spark\/network\/protocol\/RpcFailure.html#body():org.apache.spark.network.buffer.ManagedBuffer", "kind" : "def"}, {"label" : "synchronized", "tail" : "(arg0: â‡’ T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "org\/apache\/spark\/network\/protocol\/RpcFailure.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "org\/apache\/spark\/network\/protocol\/RpcFailure.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "org\/apache\/spark\/network\/protocol\/RpcFailure.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "org\/apache\/spark\/network\/protocol\/RpcFailure.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "org\/apache\/spark\/network\/protocol\/RpcFailure.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "org\/apache\/spark\/network\/protocol\/RpcFailure.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "org\/apache\/spark\/network\/protocol\/RpcFailure.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "org\/apache\/spark\/network\/protocol\/RpcFailure.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "org\/apache\/spark\/network\/protocol\/RpcFailure.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "org\/apache\/spark\/network\/protocol\/RpcFailure.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "org\/apache\/spark\/network\/protocol\/RpcFailure.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "org\/apache\/spark\/network\/protocol\/RpcFailure.html#notify():Unit", "kind" : "final def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "org\/apache\/spark\/network\/protocol\/RpcFailure.html#clone():Object", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_]", "member" : "scala.AnyRef.getClass", "link" : "org\/apache\/spark\/network\/protocol\/RpcFailure.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "org\/apache\/spark\/network\/protocol\/RpcFailure.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "org\/apache\/spark\/network\/protocol\/RpcFailure.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "class" : "org\/apache\/spark\/network\/protocol\/RpcFailure.html", "kind" : "class"}, {"name" : "org.apache.spark.network.protocol.RpcRequest", "shortDescription" : "A generic RPC which is handled by a remote org.apache.spark.network.server.RpcHandler.", "members_class" : [{"label" : "toString", "tail" : "(): String", "member" : "org.apache.spark.network.protocol.RpcRequest.toString", "link" : "org\/apache\/spark\/network\/protocol\/RpcRequest.html#toString():String", "kind" : "def"}, {"label" : "equals", "tail" : "(other: Any): Boolean", "member" : "org.apache.spark.network.protocol.RpcRequest.equals", "link" : "org\/apache\/spark\/network\/protocol\/RpcRequest.html#equals(other:Any):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "org.apache.spark.network.protocol.RpcRequest.hashCode", "link" : "org\/apache\/spark\/network\/protocol\/RpcRequest.html#hashCode():Int", "kind" : "def"}, {"label" : "encode", "tail" : "(buf: ByteBuf): Unit", "member" : "org.apache.spark.network.protocol.RpcRequest.encode", "link" : "org\/apache\/spark\/network\/protocol\/RpcRequest.html#encode(buf:io.netty.buffer.ByteBuf):Unit", "kind" : "def"}, {"label" : "encodedLength", "tail" : "(): Int", "member" : "org.apache.spark.network.protocol.RpcRequest.encodedLength", "link" : "org\/apache\/spark\/network\/protocol\/RpcRequest.html#encodedLength():Int", "kind" : "def"}, {"label" : "type", "tail" : "(): Type", "member" : "org.apache.spark.network.protocol.RpcRequest.type", "link" : "org\/apache\/spark\/network\/protocol\/RpcRequest.html#type():org.apache.spark.network.protocol.Message.Type", "kind" : "def"}, {"member" : "org.apache.spark.network.protocol.RpcRequest#<init>", "error" : "unsupported entity"}, {"label" : "equals", "tail" : "(other: AbstractMessage): Boolean", "member" : "org.apache.spark.network.protocol.AbstractMessage.equals", "link" : "org\/apache\/spark\/network\/protocol\/RpcRequest.html#equals(other:org.apache.spark.network.protocol.AbstractMessage):Boolean", "kind" : "def"}, {"label" : "isBodyInFrame", "tail" : "(): Boolean", "member" : "org.apache.spark.network.protocol.AbstractMessage.isBodyInFrame", "link" : "org\/apache\/spark\/network\/protocol\/RpcRequest.html#isBodyInFrame():Boolean", "kind" : "def"}, {"label" : "body", "tail" : "(): ManagedBuffer", "member" : "org.apache.spark.network.protocol.AbstractMessage.body", "link" : "org\/apache\/spark\/network\/protocol\/RpcRequest.html#body():org.apache.spark.network.buffer.ManagedBuffer", "kind" : "def"}, {"label" : "synchronized", "tail" : "(arg0: â‡’ T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "org\/apache\/spark\/network\/protocol\/RpcRequest.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "org\/apache\/spark\/network\/protocol\/RpcRequest.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "org\/apache\/spark\/network\/protocol\/RpcRequest.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "org\/apache\/spark\/network\/protocol\/RpcRequest.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "org\/apache\/spark\/network\/protocol\/RpcRequest.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "org\/apache\/spark\/network\/protocol\/RpcRequest.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "org\/apache\/spark\/network\/protocol\/RpcRequest.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "org\/apache\/spark\/network\/protocol\/RpcRequest.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "org\/apache\/spark\/network\/protocol\/RpcRequest.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "org\/apache\/spark\/network\/protocol\/RpcRequest.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "org\/apache\/spark\/network\/protocol\/RpcRequest.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "org\/apache\/spark\/network\/protocol\/RpcRequest.html#notify():Unit", "kind" : "final def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "org\/apache\/spark\/network\/protocol\/RpcRequest.html#clone():Object", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_]", "member" : "scala.AnyRef.getClass", "link" : "org\/apache\/spark\/network\/protocol\/RpcRequest.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "org\/apache\/spark\/network\/protocol\/RpcRequest.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "org\/apache\/spark\/network\/protocol\/RpcRequest.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "class" : "org\/apache\/spark\/network\/protocol\/RpcRequest.html", "kind" : "class"}, {"name" : "org.apache.spark.network.protocol.RpcResponse", "shortDescription" : "Response to RpcRequest for a successful RPC.", "members_class" : [{"label" : "toString", "tail" : "(): String", "member" : "org.apache.spark.network.protocol.RpcResponse.toString", "link" : "org\/apache\/spark\/network\/protocol\/RpcResponse.html#toString():String", "kind" : "def"}, {"label" : "equals", "tail" : "(other: Any): Boolean", "member" : "org.apache.spark.network.protocol.RpcResponse.equals", "link" : "org\/apache\/spark\/network\/protocol\/RpcResponse.html#equals(other:Any):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "org.apache.spark.network.protocol.RpcResponse.hashCode", "link" : "org\/apache\/spark\/network\/protocol\/RpcResponse.html#hashCode():Int", "kind" : "def"}, {"label" : "createFailureResponse", "tail" : "(error: String): ResponseMessage", "member" : "org.apache.spark.network.protocol.RpcResponse.createFailureResponse", "link" : "org\/apache\/spark\/network\/protocol\/RpcResponse.html#createFailureResponse(error:String):org.apache.spark.network.protocol.ResponseMessage", "kind" : "def"}, {"label" : "encode", "tail" : "(buf: ByteBuf): Unit", "member" : "org.apache.spark.network.protocol.RpcResponse.encode", "link" : "org\/apache\/spark\/network\/protocol\/RpcResponse.html#encode(buf:io.netty.buffer.ByteBuf):Unit", "kind" : "def"}, {"label" : "encodedLength", "tail" : "(): Int", "member" : "org.apache.spark.network.protocol.RpcResponse.encodedLength", "link" : "org\/apache\/spark\/network\/protocol\/RpcResponse.html#encodedLength():Int", "kind" : "def"}, {"label" : "type", "tail" : "(): Type", "member" : "org.apache.spark.network.protocol.RpcResponse.type", "link" : "org\/apache\/spark\/network\/protocol\/RpcResponse.html#type():org.apache.spark.network.protocol.Message.Type", "kind" : "def"}, {"member" : "org.apache.spark.network.protocol.RpcResponse#<init>", "error" : "unsupported entity"}, {"label" : "equals", "tail" : "(other: AbstractMessage): Boolean", "member" : "org.apache.spark.network.protocol.AbstractMessage.equals", "link" : "org\/apache\/spark\/network\/protocol\/RpcResponse.html#equals(other:org.apache.spark.network.protocol.AbstractMessage):Boolean", "kind" : "def"}, {"label" : "isBodyInFrame", "tail" : "(): Boolean", "member" : "org.apache.spark.network.protocol.AbstractMessage.isBodyInFrame", "link" : "org\/apache\/spark\/network\/protocol\/RpcResponse.html#isBodyInFrame():Boolean", "kind" : "def"}, {"label" : "body", "tail" : "(): ManagedBuffer", "member" : "org.apache.spark.network.protocol.AbstractMessage.body", "link" : "org\/apache\/spark\/network\/protocol\/RpcResponse.html#body():org.apache.spark.network.buffer.ManagedBuffer", "kind" : "def"}, {"label" : "synchronized", "tail" : "(arg0: â‡’ T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "org\/apache\/spark\/network\/protocol\/RpcResponse.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "org\/apache\/spark\/network\/protocol\/RpcResponse.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "org\/apache\/spark\/network\/protocol\/RpcResponse.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "org\/apache\/spark\/network\/protocol\/RpcResponse.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "org\/apache\/spark\/network\/protocol\/RpcResponse.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "org\/apache\/spark\/network\/protocol\/RpcResponse.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "org\/apache\/spark\/network\/protocol\/RpcResponse.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "org\/apache\/spark\/network\/protocol\/RpcResponse.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "org\/apache\/spark\/network\/protocol\/RpcResponse.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "org\/apache\/spark\/network\/protocol\/RpcResponse.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "org\/apache\/spark\/network\/protocol\/RpcResponse.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "org\/apache\/spark\/network\/protocol\/RpcResponse.html#notify():Unit", "kind" : "final def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "org\/apache\/spark\/network\/protocol\/RpcResponse.html#clone():Object", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_]", "member" : "scala.AnyRef.getClass", "link" : "org\/apache\/spark\/network\/protocol\/RpcResponse.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "org\/apache\/spark\/network\/protocol\/RpcResponse.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "org\/apache\/spark\/network\/protocol\/RpcResponse.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "class" : "org\/apache\/spark\/network\/protocol\/RpcResponse.html", "kind" : "class"}, {"name" : "org.apache.spark.network.protocol.StreamChunkId", "shortDescription" : "Encapsulates a request for a particular chunk of a stream.", "members_class" : [{"label" : "toString", "tail" : "(): String", "member" : "org.apache.spark.network.protocol.StreamChunkId.toString", "link" : "org\/apache\/spark\/network\/protocol\/StreamChunkId.html#toString():String", "kind" : "def"}, {"label" : "equals", "tail" : "(other: Any): Boolean", "member" : "org.apache.spark.network.protocol.StreamChunkId.equals", "link" : "org\/apache\/spark\/network\/protocol\/StreamChunkId.html#equals(other:Any):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "org.apache.spark.network.protocol.StreamChunkId.hashCode", "link" : "org\/apache\/spark\/network\/protocol\/StreamChunkId.html#hashCode():Int", "kind" : "def"}, {"label" : "encode", "tail" : "(buffer: ByteBuf): Unit", "member" : "org.apache.spark.network.protocol.StreamChunkId.encode", "link" : "org\/apache\/spark\/network\/protocol\/StreamChunkId.html#encode(buffer:io.netty.buffer.ByteBuf):Unit", "kind" : "def"}, {"label" : "encodedLength", "tail" : "(): Int", "member" : "org.apache.spark.network.protocol.StreamChunkId.encodedLength", "link" : "org\/apache\/spark\/network\/protocol\/StreamChunkId.html#encodedLength():Int", "kind" : "def"}, {"member" : "org.apache.spark.network.protocol.StreamChunkId#<init>", "error" : "unsupported entity"}, {"label" : "synchronized", "tail" : "(arg0: â‡’ T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "org\/apache\/spark\/network\/protocol\/StreamChunkId.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "org\/apache\/spark\/network\/protocol\/StreamChunkId.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "org\/apache\/spark\/network\/protocol\/StreamChunkId.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "org\/apache\/spark\/network\/protocol\/StreamChunkId.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "org\/apache\/spark\/network\/protocol\/StreamChunkId.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "org\/apache\/spark\/network\/protocol\/StreamChunkId.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "org\/apache\/spark\/network\/protocol\/StreamChunkId.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "org\/apache\/spark\/network\/protocol\/StreamChunkId.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "org\/apache\/spark\/network\/protocol\/StreamChunkId.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "org\/apache\/spark\/network\/protocol\/StreamChunkId.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "org\/apache\/spark\/network\/protocol\/StreamChunkId.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "org\/apache\/spark\/network\/protocol\/StreamChunkId.html#notify():Unit", "kind" : "final def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "org\/apache\/spark\/network\/protocol\/StreamChunkId.html#clone():Object", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_]", "member" : "scala.AnyRef.getClass", "link" : "org\/apache\/spark\/network\/protocol\/StreamChunkId.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "org\/apache\/spark\/network\/protocol\/StreamChunkId.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "org\/apache\/spark\/network\/protocol\/StreamChunkId.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "class" : "org\/apache\/spark\/network\/protocol\/StreamChunkId.html", "kind" : "class"}, {"name" : "org.apache.spark.network.protocol.StreamFailure", "shortDescription" : "Message indicating an error when transferring a stream.", "members_class" : [{"label" : "toString", "tail" : "(): String", "member" : "org.apache.spark.network.protocol.StreamFailure.toString", "link" : "org\/apache\/spark\/network\/protocol\/StreamFailure.html#toString():String", "kind" : "def"}, {"label" : "equals", "tail" : "(other: Any): Boolean", "member" : "org.apache.spark.network.protocol.StreamFailure.equals", "link" : "org\/apache\/spark\/network\/protocol\/StreamFailure.html#equals(other:Any):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "org.apache.spark.network.protocol.StreamFailure.hashCode", "link" : "org\/apache\/spark\/network\/protocol\/StreamFailure.html#hashCode():Int", "kind" : "def"}, {"label" : "encode", "tail" : "(buf: ByteBuf): Unit", "member" : "org.apache.spark.network.protocol.StreamFailure.encode", "link" : "org\/apache\/spark\/network\/protocol\/StreamFailure.html#encode(buf:io.netty.buffer.ByteBuf):Unit", "kind" : "def"}, {"label" : "encodedLength", "tail" : "(): Int", "member" : "org.apache.spark.network.protocol.StreamFailure.encodedLength", "link" : "org\/apache\/spark\/network\/protocol\/StreamFailure.html#encodedLength():Int", "kind" : "def"}, {"label" : "type", "tail" : "(): Type", "member" : "org.apache.spark.network.protocol.StreamFailure.type", "link" : "org\/apache\/spark\/network\/protocol\/StreamFailure.html#type():org.apache.spark.network.protocol.Message.Type", "kind" : "def"}, {"member" : "org.apache.spark.network.protocol.StreamFailure#<init>", "error" : "unsupported entity"}, {"label" : "equals", "tail" : "(other: AbstractMessage): Boolean", "member" : "org.apache.spark.network.protocol.AbstractMessage.equals", "link" : "org\/apache\/spark\/network\/protocol\/StreamFailure.html#equals(other:org.apache.spark.network.protocol.AbstractMessage):Boolean", "kind" : "def"}, {"label" : "isBodyInFrame", "tail" : "(): Boolean", "member" : "org.apache.spark.network.protocol.AbstractMessage.isBodyInFrame", "link" : "org\/apache\/spark\/network\/protocol\/StreamFailure.html#isBodyInFrame():Boolean", "kind" : "def"}, {"label" : "body", "tail" : "(): ManagedBuffer", "member" : "org.apache.spark.network.protocol.AbstractMessage.body", "link" : "org\/apache\/spark\/network\/protocol\/StreamFailure.html#body():org.apache.spark.network.buffer.ManagedBuffer", "kind" : "def"}, {"label" : "synchronized", "tail" : "(arg0: â‡’ T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "org\/apache\/spark\/network\/protocol\/StreamFailure.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "org\/apache\/spark\/network\/protocol\/StreamFailure.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "org\/apache\/spark\/network\/protocol\/StreamFailure.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "org\/apache\/spark\/network\/protocol\/StreamFailure.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "org\/apache\/spark\/network\/protocol\/StreamFailure.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "org\/apache\/spark\/network\/protocol\/StreamFailure.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "org\/apache\/spark\/network\/protocol\/StreamFailure.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "org\/apache\/spark\/network\/protocol\/StreamFailure.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "org\/apache\/spark\/network\/protocol\/StreamFailure.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "org\/apache\/spark\/network\/protocol\/StreamFailure.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "org\/apache\/spark\/network\/protocol\/StreamFailure.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "org\/apache\/spark\/network\/protocol\/StreamFailure.html#notify():Unit", "kind" : "final def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "org\/apache\/spark\/network\/protocol\/StreamFailure.html#clone():Object", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_]", "member" : "scala.AnyRef.getClass", "link" : "org\/apache\/spark\/network\/protocol\/StreamFailure.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "org\/apache\/spark\/network\/protocol\/StreamFailure.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "org\/apache\/spark\/network\/protocol\/StreamFailure.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "class" : "org\/apache\/spark\/network\/protocol\/StreamFailure.html", "kind" : "class"}, {"name" : "org.apache.spark.network.protocol.StreamRequest", "shortDescription" : "Request to stream data from the remote end.", "members_class" : [{"label" : "toString", "tail" : "(): String", "member" : "org.apache.spark.network.protocol.StreamRequest.toString", "link" : "org\/apache\/spark\/network\/protocol\/StreamRequest.html#toString():String", "kind" : "def"}, {"label" : "equals", "tail" : "(other: Any): Boolean", "member" : "org.apache.spark.network.protocol.StreamRequest.equals", "link" : "org\/apache\/spark\/network\/protocol\/StreamRequest.html#equals(other:Any):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "org.apache.spark.network.protocol.StreamRequest.hashCode", "link" : "org\/apache\/spark\/network\/protocol\/StreamRequest.html#hashCode():Int", "kind" : "def"}, {"label" : "encode", "tail" : "(buf: ByteBuf): Unit", "member" : "org.apache.spark.network.protocol.StreamRequest.encode", "link" : "org\/apache\/spark\/network\/protocol\/StreamRequest.html#encode(buf:io.netty.buffer.ByteBuf):Unit", "kind" : "def"}, {"label" : "encodedLength", "tail" : "(): Int", "member" : "org.apache.spark.network.protocol.StreamRequest.encodedLength", "link" : "org\/apache\/spark\/network\/protocol\/StreamRequest.html#encodedLength():Int", "kind" : "def"}, {"label" : "type", "tail" : "(): Type", "member" : "org.apache.spark.network.protocol.StreamRequest.type", "link" : "org\/apache\/spark\/network\/protocol\/StreamRequest.html#type():org.apache.spark.network.protocol.Message.Type", "kind" : "def"}, {"member" : "org.apache.spark.network.protocol.StreamRequest#<init>", "error" : "unsupported entity"}, {"label" : "equals", "tail" : "(other: AbstractMessage): Boolean", "member" : "org.apache.spark.network.protocol.AbstractMessage.equals", "link" : "org\/apache\/spark\/network\/protocol\/StreamRequest.html#equals(other:org.apache.spark.network.protocol.AbstractMessage):Boolean", "kind" : "def"}, {"label" : "isBodyInFrame", "tail" : "(): Boolean", "member" : "org.apache.spark.network.protocol.AbstractMessage.isBodyInFrame", "link" : "org\/apache\/spark\/network\/protocol\/StreamRequest.html#isBodyInFrame():Boolean", "kind" : "def"}, {"label" : "body", "tail" : "(): ManagedBuffer", "member" : "org.apache.spark.network.protocol.AbstractMessage.body", "link" : "org\/apache\/spark\/network\/protocol\/StreamRequest.html#body():org.apache.spark.network.buffer.ManagedBuffer", "kind" : "def"}, {"label" : "synchronized", "tail" : "(arg0: â‡’ T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "org\/apache\/spark\/network\/protocol\/StreamRequest.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "org\/apache\/spark\/network\/protocol\/StreamRequest.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "org\/apache\/spark\/network\/protocol\/StreamRequest.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "org\/apache\/spark\/network\/protocol\/StreamRequest.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "org\/apache\/spark\/network\/protocol\/StreamRequest.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "org\/apache\/spark\/network\/protocol\/StreamRequest.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "org\/apache\/spark\/network\/protocol\/StreamRequest.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "org\/apache\/spark\/network\/protocol\/StreamRequest.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "org\/apache\/spark\/network\/protocol\/StreamRequest.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "org\/apache\/spark\/network\/protocol\/StreamRequest.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "org\/apache\/spark\/network\/protocol\/StreamRequest.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "org\/apache\/spark\/network\/protocol\/StreamRequest.html#notify():Unit", "kind" : "final def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "org\/apache\/spark\/network\/protocol\/StreamRequest.html#clone():Object", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_]", "member" : "scala.AnyRef.getClass", "link" : "org\/apache\/spark\/network\/protocol\/StreamRequest.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "org\/apache\/spark\/network\/protocol\/StreamRequest.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "org\/apache\/spark\/network\/protocol\/StreamRequest.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "class" : "org\/apache\/spark\/network\/protocol\/StreamRequest.html", "kind" : "class"}, {"name" : "org.apache.spark.network.protocol.StreamResponse", "shortDescription" : "Response to StreamRequest when the stream has been successfully opened.", "members_class" : [{"label" : "toString", "tail" : "(): String", "member" : "org.apache.spark.network.protocol.StreamResponse.toString", "link" : "org\/apache\/spark\/network\/protocol\/StreamResponse.html#toString():String", "kind" : "def"}, {"label" : "equals", "tail" : "(other: Any): Boolean", "member" : "org.apache.spark.network.protocol.StreamResponse.equals", "link" : "org\/apache\/spark\/network\/protocol\/StreamResponse.html#equals(other:Any):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "org.apache.spark.network.protocol.StreamResponse.hashCode", "link" : "org\/apache\/spark\/network\/protocol\/StreamResponse.html#hashCode():Int", "kind" : "def"}, {"label" : "createFailureResponse", "tail" : "(error: String): ResponseMessage", "member" : "org.apache.spark.network.protocol.StreamResponse.createFailureResponse", "link" : "org\/apache\/spark\/network\/protocol\/StreamResponse.html#createFailureResponse(error:String):org.apache.spark.network.protocol.ResponseMessage", "kind" : "def"}, {"label" : "encode", "tail" : "(buf: ByteBuf): Unit", "member" : "org.apache.spark.network.protocol.StreamResponse.encode", "link" : "org\/apache\/spark\/network\/protocol\/StreamResponse.html#encode(buf:io.netty.buffer.ByteBuf):Unit", "kind" : "def"}, {"label" : "encodedLength", "tail" : "(): Int", "member" : "org.apache.spark.network.protocol.StreamResponse.encodedLength", "link" : "org\/apache\/spark\/network\/protocol\/StreamResponse.html#encodedLength():Int", "kind" : "def"}, {"label" : "type", "tail" : "(): Type", "member" : "org.apache.spark.network.protocol.StreamResponse.type", "link" : "org\/apache\/spark\/network\/protocol\/StreamResponse.html#type():org.apache.spark.network.protocol.Message.Type", "kind" : "def"}, {"member" : "org.apache.spark.network.protocol.StreamResponse#<init>", "error" : "unsupported entity"}, {"label" : "equals", "tail" : "(other: AbstractMessage): Boolean", "member" : "org.apache.spark.network.protocol.AbstractMessage.equals", "link" : "org\/apache\/spark\/network\/protocol\/StreamResponse.html#equals(other:org.apache.spark.network.protocol.AbstractMessage):Boolean", "kind" : "def"}, {"label" : "isBodyInFrame", "tail" : "(): Boolean", "member" : "org.apache.spark.network.protocol.AbstractMessage.isBodyInFrame", "link" : "org\/apache\/spark\/network\/protocol\/StreamResponse.html#isBodyInFrame():Boolean", "kind" : "def"}, {"label" : "body", "tail" : "(): ManagedBuffer", "member" : "org.apache.spark.network.protocol.AbstractMessage.body", "link" : "org\/apache\/spark\/network\/protocol\/StreamResponse.html#body():org.apache.spark.network.buffer.ManagedBuffer", "kind" : "def"}, {"label" : "synchronized", "tail" : "(arg0: â‡’ T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "org\/apache\/spark\/network\/protocol\/StreamResponse.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "org\/apache\/spark\/network\/protocol\/StreamResponse.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "org\/apache\/spark\/network\/protocol\/StreamResponse.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "org\/apache\/spark\/network\/protocol\/StreamResponse.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "org\/apache\/spark\/network\/protocol\/StreamResponse.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "org\/apache\/spark\/network\/protocol\/StreamResponse.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "org\/apache\/spark\/network\/protocol\/StreamResponse.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "org\/apache\/spark\/network\/protocol\/StreamResponse.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "org\/apache\/spark\/network\/protocol\/StreamResponse.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "org\/apache\/spark\/network\/protocol\/StreamResponse.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "org\/apache\/spark\/network\/protocol\/StreamResponse.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "org\/apache\/spark\/network\/protocol\/StreamResponse.html#notify():Unit", "kind" : "final def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "org\/apache\/spark\/network\/protocol\/StreamResponse.html#clone():Object", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_]", "member" : "scala.AnyRef.getClass", "link" : "org\/apache\/spark\/network\/protocol\/StreamResponse.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "org\/apache\/spark\/network\/protocol\/StreamResponse.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "org\/apache\/spark\/network\/protocol\/StreamResponse.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "class" : "org\/apache\/spark\/network\/protocol\/StreamResponse.html", "kind" : "class"}, {"name" : "org.apache.spark.network.protocol.UploadStream", "shortDescription" : "An RPC with data that is sent outside of the frame, so it can be read as a stream.", "members_class" : [{"label" : "toString", "tail" : "(): String", "member" : "org.apache.spark.network.protocol.UploadStream.toString", "link" : "org\/apache\/spark\/network\/protocol\/UploadStream.html#toString():String", "kind" : "def"}, {"label" : "equals", "tail" : "(other: Any): Boolean", "member" : "org.apache.spark.network.protocol.UploadStream.equals", "link" : "org\/apache\/spark\/network\/protocol\/UploadStream.html#equals(other:Any):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "org.apache.spark.network.protocol.UploadStream.hashCode", "link" : "org\/apache\/spark\/network\/protocol\/UploadStream.html#hashCode():Int", "kind" : "def"}, {"label" : "encode", "tail" : "(buf: ByteBuf): Unit", "member" : "org.apache.spark.network.protocol.UploadStream.encode", "link" : "org\/apache\/spark\/network\/protocol\/UploadStream.html#encode(buf:io.netty.buffer.ByteBuf):Unit", "kind" : "def"}, {"label" : "encodedLength", "tail" : "(): Int", "member" : "org.apache.spark.network.protocol.UploadStream.encodedLength", "link" : "org\/apache\/spark\/network\/protocol\/UploadStream.html#encodedLength():Int", "kind" : "def"}, {"label" : "type", "tail" : "(): Type", "member" : "org.apache.spark.network.protocol.UploadStream.type", "link" : "org\/apache\/spark\/network\/protocol\/UploadStream.html#type():org.apache.spark.network.protocol.Message.Type", "kind" : "def"}, {"member" : "org.apache.spark.network.protocol.UploadStream#<init>", "error" : "unsupported entity"}, {"label" : "equals", "tail" : "(other: AbstractMessage): Boolean", "member" : "org.apache.spark.network.protocol.AbstractMessage.equals", "link" : "org\/apache\/spark\/network\/protocol\/UploadStream.html#equals(other:org.apache.spark.network.protocol.AbstractMessage):Boolean", "kind" : "def"}, {"label" : "isBodyInFrame", "tail" : "(): Boolean", "member" : "org.apache.spark.network.protocol.AbstractMessage.isBodyInFrame", "link" : "org\/apache\/spark\/network\/protocol\/UploadStream.html#isBodyInFrame():Boolean", "kind" : "def"}, {"label" : "body", "tail" : "(): ManagedBuffer", "member" : "org.apache.spark.network.protocol.AbstractMessage.body", "link" : "org\/apache\/spark\/network\/protocol\/UploadStream.html#body():org.apache.spark.network.buffer.ManagedBuffer", "kind" : "def"}, {"label" : "synchronized", "tail" : "(arg0: â‡’ T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "org\/apache\/spark\/network\/protocol\/UploadStream.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "org\/apache\/spark\/network\/protocol\/UploadStream.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "org\/apache\/spark\/network\/protocol\/UploadStream.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "org\/apache\/spark\/network\/protocol\/UploadStream.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "org\/apache\/spark\/network\/protocol\/UploadStream.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "org\/apache\/spark\/network\/protocol\/UploadStream.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "org\/apache\/spark\/network\/protocol\/UploadStream.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "org\/apache\/spark\/network\/protocol\/UploadStream.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "org\/apache\/spark\/network\/protocol\/UploadStream.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "org\/apache\/spark\/network\/protocol\/UploadStream.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "org\/apache\/spark\/network\/protocol\/UploadStream.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "org\/apache\/spark\/network\/protocol\/UploadStream.html#notify():Unit", "kind" : "final def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "org\/apache\/spark\/network\/protocol\/UploadStream.html#clone():Object", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_]", "member" : "scala.AnyRef.getClass", "link" : "org\/apache\/spark\/network\/protocol\/UploadStream.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "org\/apache\/spark\/network\/protocol\/UploadStream.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "org\/apache\/spark\/network\/protocol\/UploadStream.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "class" : "org\/apache\/spark\/network\/protocol\/UploadStream.html", "kind" : "class"}], "org.apache.spark.network.sasl" : [{"name" : "org.apache.spark.network.sasl.SaslClientBootstrap", "shortDescription" : "Bootstraps a TransportClient by performing SASL authentication on the connection.", "members_class" : [{"label" : "doBootstrap", "tail" : "(client: TransportClient, channel: Channel): Unit", "member" : "org.apache.spark.network.sasl.SaslClientBootstrap.doBootstrap", "link" : "org\/apache\/spark\/network\/sasl\/SaslClientBootstrap.html#doBootstrap(client:org.apache.spark.network.client.TransportClient,channel:io.netty.channel.Channel):Unit", "kind" : "def"}, {"member" : "org.apache.spark.network.sasl.SaslClientBootstrap#<init>", "error" : "unsupported entity"}, {"label" : "synchronized", "tail" : "(arg0: â‡’ T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "org\/apache\/spark\/network\/sasl\/SaslClientBootstrap.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "org\/apache\/spark\/network\/sasl\/SaslClientBootstrap.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "org\/apache\/spark\/network\/sasl\/SaslClientBootstrap.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "org\/apache\/spark\/network\/sasl\/SaslClientBootstrap.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "org\/apache\/spark\/network\/sasl\/SaslClientBootstrap.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "org\/apache\/spark\/network\/sasl\/SaslClientBootstrap.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "org\/apache\/spark\/network\/sasl\/SaslClientBootstrap.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "org\/apache\/spark\/network\/sasl\/SaslClientBootstrap.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "org\/apache\/spark\/network\/sasl\/SaslClientBootstrap.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "org\/apache\/spark\/network\/sasl\/SaslClientBootstrap.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "org\/apache\/spark\/network\/sasl\/SaslClientBootstrap.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "org\/apache\/spark\/network\/sasl\/SaslClientBootstrap.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "org\/apache\/spark\/network\/sasl\/SaslClientBootstrap.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "org\/apache\/spark\/network\/sasl\/SaslClientBootstrap.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.equals", "link" : "org\/apache\/spark\/network\/sasl\/SaslClientBootstrap.html#equals(x$1:Any):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "org\/apache\/spark\/network\/sasl\/SaslClientBootstrap.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_]", "member" : "scala.AnyRef.getClass", "link" : "org\/apache\/spark\/network\/sasl\/SaslClientBootstrap.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "org\/apache\/spark\/network\/sasl\/SaslClientBootstrap.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "org\/apache\/spark\/network\/sasl\/SaslClientBootstrap.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "class" : "org\/apache\/spark\/network\/sasl\/SaslClientBootstrap.html", "kind" : "class"}, {"name" : "org.apache.spark.network.sasl.SaslRpcHandler", "shortDescription" : "RPC Handler which performs SASL authentication before delegating to a child RPC handler.", "members_class" : [{"label" : "channelInactive", "tail" : "(client: TransportClient): Unit", "member" : "org.apache.spark.network.sasl.SaslRpcHandler.channelInactive", "link" : "org\/apache\/spark\/network\/sasl\/SaslRpcHandler.html#channelInactive(client:org.apache.spark.network.client.TransportClient):Unit", "kind" : "def"}, {"label" : "doAuthChallenge", "tail" : "(client: TransportClient, message: ByteBuffer, callback: RpcResponseCallback): Boolean", "member" : "org.apache.spark.network.sasl.SaslRpcHandler.doAuthChallenge", "link" : "org\/apache\/spark\/network\/sasl\/SaslRpcHandler.html#doAuthChallenge(client:org.apache.spark.network.client.TransportClient,message:java.nio.ByteBuffer,callback:org.apache.spark.network.client.RpcResponseCallback):Boolean", "kind" : "def"}, {"member" : "org.apache.spark.network.sasl.SaslRpcHandler#<init>", "error" : "unsupported entity"}, {"label" : "getMergedBlockMetaReqHandler", "tail" : "(): MergedBlockMetaReqHandler", "member" : "org.apache.spark.network.server.AbstractAuthRpcHandler.getMergedBlockMetaReqHandler", "link" : "org\/apache\/spark\/network\/sasl\/SaslRpcHandler.html#getMergedBlockMetaReqHandler():org.apache.spark.network.server.RpcHandler.MergedBlockMetaReqHandler", "kind" : "def"}, {"label" : "isAuthenticated", "tail" : "(): Boolean", "member" : "org.apache.spark.network.server.AbstractAuthRpcHandler.isAuthenticated", "link" : "org\/apache\/spark\/network\/sasl\/SaslRpcHandler.html#isAuthenticated():Boolean", "kind" : "def"}, {"label" : "exceptionCaught", "tail" : "(cause: Throwable, client: TransportClient): Unit", "member" : "org.apache.spark.network.server.AbstractAuthRpcHandler.exceptionCaught", "link" : "org\/apache\/spark\/network\/sasl\/SaslRpcHandler.html#exceptionCaught(cause:Throwable,client:org.apache.spark.network.client.TransportClient):Unit", "kind" : "def"}, {"label" : "channelActive", "tail" : "(client: TransportClient): Unit", "member" : "org.apache.spark.network.server.AbstractAuthRpcHandler.channelActive", "link" : "org\/apache\/spark\/network\/sasl\/SaslRpcHandler.html#channelActive(client:org.apache.spark.network.client.TransportClient):Unit", "kind" : "def"}, {"label" : "getStreamManager", "tail" : "(): StreamManager", "member" : "org.apache.spark.network.server.AbstractAuthRpcHandler.getStreamManager", "link" : "org\/apache\/spark\/network\/sasl\/SaslRpcHandler.html#getStreamManager():org.apache.spark.network.server.StreamManager", "kind" : "def"}, {"label" : "receiveStream", "tail" : "(client: TransportClient, message: ByteBuffer, callback: RpcResponseCallback): StreamCallbackWithID", "member" : "org.apache.spark.network.server.AbstractAuthRpcHandler.receiveStream", "link" : "org\/apache\/spark\/network\/sasl\/SaslRpcHandler.html#receiveStream(client:org.apache.spark.network.client.TransportClient,message:java.nio.ByteBuffer,callback:org.apache.spark.network.client.RpcResponseCallback):org.apache.spark.network.client.StreamCallbackWithID", "kind" : "final def"}, {"label" : "receive", "tail" : "(client: TransportClient, message: ByteBuffer): Unit", "member" : "org.apache.spark.network.server.AbstractAuthRpcHandler.receive", "link" : "org\/apache\/spark\/network\/sasl\/SaslRpcHandler.html#receive(client:org.apache.spark.network.client.TransportClient,message:java.nio.ByteBuffer):Unit", "kind" : "final def"}, {"label" : "receive", "tail" : "(client: TransportClient, message: ByteBuffer, callback: RpcResponseCallback): Unit", "member" : "org.apache.spark.network.server.AbstractAuthRpcHandler.receive", "link" : "org\/apache\/spark\/network\/sasl\/SaslRpcHandler.html#receive(client:org.apache.spark.network.client.TransportClient,message:java.nio.ByteBuffer,callback:org.apache.spark.network.client.RpcResponseCallback):Unit", "kind" : "final def"}, {"label" : "synchronized", "tail" : "(arg0: â‡’ T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "org\/apache\/spark\/network\/sasl\/SaslRpcHandler.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "org\/apache\/spark\/network\/sasl\/SaslRpcHandler.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "org\/apache\/spark\/network\/sasl\/SaslRpcHandler.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "org\/apache\/spark\/network\/sasl\/SaslRpcHandler.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "org\/apache\/spark\/network\/sasl\/SaslRpcHandler.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "org\/apache\/spark\/network\/sasl\/SaslRpcHandler.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "org\/apache\/spark\/network\/sasl\/SaslRpcHandler.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "org\/apache\/spark\/network\/sasl\/SaslRpcHandler.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "org\/apache\/spark\/network\/sasl\/SaslRpcHandler.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "org\/apache\/spark\/network\/sasl\/SaslRpcHandler.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "org\/apache\/spark\/network\/sasl\/SaslRpcHandler.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "org\/apache\/spark\/network\/sasl\/SaslRpcHandler.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "org\/apache\/spark\/network\/sasl\/SaslRpcHandler.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "org\/apache\/spark\/network\/sasl\/SaslRpcHandler.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.equals", "link" : "org\/apache\/spark\/network\/sasl\/SaslRpcHandler.html#equals(x$1:Any):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "org\/apache\/spark\/network\/sasl\/SaslRpcHandler.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_]", "member" : "scala.AnyRef.getClass", "link" : "org\/apache\/spark\/network\/sasl\/SaslRpcHandler.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "org\/apache\/spark\/network\/sasl\/SaslRpcHandler.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "org\/apache\/spark\/network\/sasl\/SaslRpcHandler.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "class" : "org\/apache\/spark\/network\/sasl\/SaslRpcHandler.html", "kind" : "class"}, {"name" : "org.apache.spark.network.sasl.SaslServerBootstrap", "shortDescription" : "A bootstrap which is executed on a TransportServer's client channel once a client connectsto the server.", "members_class" : [{"label" : "doBootstrap", "tail" : "(channel: Channel, rpcHandler: RpcHandler): RpcHandler", "member" : "org.apache.spark.network.sasl.SaslServerBootstrap.doBootstrap", "link" : "org\/apache\/spark\/network\/sasl\/SaslServerBootstrap.html#doBootstrap(channel:io.netty.channel.Channel,rpcHandler:org.apache.spark.network.server.RpcHandler):org.apache.spark.network.server.RpcHandler", "kind" : "def"}, {"member" : "org.apache.spark.network.sasl.SaslServerBootstrap#<init>", "error" : "unsupported entity"}, {"label" : "synchronized", "tail" : "(arg0: â‡’ T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "org\/apache\/spark\/network\/sasl\/SaslServerBootstrap.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "org\/apache\/spark\/network\/sasl\/SaslServerBootstrap.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "org\/apache\/spark\/network\/sasl\/SaslServerBootstrap.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "org\/apache\/spark\/network\/sasl\/SaslServerBootstrap.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "org\/apache\/spark\/network\/sasl\/SaslServerBootstrap.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "org\/apache\/spark\/network\/sasl\/SaslServerBootstrap.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "org\/apache\/spark\/network\/sasl\/SaslServerBootstrap.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "org\/apache\/spark\/network\/sasl\/SaslServerBootstrap.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "org\/apache\/spark\/network\/sasl\/SaslServerBootstrap.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "org\/apache\/spark\/network\/sasl\/SaslServerBootstrap.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "org\/apache\/spark\/network\/sasl\/SaslServerBootstrap.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "org\/apache\/spark\/network\/sasl\/SaslServerBootstrap.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "org\/apache\/spark\/network\/sasl\/SaslServerBootstrap.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "org\/apache\/spark\/network\/sasl\/SaslServerBootstrap.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.equals", "link" : "org\/apache\/spark\/network\/sasl\/SaslServerBootstrap.html#equals(x$1:Any):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "org\/apache\/spark\/network\/sasl\/SaslServerBootstrap.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_]", "member" : "scala.AnyRef.getClass", "link" : "org\/apache\/spark\/network\/sasl\/SaslServerBootstrap.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "org\/apache\/spark\/network\/sasl\/SaslServerBootstrap.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "org\/apache\/spark\/network\/sasl\/SaslServerBootstrap.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "class" : "org\/apache\/spark\/network\/sasl\/SaslServerBootstrap.html", "kind" : "class"}, {"name" : "org.apache.spark.network.sasl.SecretKeyHolder", "members_trait" : [{"member" : "org.apache.spark.network.sasl.SecretKeyHolder#<init>", "error" : "unsupported entity"}, {"label" : "synchronized", "tail" : "(arg0: â‡’ T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "org\/apache\/spark\/network\/sasl\/SecretKeyHolder.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "org\/apache\/spark\/network\/sasl\/SecretKeyHolder.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "org\/apache\/spark\/network\/sasl\/SecretKeyHolder.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "org\/apache\/spark\/network\/sasl\/SecretKeyHolder.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "org\/apache\/spark\/network\/sasl\/SecretKeyHolder.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "org\/apache\/spark\/network\/sasl\/SecretKeyHolder.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "org\/apache\/spark\/network\/sasl\/SecretKeyHolder.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "org\/apache\/spark\/network\/sasl\/SecretKeyHolder.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "org\/apache\/spark\/network\/sasl\/SecretKeyHolder.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "org\/apache\/spark\/network\/sasl\/SecretKeyHolder.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "org\/apache\/spark\/network\/sasl\/SecretKeyHolder.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "org\/apache\/spark\/network\/sasl\/SecretKeyHolder.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "org\/apache\/spark\/network\/sasl\/SecretKeyHolder.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "org\/apache\/spark\/network\/sasl\/SecretKeyHolder.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.equals", "link" : "org\/apache\/spark\/network\/sasl\/SecretKeyHolder.html#equals(x$1:Any):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "org\/apache\/spark\/network\/sasl\/SecretKeyHolder.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_]", "member" : "scala.AnyRef.getClass", "link" : "org\/apache\/spark\/network\/sasl\/SecretKeyHolder.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "org\/apache\/spark\/network\/sasl\/SecretKeyHolder.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "org\/apache\/spark\/network\/sasl\/SecretKeyHolder.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}, {"label" : "getSecretKey", "tail" : "(appId: String): String", "member" : "org.apache.spark.network.sasl.SecretKeyHolder.getSecretKey", "link" : "org\/apache\/spark\/network\/sasl\/SecretKeyHolder.html#getSecretKey(appId:String):String", "kind" : "abstract def"}, {"label" : "getSaslUser", "tail" : "(appId: String): String", "member" : "org.apache.spark.network.sasl.SecretKeyHolder.getSaslUser", "link" : "org\/apache\/spark\/network\/sasl\/SecretKeyHolder.html#getSaslUser(appId:String):String", "kind" : "abstract def"}], "shortDescription" : "Interface for getting a secret key associated with some application.", "trait" : "org\/apache\/spark\/network\/sasl\/SecretKeyHolder.html", "kind" : "trait"}, {"name" : "org.apache.spark.network.sasl.SparkSaslClient", "shortDescription" : "A SASL Client for Spark which simply keeps track of the state of a single SASL session, from theinitial state to the \"authenticated\" state.", "members_class" : [{"label" : "unwrap", "tail" : "(data: Array[Byte], offset: Int, len: Int): Array[Byte]", "member" : "org.apache.spark.network.sasl.SparkSaslClient.unwrap", "link" : "org\/apache\/spark\/network\/sasl\/SparkSaslClient.html#unwrap(data:Array[Byte],offset:Int,len:Int):Array[Byte]", "kind" : "def"}, {"label" : "wrap", "tail" : "(data: Array[Byte], offset: Int, len: Int): Array[Byte]", "member" : "org.apache.spark.network.sasl.SparkSaslClient.wrap", "link" : "org\/apache\/spark\/network\/sasl\/SparkSaslClient.html#wrap(data:Array[Byte],offset:Int,len:Int):Array[Byte]", "kind" : "def"}, {"label" : "dispose", "tail" : "(): Unit", "member" : "org.apache.spark.network.sasl.SparkSaslClient.dispose", "link" : "org\/apache\/spark\/network\/sasl\/SparkSaslClient.html#dispose():Unit", "kind" : "def"}, {"label" : "response", "tail" : "(token: Array[Byte]): Array[Byte]", "member" : "org.apache.spark.network.sasl.SparkSaslClient.response", "link" : "org\/apache\/spark\/network\/sasl\/SparkSaslClient.html#response(token:Array[Byte]):Array[Byte]", "kind" : "def"}, {"label" : "getNegotiatedProperty", "tail" : "(name: String): AnyRef", "member" : "org.apache.spark.network.sasl.SparkSaslClient.getNegotiatedProperty", "link" : "org\/apache\/spark\/network\/sasl\/SparkSaslClient.html#getNegotiatedProperty(name:String):Object", "kind" : "def"}, {"label" : "isComplete", "tail" : "(): Boolean", "member" : "org.apache.spark.network.sasl.SparkSaslClient.isComplete", "link" : "org\/apache\/spark\/network\/sasl\/SparkSaslClient.html#isComplete():Boolean", "kind" : "def"}, {"label" : "firstToken", "tail" : "(): Array[Byte]", "member" : "org.apache.spark.network.sasl.SparkSaslClient.firstToken", "link" : "org\/apache\/spark\/network\/sasl\/SparkSaslClient.html#firstToken():Array[Byte]", "kind" : "def"}, {"member" : "org.apache.spark.network.sasl.SparkSaslClient#<init>", "error" : "unsupported entity"}, {"label" : "synchronized", "tail" : "(arg0: â‡’ T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "org\/apache\/spark\/network\/sasl\/SparkSaslClient.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "org\/apache\/spark\/network\/sasl\/SparkSaslClient.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "org\/apache\/spark\/network\/sasl\/SparkSaslClient.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "org\/apache\/spark\/network\/sasl\/SparkSaslClient.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "org\/apache\/spark\/network\/sasl\/SparkSaslClient.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "org\/apache\/spark\/network\/sasl\/SparkSaslClient.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "org\/apache\/spark\/network\/sasl\/SparkSaslClient.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "org\/apache\/spark\/network\/sasl\/SparkSaslClient.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "org\/apache\/spark\/network\/sasl\/SparkSaslClient.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "org\/apache\/spark\/network\/sasl\/SparkSaslClient.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "org\/apache\/spark\/network\/sasl\/SparkSaslClient.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "org\/apache\/spark\/network\/sasl\/SparkSaslClient.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "org\/apache\/spark\/network\/sasl\/SparkSaslClient.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "org\/apache\/spark\/network\/sasl\/SparkSaslClient.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.equals", "link" : "org\/apache\/spark\/network\/sasl\/SparkSaslClient.html#equals(x$1:Any):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "org\/apache\/spark\/network\/sasl\/SparkSaslClient.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_]", "member" : "scala.AnyRef.getClass", "link" : "org\/apache\/spark\/network\/sasl\/SparkSaslClient.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "org\/apache\/spark\/network\/sasl\/SparkSaslClient.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "org\/apache\/spark\/network\/sasl\/SparkSaslClient.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "class" : "org\/apache\/spark\/network\/sasl\/SparkSaslClient.html", "kind" : "class"}, {"name" : "org.apache.spark.network.sasl.SparkSaslServer", "shortDescription" : "A SASL Server for Spark which simply keeps track of the state of a single SASL session, from theinitial state to the \"authenticated\" state.", "members_class" : [{"label" : "unwrap", "tail" : "(data: Array[Byte], offset: Int, len: Int): Array[Byte]", "member" : "org.apache.spark.network.sasl.SparkSaslServer.unwrap", "link" : "org\/apache\/spark\/network\/sasl\/SparkSaslServer.html#unwrap(data:Array[Byte],offset:Int,len:Int):Array[Byte]", "kind" : "def"}, {"label" : "wrap", "tail" : "(data: Array[Byte], offset: Int, len: Int): Array[Byte]", "member" : "org.apache.spark.network.sasl.SparkSaslServer.wrap", "link" : "org\/apache\/spark\/network\/sasl\/SparkSaslServer.html#wrap(data:Array[Byte],offset:Int,len:Int):Array[Byte]", "kind" : "def"}, {"label" : "dispose", "tail" : "(): Unit", "member" : "org.apache.spark.network.sasl.SparkSaslServer.dispose", "link" : "org\/apache\/spark\/network\/sasl\/SparkSaslServer.html#dispose():Unit", "kind" : "def"}, {"label" : "response", "tail" : "(token: Array[Byte]): Array[Byte]", "member" : "org.apache.spark.network.sasl.SparkSaslServer.response", "link" : "org\/apache\/spark\/network\/sasl\/SparkSaslServer.html#response(token:Array[Byte]):Array[Byte]", "kind" : "def"}, {"label" : "getNegotiatedProperty", "tail" : "(name: String): AnyRef", "member" : "org.apache.spark.network.sasl.SparkSaslServer.getNegotiatedProperty", "link" : "org\/apache\/spark\/network\/sasl\/SparkSaslServer.html#getNegotiatedProperty(name:String):Object", "kind" : "def"}, {"label" : "isComplete", "tail" : "(): Boolean", "member" : "org.apache.spark.network.sasl.SparkSaslServer.isComplete", "link" : "org\/apache\/spark\/network\/sasl\/SparkSaslServer.html#isComplete():Boolean", "kind" : "def"}, {"member" : "org.apache.spark.network.sasl.SparkSaslServer#<init>", "error" : "unsupported entity"}, {"label" : "synchronized", "tail" : "(arg0: â‡’ T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "org\/apache\/spark\/network\/sasl\/SparkSaslServer.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "org\/apache\/spark\/network\/sasl\/SparkSaslServer.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "org\/apache\/spark\/network\/sasl\/SparkSaslServer.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "org\/apache\/spark\/network\/sasl\/SparkSaslServer.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "org\/apache\/spark\/network\/sasl\/SparkSaslServer.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "org\/apache\/spark\/network\/sasl\/SparkSaslServer.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "org\/apache\/spark\/network\/sasl\/SparkSaslServer.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "org\/apache\/spark\/network\/sasl\/SparkSaslServer.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "org\/apache\/spark\/network\/sasl\/SparkSaslServer.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "org\/apache\/spark\/network\/sasl\/SparkSaslServer.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "org\/apache\/spark\/network\/sasl\/SparkSaslServer.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "org\/apache\/spark\/network\/sasl\/SparkSaslServer.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "org\/apache\/spark\/network\/sasl\/SparkSaslServer.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "org\/apache\/spark\/network\/sasl\/SparkSaslServer.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.equals", "link" : "org\/apache\/spark\/network\/sasl\/SparkSaslServer.html#equals(x$1:Any):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "org\/apache\/spark\/network\/sasl\/SparkSaslServer.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_]", "member" : "scala.AnyRef.getClass", "link" : "org\/apache\/spark\/network\/sasl\/SparkSaslServer.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "org\/apache\/spark\/network\/sasl\/SparkSaslServer.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "org\/apache\/spark\/network\/sasl\/SparkSaslServer.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "class" : "org\/apache\/spark\/network\/sasl\/SparkSaslServer.html", "kind" : "class"}], "org" : [], "org.apache.spark.network" : [{"name" : "org.apache.spark.network.TransportContext", "shortDescription" : "Contains the context to create a TransportServer, TransportClientFactory, and tosetup Netty Channel pipelines with aorg.apache.spark.network.server.TransportChannelHandler.", "members_class" : [{"label" : "close", "tail" : "(): Unit", "member" : "org.apache.spark.network.TransportContext.close", "link" : "org\/apache\/spark\/network\/TransportContext.html#close():Unit", "kind" : "def"}, {"label" : "getRegisteredConnections", "tail" : "(): Counter", "member" : "org.apache.spark.network.TransportContext.getRegisteredConnections", "link" : "org\/apache\/spark\/network\/TransportContext.html#getRegisteredConnections():com.codahale.metrics.Counter", "kind" : "def"}, {"label" : "getConf", "tail" : "(): TransportConf", "member" : "org.apache.spark.network.TransportContext.getConf", "link" : "org\/apache\/spark\/network\/TransportContext.html#getConf():org.apache.spark.network.util.TransportConf", "kind" : "def"}, {"label" : "initializePipeline", "tail" : "(channel: SocketChannel, channelRpcHandler: RpcHandler): TransportChannelHandler", "member" : "org.apache.spark.network.TransportContext.initializePipeline", "link" : "org\/apache\/spark\/network\/TransportContext.html#initializePipeline(channel:io.netty.channel.socket.SocketChannel,channelRpcHandler:org.apache.spark.network.server.RpcHandler):org.apache.spark.network.server.TransportChannelHandler", "kind" : "def"}, {"label" : "initializePipeline", "tail" : "(channel: SocketChannel): TransportChannelHandler", "member" : "org.apache.spark.network.TransportContext.initializePipeline", "link" : "org\/apache\/spark\/network\/TransportContext.html#initializePipeline(channel:io.netty.channel.socket.SocketChannel):org.apache.spark.network.server.TransportChannelHandler", "kind" : "def"}, {"label" : "createServer", "tail" : "(): TransportServer", "member" : "org.apache.spark.network.TransportContext.createServer", "link" : "org\/apache\/spark\/network\/TransportContext.html#createServer():org.apache.spark.network.server.TransportServer", "kind" : "def"}, {"label" : "createServer", "tail" : "(bootstraps: List[TransportServerBootstrap]): TransportServer", "member" : "org.apache.spark.network.TransportContext.createServer", "link" : "org\/apache\/spark\/network\/TransportContext.html#createServer(bootstraps:java.util.List[org.apache.spark.network.server.TransportServerBootstrap]):org.apache.spark.network.server.TransportServer", "kind" : "def"}, {"label" : "createServer", "tail" : "(host: String, port: Int, bootstraps: List[TransportServerBootstrap]): TransportServer", "member" : "org.apache.spark.network.TransportContext.createServer", "link" : "org\/apache\/spark\/network\/TransportContext.html#createServer(host:String,port:Int,bootstraps:java.util.List[org.apache.spark.network.server.TransportServerBootstrap]):org.apache.spark.network.server.TransportServer", "kind" : "def"}, {"label" : "createServer", "tail" : "(port: Int, bootstraps: List[TransportServerBootstrap]): TransportServer", "member" : "org.apache.spark.network.TransportContext.createServer", "link" : "org\/apache\/spark\/network\/TransportContext.html#createServer(port:Int,bootstraps:java.util.List[org.apache.spark.network.server.TransportServerBootstrap]):org.apache.spark.network.server.TransportServer", "kind" : "def"}, {"label" : "createClientFactory", "tail" : "(): TransportClientFactory", "member" : "org.apache.spark.network.TransportContext.createClientFactory", "link" : "org\/apache\/spark\/network\/TransportContext.html#createClientFactory():org.apache.spark.network.client.TransportClientFactory", "kind" : "def"}, {"label" : "createClientFactory", "tail" : "(bootstraps: List[TransportClientBootstrap]): TransportClientFactory", "member" : "org.apache.spark.network.TransportContext.createClientFactory", "link" : "org\/apache\/spark\/network\/TransportContext.html#createClientFactory(bootstraps:java.util.List[org.apache.spark.network.client.TransportClientBootstrap]):org.apache.spark.network.client.TransportClientFactory", "kind" : "def"}, {"member" : "org.apache.spark.network.TransportContext#<init>", "error" : "unsupported entity"}, {"member" : "org.apache.spark.network.TransportContext#<init>", "error" : "unsupported entity"}, {"member" : "org.apache.spark.network.TransportContext#<init>", "error" : "unsupported entity"}, {"label" : "synchronized", "tail" : "(arg0: â‡’ T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "org\/apache\/spark\/network\/TransportContext.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "org\/apache\/spark\/network\/TransportContext.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "org\/apache\/spark\/network\/TransportContext.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "org\/apache\/spark\/network\/TransportContext.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "org\/apache\/spark\/network\/TransportContext.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "org\/apache\/spark\/network\/TransportContext.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "org\/apache\/spark\/network\/TransportContext.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "org\/apache\/spark\/network\/TransportContext.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "org\/apache\/spark\/network\/TransportContext.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "org\/apache\/spark\/network\/TransportContext.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "org\/apache\/spark\/network\/TransportContext.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "org\/apache\/spark\/network\/TransportContext.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "org\/apache\/spark\/network\/TransportContext.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "org\/apache\/spark\/network\/TransportContext.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.equals", "link" : "org\/apache\/spark\/network\/TransportContext.html#equals(x$1:Any):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "org\/apache\/spark\/network\/TransportContext.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_]", "member" : "scala.AnyRef.getClass", "link" : "org\/apache\/spark\/network\/TransportContext.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "org\/apache\/spark\/network\/TransportContext.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "org\/apache\/spark\/network\/TransportContext.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "class" : "org\/apache\/spark\/network\/TransportContext.html", "kind" : "class"}], "org.apache.spark.network.buffer" : [{"name" : "org.apache.spark.network.buffer.FileSegmentManagedBuffer", "shortDescription" : "A ManagedBuffer backed by a segment in a file.", "members_class" : [{"label" : "toString", "tail" : "(): String", "member" : "org.apache.spark.network.buffer.FileSegmentManagedBuffer.toString", "link" : "org\/apache\/spark\/network\/buffer\/FileSegmentManagedBuffer.html#toString():String", "kind" : "def"}, {"label" : "getLength", "tail" : "(): Long", "member" : "org.apache.spark.network.buffer.FileSegmentManagedBuffer.getLength", "link" : "org\/apache\/spark\/network\/buffer\/FileSegmentManagedBuffer.html#getLength():Long", "kind" : "def"}, {"label" : "getOffset", "tail" : "(): Long", "member" : "org.apache.spark.network.buffer.FileSegmentManagedBuffer.getOffset", "link" : "org\/apache\/spark\/network\/buffer\/FileSegmentManagedBuffer.html#getOffset():Long", "kind" : "def"}, {"label" : "getFile", "tail" : "(): File", "member" : "org.apache.spark.network.buffer.FileSegmentManagedBuffer.getFile", "link" : "org\/apache\/spark\/network\/buffer\/FileSegmentManagedBuffer.html#getFile():java.io.File", "kind" : "def"}, {"label" : "convertToNetty", "tail" : "(): AnyRef", "member" : "org.apache.spark.network.buffer.FileSegmentManagedBuffer.convertToNetty", "link" : "org\/apache\/spark\/network\/buffer\/FileSegmentManagedBuffer.html#convertToNetty():Object", "kind" : "def"}, {"label" : "release", "tail" : "(): ManagedBuffer", "member" : "org.apache.spark.network.buffer.FileSegmentManagedBuffer.release", "link" : "org\/apache\/spark\/network\/buffer\/FileSegmentManagedBuffer.html#release():org.apache.spark.network.buffer.ManagedBuffer", "kind" : "def"}, {"label" : "retain", "tail" : "(): ManagedBuffer", "member" : "org.apache.spark.network.buffer.FileSegmentManagedBuffer.retain", "link" : "org\/apache\/spark\/network\/buffer\/FileSegmentManagedBuffer.html#retain():org.apache.spark.network.buffer.ManagedBuffer", "kind" : "def"}, {"label" : "createInputStream", "tail" : "(): InputStream", "member" : "org.apache.spark.network.buffer.FileSegmentManagedBuffer.createInputStream", "link" : "org\/apache\/spark\/network\/buffer\/FileSegmentManagedBuffer.html#createInputStream():java.io.InputStream", "kind" : "def"}, {"label" : "nioByteBuffer", "tail" : "(): ByteBuffer", "member" : "org.apache.spark.network.buffer.FileSegmentManagedBuffer.nioByteBuffer", "link" : "org\/apache\/spark\/network\/buffer\/FileSegmentManagedBuffer.html#nioByteBuffer():java.nio.ByteBuffer", "kind" : "def"}, {"label" : "size", "tail" : "(): Long", "member" : "org.apache.spark.network.buffer.FileSegmentManagedBuffer.size", "link" : "org\/apache\/spark\/network\/buffer\/FileSegmentManagedBuffer.html#size():Long", "kind" : "def"}, {"member" : "org.apache.spark.network.buffer.FileSegmentManagedBuffer#<init>", "error" : "unsupported entity"}, {"label" : "synchronized", "tail" : "(arg0: â‡’ T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "org\/apache\/spark\/network\/buffer\/FileSegmentManagedBuffer.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "org\/apache\/spark\/network\/buffer\/FileSegmentManagedBuffer.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "org\/apache\/spark\/network\/buffer\/FileSegmentManagedBuffer.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "org\/apache\/spark\/network\/buffer\/FileSegmentManagedBuffer.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "org\/apache\/spark\/network\/buffer\/FileSegmentManagedBuffer.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "org\/apache\/spark\/network\/buffer\/FileSegmentManagedBuffer.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "org\/apache\/spark\/network\/buffer\/FileSegmentManagedBuffer.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "org\/apache\/spark\/network\/buffer\/FileSegmentManagedBuffer.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "org\/apache\/spark\/network\/buffer\/FileSegmentManagedBuffer.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "org\/apache\/spark\/network\/buffer\/FileSegmentManagedBuffer.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "org\/apache\/spark\/network\/buffer\/FileSegmentManagedBuffer.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "org\/apache\/spark\/network\/buffer\/FileSegmentManagedBuffer.html#notify():Unit", "kind" : "final def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "org\/apache\/spark\/network\/buffer\/FileSegmentManagedBuffer.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.equals", "link" : "org\/apache\/spark\/network\/buffer\/FileSegmentManagedBuffer.html#equals(x$1:Any):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "org\/apache\/spark\/network\/buffer\/FileSegmentManagedBuffer.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_]", "member" : "scala.AnyRef.getClass", "link" : "org\/apache\/spark\/network\/buffer\/FileSegmentManagedBuffer.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "org\/apache\/spark\/network\/buffer\/FileSegmentManagedBuffer.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "org\/apache\/spark\/network\/buffer\/FileSegmentManagedBuffer.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "class" : "org\/apache\/spark\/network\/buffer\/FileSegmentManagedBuffer.html", "kind" : "class"}, {"name" : "org.apache.spark.network.buffer.ManagedBuffer", "shortDescription" : "This interface provides an immutable view for data in the form of bytes.", "members_class" : [{"member" : "org.apache.spark.network.buffer.ManagedBuffer#<init>", "error" : "unsupported entity"}, {"label" : "synchronized", "tail" : "(arg0: â‡’ T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "org\/apache\/spark\/network\/buffer\/ManagedBuffer.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "org\/apache\/spark\/network\/buffer\/ManagedBuffer.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "org\/apache\/spark\/network\/buffer\/ManagedBuffer.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "org\/apache\/spark\/network\/buffer\/ManagedBuffer.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "org\/apache\/spark\/network\/buffer\/ManagedBuffer.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "org\/apache\/spark\/network\/buffer\/ManagedBuffer.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "org\/apache\/spark\/network\/buffer\/ManagedBuffer.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "org\/apache\/spark\/network\/buffer\/ManagedBuffer.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "org\/apache\/spark\/network\/buffer\/ManagedBuffer.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "org\/apache\/spark\/network\/buffer\/ManagedBuffer.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "org\/apache\/spark\/network\/buffer\/ManagedBuffer.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "org\/apache\/spark\/network\/buffer\/ManagedBuffer.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "org\/apache\/spark\/network\/buffer\/ManagedBuffer.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "org\/apache\/spark\/network\/buffer\/ManagedBuffer.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.equals", "link" : "org\/apache\/spark\/network\/buffer\/ManagedBuffer.html#equals(x$1:Any):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "org\/apache\/spark\/network\/buffer\/ManagedBuffer.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_]", "member" : "scala.AnyRef.getClass", "link" : "org\/apache\/spark\/network\/buffer\/ManagedBuffer.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "org\/apache\/spark\/network\/buffer\/ManagedBuffer.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "org\/apache\/spark\/network\/buffer\/ManagedBuffer.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}, {"label" : "convertToNetty", "tail" : "(): AnyRef", "member" : "org.apache.spark.network.buffer.ManagedBuffer.convertToNetty", "link" : "org\/apache\/spark\/network\/buffer\/ManagedBuffer.html#convertToNetty():Object", "kind" : "abstract def"}, {"label" : "release", "tail" : "(): ManagedBuffer", "member" : "org.apache.spark.network.buffer.ManagedBuffer.release", "link" : "org\/apache\/spark\/network\/buffer\/ManagedBuffer.html#release():org.apache.spark.network.buffer.ManagedBuffer", "kind" : "abstract def"}, {"label" : "retain", "tail" : "(): ManagedBuffer", "member" : "org.apache.spark.network.buffer.ManagedBuffer.retain", "link" : "org\/apache\/spark\/network\/buffer\/ManagedBuffer.html#retain():org.apache.spark.network.buffer.ManagedBuffer", "kind" : "abstract def"}, {"label" : "createInputStream", "tail" : "(): InputStream", "member" : "org.apache.spark.network.buffer.ManagedBuffer.createInputStream", "link" : "org\/apache\/spark\/network\/buffer\/ManagedBuffer.html#createInputStream():java.io.InputStream", "kind" : "abstract def"}, {"label" : "nioByteBuffer", "tail" : "(): ByteBuffer", "member" : "org.apache.spark.network.buffer.ManagedBuffer.nioByteBuffer", "link" : "org\/apache\/spark\/network\/buffer\/ManagedBuffer.html#nioByteBuffer():java.nio.ByteBuffer", "kind" : "abstract def"}, {"label" : "size", "tail" : "(): Long", "member" : "org.apache.spark.network.buffer.ManagedBuffer.size", "link" : "org\/apache\/spark\/network\/buffer\/ManagedBuffer.html#size():Long", "kind" : "abstract def"}], "class" : "org\/apache\/spark\/network\/buffer\/ManagedBuffer.html", "kind" : "class"}, {"name" : "org.apache.spark.network.buffer.NettyManagedBuffer", "shortDescription" : "A ManagedBuffer backed by a Netty ByteBuf.", "members_class" : [{"label" : "toString", "tail" : "(): String", "member" : "org.apache.spark.network.buffer.NettyManagedBuffer.toString", "link" : "org\/apache\/spark\/network\/buffer\/NettyManagedBuffer.html#toString():String", "kind" : "def"}, {"label" : "convertToNetty", "tail" : "(): AnyRef", "member" : "org.apache.spark.network.buffer.NettyManagedBuffer.convertToNetty", "link" : "org\/apache\/spark\/network\/buffer\/NettyManagedBuffer.html#convertToNetty():Object", "kind" : "def"}, {"label" : "release", "tail" : "(): ManagedBuffer", "member" : "org.apache.spark.network.buffer.NettyManagedBuffer.release", "link" : "org\/apache\/spark\/network\/buffer\/NettyManagedBuffer.html#release():org.apache.spark.network.buffer.ManagedBuffer", "kind" : "def"}, {"label" : "retain", "tail" : "(): ManagedBuffer", "member" : "org.apache.spark.network.buffer.NettyManagedBuffer.retain", "link" : "org\/apache\/spark\/network\/buffer\/NettyManagedBuffer.html#retain():org.apache.spark.network.buffer.ManagedBuffer", "kind" : "def"}, {"label" : "createInputStream", "tail" : "(): InputStream", "member" : "org.apache.spark.network.buffer.NettyManagedBuffer.createInputStream", "link" : "org\/apache\/spark\/network\/buffer\/NettyManagedBuffer.html#createInputStream():java.io.InputStream", "kind" : "def"}, {"label" : "nioByteBuffer", "tail" : "(): ByteBuffer", "member" : "org.apache.spark.network.buffer.NettyManagedBuffer.nioByteBuffer", "link" : "org\/apache\/spark\/network\/buffer\/NettyManagedBuffer.html#nioByteBuffer():java.nio.ByteBuffer", "kind" : "def"}, {"label" : "size", "tail" : "(): Long", "member" : "org.apache.spark.network.buffer.NettyManagedBuffer.size", "link" : "org\/apache\/spark\/network\/buffer\/NettyManagedBuffer.html#size():Long", "kind" : "def"}, {"member" : "org.apache.spark.network.buffer.NettyManagedBuffer#<init>", "error" : "unsupported entity"}, {"label" : "synchronized", "tail" : "(arg0: â‡’ T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "org\/apache\/spark\/network\/buffer\/NettyManagedBuffer.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "org\/apache\/spark\/network\/buffer\/NettyManagedBuffer.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "org\/apache\/spark\/network\/buffer\/NettyManagedBuffer.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "org\/apache\/spark\/network\/buffer\/NettyManagedBuffer.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "org\/apache\/spark\/network\/buffer\/NettyManagedBuffer.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "org\/apache\/spark\/network\/buffer\/NettyManagedBuffer.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "org\/apache\/spark\/network\/buffer\/NettyManagedBuffer.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "org\/apache\/spark\/network\/buffer\/NettyManagedBuffer.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "org\/apache\/spark\/network\/buffer\/NettyManagedBuffer.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "org\/apache\/spark\/network\/buffer\/NettyManagedBuffer.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "org\/apache\/spark\/network\/buffer\/NettyManagedBuffer.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "org\/apache\/spark\/network\/buffer\/NettyManagedBuffer.html#notify():Unit", "kind" : "final def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "org\/apache\/spark\/network\/buffer\/NettyManagedBuffer.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.equals", "link" : "org\/apache\/spark\/network\/buffer\/NettyManagedBuffer.html#equals(x$1:Any):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "org\/apache\/spark\/network\/buffer\/NettyManagedBuffer.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_]", "member" : "scala.AnyRef.getClass", "link" : "org\/apache\/spark\/network\/buffer\/NettyManagedBuffer.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "org\/apache\/spark\/network\/buffer\/NettyManagedBuffer.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "org\/apache\/spark\/network\/buffer\/NettyManagedBuffer.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "class" : "org\/apache\/spark\/network\/buffer\/NettyManagedBuffer.html", "kind" : "class"}, {"name" : "org.apache.spark.network.buffer.NioManagedBuffer", "shortDescription" : "A ManagedBuffer backed by ByteBuffer.", "members_class" : [{"label" : "toString", "tail" : "(): String", "member" : "org.apache.spark.network.buffer.NioManagedBuffer.toString", "link" : "org\/apache\/spark\/network\/buffer\/NioManagedBuffer.html#toString():String", "kind" : "def"}, {"label" : "convertToNetty", "tail" : "(): AnyRef", "member" : "org.apache.spark.network.buffer.NioManagedBuffer.convertToNetty", "link" : "org\/apache\/spark\/network\/buffer\/NioManagedBuffer.html#convertToNetty():Object", "kind" : "def"}, {"label" : "release", "tail" : "(): ManagedBuffer", "member" : "org.apache.spark.network.buffer.NioManagedBuffer.release", "link" : "org\/apache\/spark\/network\/buffer\/NioManagedBuffer.html#release():org.apache.spark.network.buffer.ManagedBuffer", "kind" : "def"}, {"label" : "retain", "tail" : "(): ManagedBuffer", "member" : "org.apache.spark.network.buffer.NioManagedBuffer.retain", "link" : "org\/apache\/spark\/network\/buffer\/NioManagedBuffer.html#retain():org.apache.spark.network.buffer.ManagedBuffer", "kind" : "def"}, {"label" : "createInputStream", "tail" : "(): InputStream", "member" : "org.apache.spark.network.buffer.NioManagedBuffer.createInputStream", "link" : "org\/apache\/spark\/network\/buffer\/NioManagedBuffer.html#createInputStream():java.io.InputStream", "kind" : "def"}, {"label" : "nioByteBuffer", "tail" : "(): ByteBuffer", "member" : "org.apache.spark.network.buffer.NioManagedBuffer.nioByteBuffer", "link" : "org\/apache\/spark\/network\/buffer\/NioManagedBuffer.html#nioByteBuffer():java.nio.ByteBuffer", "kind" : "def"}, {"label" : "size", "tail" : "(): Long", "member" : "org.apache.spark.network.buffer.NioManagedBuffer.size", "link" : "org\/apache\/spark\/network\/buffer\/NioManagedBuffer.html#size():Long", "kind" : "def"}, {"member" : "org.apache.spark.network.buffer.NioManagedBuffer#<init>", "error" : "unsupported entity"}, {"label" : "synchronized", "tail" : "(arg0: â‡’ T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "org\/apache\/spark\/network\/buffer\/NioManagedBuffer.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "org\/apache\/spark\/network\/buffer\/NioManagedBuffer.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "org\/apache\/spark\/network\/buffer\/NioManagedBuffer.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "org\/apache\/spark\/network\/buffer\/NioManagedBuffer.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "org\/apache\/spark\/network\/buffer\/NioManagedBuffer.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "org\/apache\/spark\/network\/buffer\/NioManagedBuffer.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "org\/apache\/spark\/network\/buffer\/NioManagedBuffer.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "org\/apache\/spark\/network\/buffer\/NioManagedBuffer.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "org\/apache\/spark\/network\/buffer\/NioManagedBuffer.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "org\/apache\/spark\/network\/buffer\/NioManagedBuffer.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "org\/apache\/spark\/network\/buffer\/NioManagedBuffer.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "org\/apache\/spark\/network\/buffer\/NioManagedBuffer.html#notify():Unit", "kind" : "final def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "org\/apache\/spark\/network\/buffer\/NioManagedBuffer.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.equals", "link" : "org\/apache\/spark\/network\/buffer\/NioManagedBuffer.html#equals(x$1:Any):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "org\/apache\/spark\/network\/buffer\/NioManagedBuffer.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_]", "member" : "scala.AnyRef.getClass", "link" : "org\/apache\/spark\/network\/buffer\/NioManagedBuffer.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "org\/apache\/spark\/network\/buffer\/NioManagedBuffer.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "org\/apache\/spark\/network\/buffer\/NioManagedBuffer.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "class" : "org\/apache\/spark\/network\/buffer\/NioManagedBuffer.html", "kind" : "class"}], "org.apache.spark.network.util" : [{"name" : "org.apache.spark.network.util.AbstractFileRegion", "shortDescription" : "", "members_class" : [{"label" : "touch", "tail" : "(o: Any): AbstractFileRegion", "member" : "org.apache.spark.network.util.AbstractFileRegion.touch", "link" : "org\/apache\/spark\/network\/util\/AbstractFileRegion.html#touch(o:Any):org.apache.spark.network.util.AbstractFileRegion", "kind" : "def"}, {"label" : "touch", "tail" : "(): AbstractFileRegion", "member" : "org.apache.spark.network.util.AbstractFileRegion.touch", "link" : "org\/apache\/spark\/network\/util\/AbstractFileRegion.html#touch():org.apache.spark.network.util.AbstractFileRegion", "kind" : "def"}, {"label" : "retain", "tail" : "(increment: Int): AbstractFileRegion", "member" : "org.apache.spark.network.util.AbstractFileRegion.retain", "link" : "org\/apache\/spark\/network\/util\/AbstractFileRegion.html#retain(increment:Int):org.apache.spark.network.util.AbstractFileRegion", "kind" : "def"}, {"label" : "retain", "tail" : "(): AbstractFileRegion", "member" : "org.apache.spark.network.util.AbstractFileRegion.retain", "link" : "org\/apache\/spark\/network\/util\/AbstractFileRegion.html#retain():org.apache.spark.network.util.AbstractFileRegion", "kind" : "def"}, {"label" : "transfered", "tail" : "(): Long", "member" : "org.apache.spark.network.util.AbstractFileRegion.transfered", "link" : "org\/apache\/spark\/network\/util\/AbstractFileRegion.html#transfered():Long", "kind" : "final def"}, {"member" : "org.apache.spark.network.util.AbstractFileRegion#<init>", "error" : "unsupported entity"}, {"label" : "release", "tail" : "(arg0: Int): Boolean", "member" : "io.netty.util.AbstractReferenceCounted.release", "link" : "org\/apache\/spark\/network\/util\/AbstractFileRegion.html#release(x$1:Int):Boolean", "kind" : "def"}, {"label" : "release", "tail" : "(): Boolean", "member" : "io.netty.util.AbstractReferenceCounted.release", "link" : "org\/apache\/spark\/network\/util\/AbstractFileRegion.html#release():Boolean", "kind" : "def"}, {"label" : "setRefCnt", "tail" : "(arg0: Int): Unit", "member" : "io.netty.util.AbstractReferenceCounted.setRefCnt", "link" : "org\/apache\/spark\/network\/util\/AbstractFileRegion.html#setRefCnt(x$1:Int):Unit", "kind" : "final def"}, {"label" : "refCnt", "tail" : "(): Int", "member" : "io.netty.util.AbstractReferenceCounted.refCnt", "link" : "org\/apache\/spark\/network\/util\/AbstractFileRegion.html#refCnt():Int", "kind" : "def"}, {"label" : "synchronized", "tail" : "(arg0: â‡’ T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "org\/apache\/spark\/network\/util\/AbstractFileRegion.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "org\/apache\/spark\/network\/util\/AbstractFileRegion.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "org\/apache\/spark\/network\/util\/AbstractFileRegion.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "org\/apache\/spark\/network\/util\/AbstractFileRegion.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "org\/apache\/spark\/network\/util\/AbstractFileRegion.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "org\/apache\/spark\/network\/util\/AbstractFileRegion.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "org\/apache\/spark\/network\/util\/AbstractFileRegion.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "org\/apache\/spark\/network\/util\/AbstractFileRegion.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "org\/apache\/spark\/network\/util\/AbstractFileRegion.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "org\/apache\/spark\/network\/util\/AbstractFileRegion.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "org\/apache\/spark\/network\/util\/AbstractFileRegion.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "org\/apache\/spark\/network\/util\/AbstractFileRegion.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "org\/apache\/spark\/network\/util\/AbstractFileRegion.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "org\/apache\/spark\/network\/util\/AbstractFileRegion.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.equals", "link" : "org\/apache\/spark\/network\/util\/AbstractFileRegion.html#equals(x$1:Any):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "org\/apache\/spark\/network\/util\/AbstractFileRegion.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_]", "member" : "scala.AnyRef.getClass", "link" : "org\/apache\/spark\/network\/util\/AbstractFileRegion.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "org\/apache\/spark\/network\/util\/AbstractFileRegion.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "org\/apache\/spark\/network\/util\/AbstractFileRegion.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}, {"label" : "transferTo", "tail" : "(arg0: WritableByteChannel, arg1: Long): Long", "member" : "io.netty.channel.FileRegion.transferTo", "link" : "org\/apache\/spark\/network\/util\/AbstractFileRegion.html#transferTo(x$1:java.nio.channels.WritableByteChannel,x$2:Long):Long", "kind" : "abstract def"}, {"label" : "count", "tail" : "(): Long", "member" : "io.netty.channel.FileRegion.count", "link" : "org\/apache\/spark\/network\/util\/AbstractFileRegion.html#count():Long", "kind" : "abstract def"}, {"label" : "transferred", "tail" : "(): Long", "member" : "io.netty.channel.FileRegion.transferred", "link" : "org\/apache\/spark\/network\/util\/AbstractFileRegion.html#transferred():Long", "kind" : "abstract def"}, {"label" : "position", "tail" : "(): Long", "member" : "io.netty.channel.FileRegion.position", "link" : "org\/apache\/spark\/network\/util\/AbstractFileRegion.html#position():Long", "kind" : "abstract def"}, {"label" : "deallocate", "tail" : "(): Unit", "member" : "io.netty.util.AbstractReferenceCounted.deallocate", "link" : "org\/apache\/spark\/network\/util\/AbstractFileRegion.html#deallocate():Unit", "kind" : "abstract def"}], "class" : "org\/apache\/spark\/network\/util\/AbstractFileRegion.html", "kind" : "class"}, {"name" : "org.apache.spark.network.util.ByteArrayReadableChannel", "shortDescription" : "", "members_class" : [{"label" : "isOpen", "tail" : "(): Boolean", "member" : "org.apache.spark.network.util.ByteArrayReadableChannel.isOpen", "link" : "org\/apache\/spark\/network\/util\/ByteArrayReadableChannel.html#isOpen():Boolean", "kind" : "def"}, {"label" : "close", "tail" : "(): Unit", "member" : "org.apache.spark.network.util.ByteArrayReadableChannel.close", "link" : "org\/apache\/spark\/network\/util\/ByteArrayReadableChannel.html#close():Unit", "kind" : "def"}, {"label" : "read", "tail" : "(dst: ByteBuffer): Int", "member" : "org.apache.spark.network.util.ByteArrayReadableChannel.read", "link" : "org\/apache\/spark\/network\/util\/ByteArrayReadableChannel.html#read(dst:java.nio.ByteBuffer):Int", "kind" : "def"}, {"label" : "feedData", "tail" : "(buf: ByteBuf): Unit", "member" : "org.apache.spark.network.util.ByteArrayReadableChannel.feedData", "link" : "org\/apache\/spark\/network\/util\/ByteArrayReadableChannel.html#feedData(buf:io.netty.buffer.ByteBuf):Unit", "kind" : "def"}, {"member" : "org.apache.spark.network.util.ByteArrayReadableChannel#<init>", "error" : "unsupported entity"}, {"label" : "synchronized", "tail" : "(arg0: â‡’ T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "org\/apache\/spark\/network\/util\/ByteArrayReadableChannel.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "org\/apache\/spark\/network\/util\/ByteArrayReadableChannel.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "org\/apache\/spark\/network\/util\/ByteArrayReadableChannel.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "org\/apache\/spark\/network\/util\/ByteArrayReadableChannel.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "org\/apache\/spark\/network\/util\/ByteArrayReadableChannel.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "org\/apache\/spark\/network\/util\/ByteArrayReadableChannel.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "org\/apache\/spark\/network\/util\/ByteArrayReadableChannel.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "org\/apache\/spark\/network\/util\/ByteArrayReadableChannel.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "org\/apache\/spark\/network\/util\/ByteArrayReadableChannel.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "org\/apache\/spark\/network\/util\/ByteArrayReadableChannel.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "org\/apache\/spark\/network\/util\/ByteArrayReadableChannel.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "org\/apache\/spark\/network\/util\/ByteArrayReadableChannel.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "org\/apache\/spark\/network\/util\/ByteArrayReadableChannel.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "org\/apache\/spark\/network\/util\/ByteArrayReadableChannel.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.equals", "link" : "org\/apache\/spark\/network\/util\/ByteArrayReadableChannel.html#equals(x$1:Any):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "org\/apache\/spark\/network\/util\/ByteArrayReadableChannel.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_]", "member" : "scala.AnyRef.getClass", "link" : "org\/apache\/spark\/network\/util\/ByteArrayReadableChannel.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "org\/apache\/spark\/network\/util\/ByteArrayReadableChannel.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "org\/apache\/spark\/network\/util\/ByteArrayReadableChannel.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "class" : "org\/apache\/spark\/network\/util\/ByteArrayReadableChannel.html", "kind" : "class"}, {"name" : "org.apache.spark.network.util.ByteArrayWritableChannel", "shortDescription" : "A writable channel that stores the written data in a byte array in memory.", "members_class" : [{"label" : "isOpen", "tail" : "(): Boolean", "member" : "org.apache.spark.network.util.ByteArrayWritableChannel.isOpen", "link" : "org\/apache\/spark\/network\/util\/ByteArrayWritableChannel.html#isOpen():Boolean", "kind" : "def"}, {"label" : "close", "tail" : "(): Unit", "member" : "org.apache.spark.network.util.ByteArrayWritableChannel.close", "link" : "org\/apache\/spark\/network\/util\/ByteArrayWritableChannel.html#close():Unit", "kind" : "def"}, {"label" : "write", "tail" : "(src: ByteBuffer): Int", "member" : "org.apache.spark.network.util.ByteArrayWritableChannel.write", "link" : "org\/apache\/spark\/network\/util\/ByteArrayWritableChannel.html#write(src:java.nio.ByteBuffer):Int", "kind" : "def"}, {"label" : "reset", "tail" : "(): Unit", "member" : "org.apache.spark.network.util.ByteArrayWritableChannel.reset", "link" : "org\/apache\/spark\/network\/util\/ByteArrayWritableChannel.html#reset():Unit", "kind" : "def"}, {"label" : "length", "tail" : "(): Int", "member" : "org.apache.spark.network.util.ByteArrayWritableChannel.length", "link" : "org\/apache\/spark\/network\/util\/ByteArrayWritableChannel.html#length():Int", "kind" : "def"}, {"label" : "getData", "tail" : "(): Array[Byte]", "member" : "org.apache.spark.network.util.ByteArrayWritableChannel.getData", "link" : "org\/apache\/spark\/network\/util\/ByteArrayWritableChannel.html#getData():Array[Byte]", "kind" : "def"}, {"member" : "org.apache.spark.network.util.ByteArrayWritableChannel#<init>", "error" : "unsupported entity"}, {"label" : "synchronized", "tail" : "(arg0: â‡’ T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "org\/apache\/spark\/network\/util\/ByteArrayWritableChannel.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "org\/apache\/spark\/network\/util\/ByteArrayWritableChannel.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "org\/apache\/spark\/network\/util\/ByteArrayWritableChannel.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "org\/apache\/spark\/network\/util\/ByteArrayWritableChannel.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "org\/apache\/spark\/network\/util\/ByteArrayWritableChannel.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "org\/apache\/spark\/network\/util\/ByteArrayWritableChannel.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "org\/apache\/spark\/network\/util\/ByteArrayWritableChannel.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "org\/apache\/spark\/network\/util\/ByteArrayWritableChannel.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "org\/apache\/spark\/network\/util\/ByteArrayWritableChannel.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "org\/apache\/spark\/network\/util\/ByteArrayWritableChannel.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "org\/apache\/spark\/network\/util\/ByteArrayWritableChannel.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "org\/apache\/spark\/network\/util\/ByteArrayWritableChannel.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "org\/apache\/spark\/network\/util\/ByteArrayWritableChannel.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "org\/apache\/spark\/network\/util\/ByteArrayWritableChannel.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.equals", "link" : "org\/apache\/spark\/network\/util\/ByteArrayWritableChannel.html#equals(x$1:Any):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "org\/apache\/spark\/network\/util\/ByteArrayWritableChannel.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_]", "member" : "scala.AnyRef.getClass", "link" : "org\/apache\/spark\/network\/util\/ByteArrayWritableChannel.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "org\/apache\/spark\/network\/util\/ByteArrayWritableChannel.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "org\/apache\/spark\/network\/util\/ByteArrayWritableChannel.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "class" : "org\/apache\/spark\/network\/util\/ByteArrayWritableChannel.html", "kind" : "class"}, {"name" : "org.apache.spark.network.util.ByteUnit", "shortDescription" : "", "members_class" : [{"label" : "toPiB", "tail" : "(d: Long): Long", "member" : "org.apache.spark.network.util.ByteUnit.toPiB", "link" : "org\/apache\/spark\/network\/util\/ByteUnit.html#toPiB(d:Long):Long", "kind" : "def"}, {"label" : "toTiB", "tail" : "(d: Long): Long", "member" : "org.apache.spark.network.util.ByteUnit.toTiB", "link" : "org\/apache\/spark\/network\/util\/ByteUnit.html#toTiB(d:Long):Long", "kind" : "def"}, {"label" : "toGiB", "tail" : "(d: Long): Long", "member" : "org.apache.spark.network.util.ByteUnit.toGiB", "link" : "org\/apache\/spark\/network\/util\/ByteUnit.html#toGiB(d:Long):Long", "kind" : "def"}, {"label" : "toMiB", "tail" : "(d: Long): Long", "member" : "org.apache.spark.network.util.ByteUnit.toMiB", "link" : "org\/apache\/spark\/network\/util\/ByteUnit.html#toMiB(d:Long):Long", "kind" : "def"}, {"label" : "toKiB", "tail" : "(d: Long): Long", "member" : "org.apache.spark.network.util.ByteUnit.toKiB", "link" : "org\/apache\/spark\/network\/util\/ByteUnit.html#toKiB(d:Long):Long", "kind" : "def"}, {"label" : "toBytes", "tail" : "(d: Long): Long", "member" : "org.apache.spark.network.util.ByteUnit.toBytes", "link" : "org\/apache\/spark\/network\/util\/ByteUnit.html#toBytes(d:Long):Long", "kind" : "def"}, {"label" : "convertTo", "tail" : "(d: Long, u: ByteUnit): Long", "member" : "org.apache.spark.network.util.ByteUnit.convertTo", "link" : "org\/apache\/spark\/network\/util\/ByteUnit.html#convertTo(d:Long,u:org.apache.spark.network.util.ByteUnit):Long", "kind" : "def"}, {"label" : "convertFrom", "tail" : "(d: Long, u: ByteUnit): Long", "member" : "org.apache.spark.network.util.ByteUnit.convertFrom", "link" : "org\/apache\/spark\/network\/util\/ByteUnit.html#convertFrom(d:Long,u:org.apache.spark.network.util.ByteUnit):Long", "kind" : "def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "java.lang.Enum.finalize", "link" : "org\/apache\/spark\/network\/util\/ByteUnit.html#finalize():Unit", "kind" : "final def"}, {"label" : "getDeclaringClass", "tail" : "(): Class[ByteUnit]", "member" : "java.lang.Enum.getDeclaringClass", "link" : "org\/apache\/spark\/network\/util\/ByteUnit.html#getDeclaringClass():Class[E]", "kind" : "final def"}, {"label" : "compareTo", "tail" : "(arg0: ByteUnit): Int", "member" : "java.lang.Enum.compareTo", "link" : "org\/apache\/spark\/network\/util\/ByteUnit.html#compareTo(x$1:E):Int", "kind" : "final def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "java.lang.Enum.clone", "link" : "org\/apache\/spark\/network\/util\/ByteUnit.html#clone():Object", "kind" : "final def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "java.lang.Enum.hashCode", "link" : "org\/apache\/spark\/network\/util\/ByteUnit.html#hashCode():Int", "kind" : "final def"}, {"label" : "equals", "tail" : "(arg0: Any): Boolean", "member" : "java.lang.Enum.equals", "link" : "org\/apache\/spark\/network\/util\/ByteUnit.html#equals(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "java.lang.Enum.toString", "link" : "org\/apache\/spark\/network\/util\/ByteUnit.html#toString():String", "kind" : "def"}, {"label" : "ordinal", "tail" : "(): Int", "member" : "java.lang.Enum.ordinal", "link" : "org\/apache\/spark\/network\/util\/ByteUnit.html#ordinal():Int", "kind" : "final def"}, {"label" : "name", "tail" : "(): String", "member" : "java.lang.Enum.name", "link" : "org\/apache\/spark\/network\/util\/ByteUnit.html#name():String", "kind" : "final def"}, {"label" : "synchronized", "tail" : "(arg0: â‡’ T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "org\/apache\/spark\/network\/util\/ByteUnit.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "org\/apache\/spark\/network\/util\/ByteUnit.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "org\/apache\/spark\/network\/util\/ByteUnit.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "org\/apache\/spark\/network\/util\/ByteUnit.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "org\/apache\/spark\/network\/util\/ByteUnit.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "org\/apache\/spark\/network\/util\/ByteUnit.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "org\/apache\/spark\/network\/util\/ByteUnit.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "org\/apache\/spark\/network\/util\/ByteUnit.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "org\/apache\/spark\/network\/util\/ByteUnit.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "org\/apache\/spark\/network\/util\/ByteUnit.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "org\/apache\/spark\/network\/util\/ByteUnit.html#notify():Unit", "kind" : "final def"}, {"label" : "getClass", "tail" : "(): Class[_]", "member" : "scala.AnyRef.getClass", "link" : "org\/apache\/spark\/network\/util\/ByteUnit.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "org\/apache\/spark\/network\/util\/ByteUnit.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "org\/apache\/spark\/network\/util\/ByteUnit.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "class" : "org\/apache\/spark\/network\/util\/ByteUnit.html", "kind" : "class"}, {"name" : "org.apache.spark.network.util.ConfigProvider", "shortDescription" : "Provides a mechanism for constructing a TransportConf using some sort of configuration.", "members_class" : [{"label" : "getBoolean", "tail" : "(name: String, defaultValue: Boolean): Boolean", "member" : "org.apache.spark.network.util.ConfigProvider.getBoolean", "link" : "org\/apache\/spark\/network\/util\/ConfigProvider.html#getBoolean(name:String,defaultValue:Boolean):Boolean", "kind" : "def"}, {"label" : "getDouble", "tail" : "(name: String, defaultValue: Double): Double", "member" : "org.apache.spark.network.util.ConfigProvider.getDouble", "link" : "org\/apache\/spark\/network\/util\/ConfigProvider.html#getDouble(name:String,defaultValue:Double):Double", "kind" : "def"}, {"label" : "getLong", "tail" : "(name: String, defaultValue: Long): Long", "member" : "org.apache.spark.network.util.ConfigProvider.getLong", "link" : "org\/apache\/spark\/network\/util\/ConfigProvider.html#getLong(name:String,defaultValue:Long):Long", "kind" : "def"}, {"label" : "getInt", "tail" : "(name: String, defaultValue: Int): Int", "member" : "org.apache.spark.network.util.ConfigProvider.getInt", "link" : "org\/apache\/spark\/network\/util\/ConfigProvider.html#getInt(name:String,defaultValue:Int):Int", "kind" : "def"}, {"label" : "get", "tail" : "(name: String, defaultValue: String): String", "member" : "org.apache.spark.network.util.ConfigProvider.get", "link" : "org\/apache\/spark\/network\/util\/ConfigProvider.html#get(name:String,defaultValue:String):String", "kind" : "def"}, {"member" : "org.apache.spark.network.util.ConfigProvider#<init>", "error" : "unsupported entity"}, {"label" : "synchronized", "tail" : "(arg0: â‡’ T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "org\/apache\/spark\/network\/util\/ConfigProvider.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "org\/apache\/spark\/network\/util\/ConfigProvider.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "org\/apache\/spark\/network\/util\/ConfigProvider.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "org\/apache\/spark\/network\/util\/ConfigProvider.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "org\/apache\/spark\/network\/util\/ConfigProvider.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "org\/apache\/spark\/network\/util\/ConfigProvider.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "org\/apache\/spark\/network\/util\/ConfigProvider.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "org\/apache\/spark\/network\/util\/ConfigProvider.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "org\/apache\/spark\/network\/util\/ConfigProvider.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "org\/apache\/spark\/network\/util\/ConfigProvider.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "org\/apache\/spark\/network\/util\/ConfigProvider.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "org\/apache\/spark\/network\/util\/ConfigProvider.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "org\/apache\/spark\/network\/util\/ConfigProvider.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "org\/apache\/spark\/network\/util\/ConfigProvider.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.equals", "link" : "org\/apache\/spark\/network\/util\/ConfigProvider.html#equals(x$1:Any):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "org\/apache\/spark\/network\/util\/ConfigProvider.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_]", "member" : "scala.AnyRef.getClass", "link" : "org\/apache\/spark\/network\/util\/ConfigProvider.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "org\/apache\/spark\/network\/util\/ConfigProvider.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "org\/apache\/spark\/network\/util\/ConfigProvider.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}, {"label" : "getAll", "tail" : "(): Iterable[Entry[String, String]]", "member" : "org.apache.spark.network.util.ConfigProvider.getAll", "link" : "org\/apache\/spark\/network\/util\/ConfigProvider.html#getAll():Iterable[java.util.Map.Entry[String,String]]", "kind" : "abstract def"}, {"label" : "get", "tail" : "(name: String): String", "member" : "org.apache.spark.network.util.ConfigProvider.get", "link" : "org\/apache\/spark\/network\/util\/ConfigProvider.html#get(name:String):String", "kind" : "abstract def"}], "class" : "org\/apache\/spark\/network\/util\/ConfigProvider.html", "kind" : "class"}, {"name" : "org.apache.spark.network.util.CryptoUtils", "shortDescription" : "Utility methods related to the commons-crypto library.", "members_class" : [{"member" : "org.apache.spark.network.util.CryptoUtils#<init>", "error" : "unsupported entity"}, {"label" : "synchronized", "tail" : "(arg0: â‡’ T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "org\/apache\/spark\/network\/util\/CryptoUtils.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "org\/apache\/spark\/network\/util\/CryptoUtils.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "org\/apache\/spark\/network\/util\/CryptoUtils.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "org\/apache\/spark\/network\/util\/CryptoUtils.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "org\/apache\/spark\/network\/util\/CryptoUtils.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "org\/apache\/spark\/network\/util\/CryptoUtils.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "org\/apache\/spark\/network\/util\/CryptoUtils.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "org\/apache\/spark\/network\/util\/CryptoUtils.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "org\/apache\/spark\/network\/util\/CryptoUtils.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "org\/apache\/spark\/network\/util\/CryptoUtils.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "org\/apache\/spark\/network\/util\/CryptoUtils.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "org\/apache\/spark\/network\/util\/CryptoUtils.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "org\/apache\/spark\/network\/util\/CryptoUtils.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "org\/apache\/spark\/network\/util\/CryptoUtils.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.equals", "link" : "org\/apache\/spark\/network\/util\/CryptoUtils.html#equals(x$1:Any):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "org\/apache\/spark\/network\/util\/CryptoUtils.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_]", "member" : "scala.AnyRef.getClass", "link" : "org\/apache\/spark\/network\/util\/CryptoUtils.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "org\/apache\/spark\/network\/util\/CryptoUtils.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "org\/apache\/spark\/network\/util\/CryptoUtils.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "class" : "org\/apache\/spark\/network\/util\/CryptoUtils.html", "kind" : "class"}, {"name" : "org.apache.spark.network.util.IOMode", "shortDescription" : "Selector for which form of low-level IO we should use.", "members_class" : [{"label" : "finalize", "tail" : "(): Unit", "member" : "java.lang.Enum.finalize", "link" : "org\/apache\/spark\/network\/util\/IOMode.html#finalize():Unit", "kind" : "final def"}, {"label" : "getDeclaringClass", "tail" : "(): Class[IOMode]", "member" : "java.lang.Enum.getDeclaringClass", "link" : "org\/apache\/spark\/network\/util\/IOMode.html#getDeclaringClass():Class[E]", "kind" : "final def"}, {"label" : "compareTo", "tail" : "(arg0: IOMode): Int", "member" : "java.lang.Enum.compareTo", "link" : "org\/apache\/spark\/network\/util\/IOMode.html#compareTo(x$1:E):Int", "kind" : "final def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "java.lang.Enum.clone", "link" : "org\/apache\/spark\/network\/util\/IOMode.html#clone():Object", "kind" : "final def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "java.lang.Enum.hashCode", "link" : "org\/apache\/spark\/network\/util\/IOMode.html#hashCode():Int", "kind" : "final def"}, {"label" : "equals", "tail" : "(arg0: Any): Boolean", "member" : "java.lang.Enum.equals", "link" : "org\/apache\/spark\/network\/util\/IOMode.html#equals(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "java.lang.Enum.toString", "link" : "org\/apache\/spark\/network\/util\/IOMode.html#toString():String", "kind" : "def"}, {"label" : "ordinal", "tail" : "(): Int", "member" : "java.lang.Enum.ordinal", "link" : "org\/apache\/spark\/network\/util\/IOMode.html#ordinal():Int", "kind" : "final def"}, {"label" : "name", "tail" : "(): String", "member" : "java.lang.Enum.name", "link" : "org\/apache\/spark\/network\/util\/IOMode.html#name():String", "kind" : "final def"}, {"label" : "synchronized", "tail" : "(arg0: â‡’ T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "org\/apache\/spark\/network\/util\/IOMode.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "org\/apache\/spark\/network\/util\/IOMode.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "org\/apache\/spark\/network\/util\/IOMode.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "org\/apache\/spark\/network\/util\/IOMode.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "org\/apache\/spark\/network\/util\/IOMode.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "org\/apache\/spark\/network\/util\/IOMode.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "org\/apache\/spark\/network\/util\/IOMode.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "org\/apache\/spark\/network\/util\/IOMode.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "org\/apache\/spark\/network\/util\/IOMode.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "org\/apache\/spark\/network\/util\/IOMode.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "org\/apache\/spark\/network\/util\/IOMode.html#notify():Unit", "kind" : "final def"}, {"label" : "getClass", "tail" : "(): Class[_]", "member" : "scala.AnyRef.getClass", "link" : "org\/apache\/spark\/network\/util\/IOMode.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "org\/apache\/spark\/network\/util\/IOMode.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "org\/apache\/spark\/network\/util\/IOMode.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "class" : "org\/apache\/spark\/network\/util\/IOMode.html", "kind" : "class"}, {"name" : "org.apache.spark.network.util.JavaUtils", "shortDescription" : "General utilities available in the network package.", "members_class" : [{"member" : "org.apache.spark.network.util.JavaUtils#<init>", "error" : "unsupported entity"}, {"label" : "synchronized", "tail" : "(arg0: â‡’ T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "org\/apache\/spark\/network\/util\/JavaUtils.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "org\/apache\/spark\/network\/util\/JavaUtils.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "org\/apache\/spark\/network\/util\/JavaUtils.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "org\/apache\/spark\/network\/util\/JavaUtils.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "org\/apache\/spark\/network\/util\/JavaUtils.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "org\/apache\/spark\/network\/util\/JavaUtils.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "org\/apache\/spark\/network\/util\/JavaUtils.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "org\/apache\/spark\/network\/util\/JavaUtils.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "org\/apache\/spark\/network\/util\/JavaUtils.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "org\/apache\/spark\/network\/util\/JavaUtils.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "org\/apache\/spark\/network\/util\/JavaUtils.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "org\/apache\/spark\/network\/util\/JavaUtils.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "org\/apache\/spark\/network\/util\/JavaUtils.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "org\/apache\/spark\/network\/util\/JavaUtils.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.equals", "link" : "org\/apache\/spark\/network\/util\/JavaUtils.html#equals(x$1:Any):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "org\/apache\/spark\/network\/util\/JavaUtils.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_]", "member" : "scala.AnyRef.getClass", "link" : "org\/apache\/spark\/network\/util\/JavaUtils.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "org\/apache\/spark\/network\/util\/JavaUtils.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "org\/apache\/spark\/network\/util\/JavaUtils.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "class" : "org\/apache\/spark\/network\/util\/JavaUtils.html", "kind" : "class"}, {"name" : "org.apache.spark.network.util.LevelDBProvider", "shortDescription" : "LevelDB utility class available in the network package.", "members_class" : [{"member" : "org.apache.spark.network.util.LevelDBProvider#<init>", "error" : "unsupported entity"}, {"label" : "synchronized", "tail" : "(arg0: â‡’ T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "org\/apache\/spark\/network\/util\/LevelDBProvider.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "org\/apache\/spark\/network\/util\/LevelDBProvider.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "org\/apache\/spark\/network\/util\/LevelDBProvider.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "org\/apache\/spark\/network\/util\/LevelDBProvider.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "org\/apache\/spark\/network\/util\/LevelDBProvider.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "org\/apache\/spark\/network\/util\/LevelDBProvider.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "org\/apache\/spark\/network\/util\/LevelDBProvider.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "org\/apache\/spark\/network\/util\/LevelDBProvider.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "org\/apache\/spark\/network\/util\/LevelDBProvider.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "org\/apache\/spark\/network\/util\/LevelDBProvider.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "org\/apache\/spark\/network\/util\/LevelDBProvider.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "org\/apache\/spark\/network\/util\/LevelDBProvider.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "org\/apache\/spark\/network\/util\/LevelDBProvider.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "org\/apache\/spark\/network\/util\/LevelDBProvider.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.equals", "link" : "org\/apache\/spark\/network\/util\/LevelDBProvider.html#equals(x$1:Any):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "org\/apache\/spark\/network\/util\/LevelDBProvider.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_]", "member" : "scala.AnyRef.getClass", "link" : "org\/apache\/spark\/network\/util\/LevelDBProvider.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "org\/apache\/spark\/network\/util\/LevelDBProvider.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "org\/apache\/spark\/network\/util\/LevelDBProvider.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "class" : "org\/apache\/spark\/network\/util\/LevelDBProvider.html", "kind" : "class"}, {"name" : "org.apache.spark.network.util.LimitedInputStream", "shortDescription" : "Wraps a InputStream, limiting the number of bytes which can be read.", "members_class" : [{"label" : "close", "tail" : "(): Unit", "member" : "org.apache.spark.network.util.LimitedInputStream.close", "link" : "org\/apache\/spark\/network\/util\/LimitedInputStream.html#close():Unit", "kind" : "def"}, {"label" : "skip", "tail" : "(n: Long): Long", "member" : "org.apache.spark.network.util.LimitedInputStream.skip", "link" : "org\/apache\/spark\/network\/util\/LimitedInputStream.html#skip(n:Long):Long", "kind" : "def"}, {"label" : "reset", "tail" : "(): Unit", "member" : "org.apache.spark.network.util.LimitedInputStream.reset", "link" : "org\/apache\/spark\/network\/util\/LimitedInputStream.html#reset():Unit", "kind" : "def"}, {"label" : "read", "tail" : "(b: Array[Byte], off: Int, len: Int): Int", "member" : "org.apache.spark.network.util.LimitedInputStream.read", "link" : "org\/apache\/spark\/network\/util\/LimitedInputStream.html#read(b:Array[Byte],off:Int,len:Int):Int", "kind" : "def"}, {"label" : "read", "tail" : "(): Int", "member" : "org.apache.spark.network.util.LimitedInputStream.read", "link" : "org\/apache\/spark\/network\/util\/LimitedInputStream.html#read():Int", "kind" : "def"}, {"label" : "mark", "tail" : "(readLimit: Int): Unit", "member" : "org.apache.spark.network.util.LimitedInputStream.mark", "link" : "org\/apache\/spark\/network\/util\/LimitedInputStream.html#mark(readLimit:Int):Unit", "kind" : "def"}, {"label" : "available", "tail" : "(): Int", "member" : "org.apache.spark.network.util.LimitedInputStream.available", "link" : "org\/apache\/spark\/network\/util\/LimitedInputStream.html#available():Int", "kind" : "def"}, {"member" : "org.apache.spark.network.util.LimitedInputStream#<init>", "error" : "unsupported entity"}, {"member" : "org.apache.spark.network.util.LimitedInputStream#<init>", "error" : "unsupported entity"}, {"label" : "markSupported", "tail" : "(): Boolean", "member" : "java.io.FilterInputStream.markSupported", "link" : "org\/apache\/spark\/network\/util\/LimitedInputStream.html#markSupported():Boolean", "kind" : "def"}, {"label" : "read", "tail" : "(arg0: Array[Byte]): Int", "member" : "java.io.FilterInputStream.read", "link" : "org\/apache\/spark\/network\/util\/LimitedInputStream.html#read(x$1:Array[Byte]):Int", "kind" : "def"}, {"label" : "synchronized", "tail" : "(arg0: â‡’ T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "org\/apache\/spark\/network\/util\/LimitedInputStream.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "org\/apache\/spark\/network\/util\/LimitedInputStream.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "org\/apache\/spark\/network\/util\/LimitedInputStream.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "org\/apache\/spark\/network\/util\/LimitedInputStream.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "org\/apache\/spark\/network\/util\/LimitedInputStream.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "org\/apache\/spark\/network\/util\/LimitedInputStream.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "org\/apache\/spark\/network\/util\/LimitedInputStream.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "org\/apache\/spark\/network\/util\/LimitedInputStream.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "org\/apache\/spark\/network\/util\/LimitedInputStream.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "org\/apache\/spark\/network\/util\/LimitedInputStream.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "org\/apache\/spark\/network\/util\/LimitedInputStream.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "org\/apache\/spark\/network\/util\/LimitedInputStream.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "org\/apache\/spark\/network\/util\/LimitedInputStream.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "org\/apache\/spark\/network\/util\/LimitedInputStream.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.equals", "link" : "org\/apache\/spark\/network\/util\/LimitedInputStream.html#equals(x$1:Any):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "org\/apache\/spark\/network\/util\/LimitedInputStream.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_]", "member" : "scala.AnyRef.getClass", "link" : "org\/apache\/spark\/network\/util\/LimitedInputStream.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "org\/apache\/spark\/network\/util\/LimitedInputStream.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "org\/apache\/spark\/network\/util\/LimitedInputStream.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "class" : "org\/apache\/spark\/network\/util\/LimitedInputStream.html", "kind" : "class"}, {"name" : "org.apache.spark.network.util.MapConfigProvider", "shortDescription" : "ConfigProvider based on a Map (copied in the constructor).", "members_class" : [{"label" : "getAll", "tail" : "(): Iterable[Entry[String, String]]", "member" : "org.apache.spark.network.util.MapConfigProvider.getAll", "link" : "org\/apache\/spark\/network\/util\/MapConfigProvider.html#getAll():Iterable[java.util.Map.Entry[String,String]]", "kind" : "def"}, {"label" : "get", "tail" : "(name: String, defaultValue: String): String", "member" : "org.apache.spark.network.util.MapConfigProvider.get", "link" : "org\/apache\/spark\/network\/util\/MapConfigProvider.html#get(name:String,defaultValue:String):String", "kind" : "def"}, {"label" : "get", "tail" : "(name: String): String", "member" : "org.apache.spark.network.util.MapConfigProvider.get", "link" : "org\/apache\/spark\/network\/util\/MapConfigProvider.html#get(name:String):String", "kind" : "def"}, {"member" : "org.apache.spark.network.util.MapConfigProvider#<init>", "error" : "unsupported entity"}, {"label" : "getBoolean", "tail" : "(name: String, defaultValue: Boolean): Boolean", "member" : "org.apache.spark.network.util.ConfigProvider.getBoolean", "link" : "org\/apache\/spark\/network\/util\/MapConfigProvider.html#getBoolean(name:String,defaultValue:Boolean):Boolean", "kind" : "def"}, {"label" : "getDouble", "tail" : "(name: String, defaultValue: Double): Double", "member" : "org.apache.spark.network.util.ConfigProvider.getDouble", "link" : "org\/apache\/spark\/network\/util\/MapConfigProvider.html#getDouble(name:String,defaultValue:Double):Double", "kind" : "def"}, {"label" : "getLong", "tail" : "(name: String, defaultValue: Long): Long", "member" : "org.apache.spark.network.util.ConfigProvider.getLong", "link" : "org\/apache\/spark\/network\/util\/MapConfigProvider.html#getLong(name:String,defaultValue:Long):Long", "kind" : "def"}, {"label" : "getInt", "tail" : "(name: String, defaultValue: Int): Int", "member" : "org.apache.spark.network.util.ConfigProvider.getInt", "link" : "org\/apache\/spark\/network\/util\/MapConfigProvider.html#getInt(name:String,defaultValue:Int):Int", "kind" : "def"}, {"label" : "synchronized", "tail" : "(arg0: â‡’ T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "org\/apache\/spark\/network\/util\/MapConfigProvider.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "org\/apache\/spark\/network\/util\/MapConfigProvider.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "org\/apache\/spark\/network\/util\/MapConfigProvider.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "org\/apache\/spark\/network\/util\/MapConfigProvider.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "org\/apache\/spark\/network\/util\/MapConfigProvider.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "org\/apache\/spark\/network\/util\/MapConfigProvider.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "org\/apache\/spark\/network\/util\/MapConfigProvider.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "org\/apache\/spark\/network\/util\/MapConfigProvider.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "org\/apache\/spark\/network\/util\/MapConfigProvider.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "org\/apache\/spark\/network\/util\/MapConfigProvider.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "org\/apache\/spark\/network\/util\/MapConfigProvider.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "org\/apache\/spark\/network\/util\/MapConfigProvider.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "org\/apache\/spark\/network\/util\/MapConfigProvider.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "org\/apache\/spark\/network\/util\/MapConfigProvider.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.equals", "link" : "org\/apache\/spark\/network\/util\/MapConfigProvider.html#equals(x$1:Any):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "org\/apache\/spark\/network\/util\/MapConfigProvider.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_]", "member" : "scala.AnyRef.getClass", "link" : "org\/apache\/spark\/network\/util\/MapConfigProvider.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "org\/apache\/spark\/network\/util\/MapConfigProvider.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "org\/apache\/spark\/network\/util\/MapConfigProvider.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "class" : "org\/apache\/spark\/network\/util\/MapConfigProvider.html", "kind" : "class"}, {"name" : "org.apache.spark.network.util.NettyMemoryMetrics", "shortDescription" : "A Netty memory metrics class to collect metrics from Netty PooledByteBufAllocator.", "members_class" : [{"label" : "getMetrics", "tail" : "(): Map[String, Metric]", "member" : "org.apache.spark.network.util.NettyMemoryMetrics.getMetrics", "link" : "org\/apache\/spark\/network\/util\/NettyMemoryMetrics.html#getMetrics():java.util.Map[String,com.codahale.metrics.Metric]", "kind" : "def"}, {"member" : "org.apache.spark.network.util.NettyMemoryMetrics#<init>", "error" : "unsupported entity"}, {"label" : "synchronized", "tail" : "(arg0: â‡’ T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "org\/apache\/spark\/network\/util\/NettyMemoryMetrics.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "org\/apache\/spark\/network\/util\/NettyMemoryMetrics.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "org\/apache\/spark\/network\/util\/NettyMemoryMetrics.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "org\/apache\/spark\/network\/util\/NettyMemoryMetrics.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "org\/apache\/spark\/network\/util\/NettyMemoryMetrics.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "org\/apache\/spark\/network\/util\/NettyMemoryMetrics.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "org\/apache\/spark\/network\/util\/NettyMemoryMetrics.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "org\/apache\/spark\/network\/util\/NettyMemoryMetrics.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "org\/apache\/spark\/network\/util\/NettyMemoryMetrics.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "org\/apache\/spark\/network\/util\/NettyMemoryMetrics.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "org\/apache\/spark\/network\/util\/NettyMemoryMetrics.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "org\/apache\/spark\/network\/util\/NettyMemoryMetrics.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "org\/apache\/spark\/network\/util\/NettyMemoryMetrics.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "org\/apache\/spark\/network\/util\/NettyMemoryMetrics.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.equals", "link" : "org\/apache\/spark\/network\/util\/NettyMemoryMetrics.html#equals(x$1:Any):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "org\/apache\/spark\/network\/util\/NettyMemoryMetrics.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_]", "member" : "scala.AnyRef.getClass", "link" : "org\/apache\/spark\/network\/util\/NettyMemoryMetrics.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "org\/apache\/spark\/network\/util\/NettyMemoryMetrics.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "org\/apache\/spark\/network\/util\/NettyMemoryMetrics.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "class" : "org\/apache\/spark\/network\/util\/NettyMemoryMetrics.html", "kind" : "class"}, {"name" : "org.apache.spark.network.util.NettyUtils", "shortDescription" : "Utilities for creating various Netty constructs based on whether we're using EPOLL or NIO.", "members_class" : [{"member" : "org.apache.spark.network.util.NettyUtils#<init>", "error" : "unsupported entity"}, {"label" : "synchronized", "tail" : "(arg0: â‡’ T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "org\/apache\/spark\/network\/util\/NettyUtils.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "org\/apache\/spark\/network\/util\/NettyUtils.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "org\/apache\/spark\/network\/util\/NettyUtils.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "org\/apache\/spark\/network\/util\/NettyUtils.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "org\/apache\/spark\/network\/util\/NettyUtils.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "org\/apache\/spark\/network\/util\/NettyUtils.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "org\/apache\/spark\/network\/util\/NettyUtils.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "org\/apache\/spark\/network\/util\/NettyUtils.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "org\/apache\/spark\/network\/util\/NettyUtils.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "org\/apache\/spark\/network\/util\/NettyUtils.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "org\/apache\/spark\/network\/util\/NettyUtils.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "org\/apache\/spark\/network\/util\/NettyUtils.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "org\/apache\/spark\/network\/util\/NettyUtils.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "org\/apache\/spark\/network\/util\/NettyUtils.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.equals", "link" : "org\/apache\/spark\/network\/util\/NettyUtils.html#equals(x$1:Any):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "org\/apache\/spark\/network\/util\/NettyUtils.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_]", "member" : "scala.AnyRef.getClass", "link" : "org\/apache\/spark\/network\/util\/NettyUtils.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "org\/apache\/spark\/network\/util\/NettyUtils.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "org\/apache\/spark\/network\/util\/NettyUtils.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "class" : "org\/apache\/spark\/network\/util\/NettyUtils.html", "kind" : "class"}, {"name" : "org.apache.spark.network.util.TimerWithCustomTimeUnit", "shortDescription" : "A custom version of a Timer which allows for specifying a specific TimeUnit tobe used when accessing timing values via #getSnapshot().", "members_class" : [{"label" : "getSnapshot", "tail" : "(): Snapshot", "member" : "org.apache.spark.network.util.TimerWithCustomTimeUnit.getSnapshot", "link" : "org\/apache\/spark\/network\/util\/TimerWithCustomTimeUnit.html#getSnapshot():com.codahale.metrics.Snapshot", "kind" : "def"}, {"member" : "org.apache.spark.network.util.TimerWithCustomTimeUnit#<init>", "error" : "unsupported entity"}, {"label" : "getOneMinuteRate", "tail" : "(): Double", "member" : "com.codahale.metrics.Timer.getOneMinuteRate", "link" : "org\/apache\/spark\/network\/util\/TimerWithCustomTimeUnit.html#getOneMinuteRate():Double", "kind" : "def"}, {"label" : "getMeanRate", "tail" : "(): Double", "member" : "com.codahale.metrics.Timer.getMeanRate", "link" : "org\/apache\/spark\/network\/util\/TimerWithCustomTimeUnit.html#getMeanRate():Double", "kind" : "def"}, {"label" : "getFiveMinuteRate", "tail" : "(): Double", "member" : "com.codahale.metrics.Timer.getFiveMinuteRate", "link" : "org\/apache\/spark\/network\/util\/TimerWithCustomTimeUnit.html#getFiveMinuteRate():Double", "kind" : "def"}, {"label" : "getFifteenMinuteRate", "tail" : "(): Double", "member" : "com.codahale.metrics.Timer.getFifteenMinuteRate", "link" : "org\/apache\/spark\/network\/util\/TimerWithCustomTimeUnit.html#getFifteenMinuteRate():Double", "kind" : "def"}, {"label" : "getCount", "tail" : "(): Long", "member" : "com.codahale.metrics.Timer.getCount", "link" : "org\/apache\/spark\/network\/util\/TimerWithCustomTimeUnit.html#getCount():Long", "kind" : "def"}, {"label" : "time", "tail" : "(): Context", "member" : "com.codahale.metrics.Timer.time", "link" : "org\/apache\/spark\/network\/util\/TimerWithCustomTimeUnit.html#time():com.codahale.metrics.Timer.Context", "kind" : "def"}, {"label" : "time", "tail" : "(arg0: Runnable): Unit", "member" : "com.codahale.metrics.Timer.time", "link" : "org\/apache\/spark\/network\/util\/TimerWithCustomTimeUnit.html#time(x$1:Runnable):Unit", "kind" : "def"}, {"label" : "timeSupplier", "tail" : "(arg0: Supplier[T]): T", "member" : "com.codahale.metrics.Timer.timeSupplier", "link" : "org\/apache\/spark\/network\/util\/TimerWithCustomTimeUnit.html#timeSupplier[T](x$1:java.util.function.Supplier[T]):T", "kind" : "def"}, {"label" : "time", "tail" : "(arg0: Callable[T]): T", "member" : "com.codahale.metrics.Timer.time", "link" : "org\/apache\/spark\/network\/util\/TimerWithCustomTimeUnit.html#time[T](x$1:java.util.concurrent.Callable[T]):T", "kind" : "def"}, {"label" : "update", "tail" : "(arg0: Duration): Unit", "member" : "com.codahale.metrics.Timer.update", "link" : "org\/apache\/spark\/network\/util\/TimerWithCustomTimeUnit.html#update(x$1:java.time.Duration):Unit", "kind" : "def"}, {"label" : "update", "tail" : "(arg0: Long, arg1: TimeUnit): Unit", "member" : "com.codahale.metrics.Timer.update", "link" : "org\/apache\/spark\/network\/util\/TimerWithCustomTimeUnit.html#update(x$1:Long,x$2:java.util.concurrent.TimeUnit):Unit", "kind" : "def"}, {"label" : "synchronized", "tail" : "(arg0: â‡’ T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "org\/apache\/spark\/network\/util\/TimerWithCustomTimeUnit.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "org\/apache\/spark\/network\/util\/TimerWithCustomTimeUnit.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "org\/apache\/spark\/network\/util\/TimerWithCustomTimeUnit.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "org\/apache\/spark\/network\/util\/TimerWithCustomTimeUnit.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "org\/apache\/spark\/network\/util\/TimerWithCustomTimeUnit.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "org\/apache\/spark\/network\/util\/TimerWithCustomTimeUnit.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "org\/apache\/spark\/network\/util\/TimerWithCustomTimeUnit.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "org\/apache\/spark\/network\/util\/TimerWithCustomTimeUnit.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "org\/apache\/spark\/network\/util\/TimerWithCustomTimeUnit.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "org\/apache\/spark\/network\/util\/TimerWithCustomTimeUnit.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "org\/apache\/spark\/network\/util\/TimerWithCustomTimeUnit.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "org\/apache\/spark\/network\/util\/TimerWithCustomTimeUnit.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "org\/apache\/spark\/network\/util\/TimerWithCustomTimeUnit.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "org\/apache\/spark\/network\/util\/TimerWithCustomTimeUnit.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.equals", "link" : "org\/apache\/spark\/network\/util\/TimerWithCustomTimeUnit.html#equals(x$1:Any):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "org\/apache\/spark\/network\/util\/TimerWithCustomTimeUnit.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_]", "member" : "scala.AnyRef.getClass", "link" : "org\/apache\/spark\/network\/util\/TimerWithCustomTimeUnit.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "org\/apache\/spark\/network\/util\/TimerWithCustomTimeUnit.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "org\/apache\/spark\/network\/util\/TimerWithCustomTimeUnit.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "class" : "org\/apache\/spark\/network\/util\/TimerWithCustomTimeUnit.html", "kind" : "class"}, {"name" : "org.apache.spark.network.util.TransportConf", "shortDescription" : "A central location that tracks all the settings we expose to users.", "members_class" : [{"label" : "ioExceptionsThresholdDuringMerge", "tail" : "(): Int", "member" : "org.apache.spark.network.util.TransportConf.ioExceptionsThresholdDuringMerge", "link" : "org\/apache\/spark\/network\/util\/TransportConf.html#ioExceptionsThresholdDuringMerge():Int", "kind" : "def"}, {"label" : "mergedIndexCacheSize", "tail" : "(): Long", "member" : "org.apache.spark.network.util.TransportConf.mergedIndexCacheSize", "link" : "org\/apache\/spark\/network\/util\/TransportConf.html#mergedIndexCacheSize():Long", "kind" : "def"}, {"label" : "minChunkSizeInMergedShuffleFile", "tail" : "(): Int", "member" : "org.apache.spark.network.util.TransportConf.minChunkSizeInMergedShuffleFile", "link" : "org\/apache\/spark\/network\/util\/TransportConf.html#minChunkSizeInMergedShuffleFile():Int", "kind" : "def"}, {"label" : "mergedShuffleFileManagerImpl", "tail" : "(): String", "member" : "org.apache.spark.network.util.TransportConf.mergedShuffleFileManagerImpl", "link" : "org\/apache\/spark\/network\/util\/TransportConf.html#mergedShuffleFileManagerImpl():String", "kind" : "def"}, {"label" : "useOldFetchProtocol", "tail" : "(): Boolean", "member" : "org.apache.spark.network.util.TransportConf.useOldFetchProtocol", "link" : "org\/apache\/spark\/network\/util\/TransportConf.html#useOldFetchProtocol():Boolean", "kind" : "def"}, {"label" : "separateChunkFetchRequest", "tail" : "(): Boolean", "member" : "org.apache.spark.network.util.TransportConf.separateChunkFetchRequest", "link" : "org\/apache\/spark\/network\/util\/TransportConf.html#separateChunkFetchRequest():Boolean", "kind" : "def"}, {"label" : "chunkFetchHandlerThreads", "tail" : "(): Int", "member" : "org.apache.spark.network.util.TransportConf.chunkFetchHandlerThreads", "link" : "org\/apache\/spark\/network\/util\/TransportConf.html#chunkFetchHandlerThreads():Int", "kind" : "def"}, {"label" : "maxChunksBeingTransferred", "tail" : "(): Long", "member" : "org.apache.spark.network.util.TransportConf.maxChunksBeingTransferred", "link" : "org\/apache\/spark\/network\/util\/TransportConf.html#maxChunksBeingTransferred():Long", "kind" : "def"}, {"label" : "cryptoConf", "tail" : "(): Properties", "member" : "org.apache.spark.network.util.TransportConf.cryptoConf", "link" : "org\/apache\/spark\/network\/util\/TransportConf.html#cryptoConf():java.util.Properties", "kind" : "def"}, {"label" : "preferDirectBufsForSharedByteBufAllocators", "tail" : "(): Boolean", "member" : "org.apache.spark.network.util.TransportConf.preferDirectBufsForSharedByteBufAllocators", "link" : "org\/apache\/spark\/network\/util\/TransportConf.html#preferDirectBufsForSharedByteBufAllocators():Boolean", "kind" : "def"}, {"label" : "sharedByteBufAllocators", "tail" : "(): Boolean", "member" : "org.apache.spark.network.util.TransportConf.sharedByteBufAllocators", "link" : "org\/apache\/spark\/network\/util\/TransportConf.html#sharedByteBufAllocators():Boolean", "kind" : "def"}, {"label" : "saslServerAlwaysEncrypt", "tail" : "(): Boolean", "member" : "org.apache.spark.network.util.TransportConf.saslServerAlwaysEncrypt", "link" : "org\/apache\/spark\/network\/util\/TransportConf.html#saslServerAlwaysEncrypt():Boolean", "kind" : "def"}, {"label" : "maxSaslEncryptedBlockSize", "tail" : "(): Int", "member" : "org.apache.spark.network.util.TransportConf.maxSaslEncryptedBlockSize", "link" : "org\/apache\/spark\/network\/util\/TransportConf.html#maxSaslEncryptedBlockSize():Int", "kind" : "def"}, {"label" : "saslEncryption", "tail" : "(): Boolean", "member" : "org.apache.spark.network.util.TransportConf.saslEncryption", "link" : "org\/apache\/spark\/network\/util\/TransportConf.html#saslEncryption():Boolean", "kind" : "def"}, {"label" : "saslFallback", "tail" : "(): Boolean", "member" : "org.apache.spark.network.util.TransportConf.saslFallback", "link" : "org\/apache\/spark\/network\/util\/TransportConf.html#saslFallback():Boolean", "kind" : "def"}, {"label" : "keyAlgorithm", "tail" : "(): String", "member" : "org.apache.spark.network.util.TransportConf.keyAlgorithm", "link" : "org\/apache\/spark\/network\/util\/TransportConf.html#keyAlgorithm():String", "kind" : "def"}, {"label" : "ivLength", "tail" : "(): Int", "member" : "org.apache.spark.network.util.TransportConf.ivLength", "link" : "org\/apache\/spark\/network\/util\/TransportConf.html#ivLength():Int", "kind" : "def"}, {"label" : "encryptionKeyLength", "tail" : "(): Int", "member" : "org.apache.spark.network.util.TransportConf.encryptionKeyLength", "link" : "org\/apache\/spark\/network\/util\/TransportConf.html#encryptionKeyLength():Int", "kind" : "def"}, {"label" : "keyFactoryIterations", "tail" : "(): Int", "member" : "org.apache.spark.network.util.TransportConf.keyFactoryIterations", "link" : "org\/apache\/spark\/network\/util\/TransportConf.html#keyFactoryIterations():Int", "kind" : "def"}, {"label" : "keyFactoryAlgorithm", "tail" : "(): String", "member" : "org.apache.spark.network.util.TransportConf.keyFactoryAlgorithm", "link" : "org\/apache\/spark\/network\/util\/TransportConf.html#keyFactoryAlgorithm():String", "kind" : "def"}, {"label" : "cipherTransformation", "tail" : "(): String", "member" : "org.apache.spark.network.util.TransportConf.cipherTransformation", "link" : "org\/apache\/spark\/network\/util\/TransportConf.html#cipherTransformation():String", "kind" : "def"}, {"label" : "encryptionEnabled", "tail" : "(): Boolean", "member" : "org.apache.spark.network.util.TransportConf.encryptionEnabled", "link" : "org\/apache\/spark\/network\/util\/TransportConf.html#encryptionEnabled():Boolean", "kind" : "def"}, {"label" : "portMaxRetries", "tail" : "(): Int", "member" : "org.apache.spark.network.util.TransportConf.portMaxRetries", "link" : "org\/apache\/spark\/network\/util\/TransportConf.html#portMaxRetries():Int", "kind" : "def"}, {"label" : "enableTcpKeepAlive", "tail" : "(): Boolean", "member" : "org.apache.spark.network.util.TransportConf.enableTcpKeepAlive", "link" : "org\/apache\/spark\/network\/util\/TransportConf.html#enableTcpKeepAlive():Boolean", "kind" : "def"}, {"label" : "verboseMetrics", "tail" : "(): Boolean", "member" : "org.apache.spark.network.util.TransportConf.verboseMetrics", "link" : "org\/apache\/spark\/network\/util\/TransportConf.html#verboseMetrics():Boolean", "kind" : "def"}, {"label" : "lazyFileDescriptor", "tail" : "(): Boolean", "member" : "org.apache.spark.network.util.TransportConf.lazyFileDescriptor", "link" : "org\/apache\/spark\/network\/util\/TransportConf.html#lazyFileDescriptor():Boolean", "kind" : "def"}, {"label" : "memoryMapBytes", "tail" : "(): Int", "member" : "org.apache.spark.network.util.TransportConf.memoryMapBytes", "link" : "org\/apache\/spark\/network\/util\/TransportConf.html#memoryMapBytes():Int", "kind" : "def"}, {"label" : "ioRetryWaitTimeMs", "tail" : "(): Int", "member" : "org.apache.spark.network.util.TransportConf.ioRetryWaitTimeMs", "link" : "org\/apache\/spark\/network\/util\/TransportConf.html#ioRetryWaitTimeMs():Int", "kind" : "def"}, {"label" : "maxIORetries", "tail" : "(): Int", "member" : "org.apache.spark.network.util.TransportConf.maxIORetries", "link" : "org\/apache\/spark\/network\/util\/TransportConf.html#maxIORetries():Int", "kind" : "def"}, {"label" : "authRTTimeoutMs", "tail" : "(): Int", "member" : "org.apache.spark.network.util.TransportConf.authRTTimeoutMs", "link" : "org\/apache\/spark\/network\/util\/TransportConf.html#authRTTimeoutMs():Int", "kind" : "def"}, {"label" : "sendBuf", "tail" : "(): Int", "member" : "org.apache.spark.network.util.TransportConf.sendBuf", "link" : "org\/apache\/spark\/network\/util\/TransportConf.html#sendBuf():Int", "kind" : "def"}, {"label" : "receiveBuf", "tail" : "(): Int", "member" : "org.apache.spark.network.util.TransportConf.receiveBuf", "link" : "org\/apache\/spark\/network\/util\/TransportConf.html#receiveBuf():Int", "kind" : "def"}, {"label" : "clientThreads", "tail" : "(): Int", "member" : "org.apache.spark.network.util.TransportConf.clientThreads", "link" : "org\/apache\/spark\/network\/util\/TransportConf.html#clientThreads():Int", "kind" : "def"}, {"label" : "serverThreads", "tail" : "(): Int", "member" : "org.apache.spark.network.util.TransportConf.serverThreads", "link" : "org\/apache\/spark\/network\/util\/TransportConf.html#serverThreads():Int", "kind" : "def"}, {"label" : "backLog", "tail" : "(): Int", "member" : "org.apache.spark.network.util.TransportConf.backLog", "link" : "org\/apache\/spark\/network\/util\/TransportConf.html#backLog():Int", "kind" : "def"}, {"label" : "numConnectionsPerPeer", "tail" : "(): Int", "member" : "org.apache.spark.network.util.TransportConf.numConnectionsPerPeer", "link" : "org\/apache\/spark\/network\/util\/TransportConf.html#numConnectionsPerPeer():Int", "kind" : "def"}, {"label" : "connectionCreationTimeoutMs", "tail" : "(): Int", "member" : "org.apache.spark.network.util.TransportConf.connectionCreationTimeoutMs", "link" : "org\/apache\/spark\/network\/util\/TransportConf.html#connectionCreationTimeoutMs():Int", "kind" : "def"}, {"label" : "connectionTimeoutMs", "tail" : "(): Int", "member" : "org.apache.spark.network.util.TransportConf.connectionTimeoutMs", "link" : "org\/apache\/spark\/network\/util\/TransportConf.html#connectionTimeoutMs():Int", "kind" : "def"}, {"label" : "preferDirectBufs", "tail" : "(): Boolean", "member" : "org.apache.spark.network.util.TransportConf.preferDirectBufs", "link" : "org\/apache\/spark\/network\/util\/TransportConf.html#preferDirectBufs():Boolean", "kind" : "def"}, {"label" : "ioMode", "tail" : "(): String", "member" : "org.apache.spark.network.util.TransportConf.ioMode", "link" : "org\/apache\/spark\/network\/util\/TransportConf.html#ioMode():String", "kind" : "def"}, {"label" : "getModuleName", "tail" : "(): String", "member" : "org.apache.spark.network.util.TransportConf.getModuleName", "link" : "org\/apache\/spark\/network\/util\/TransportConf.html#getModuleName():String", "kind" : "def"}, {"label" : "get", "tail" : "(name: String, defaultValue: String): String", "member" : "org.apache.spark.network.util.TransportConf.get", "link" : "org\/apache\/spark\/network\/util\/TransportConf.html#get(name:String,defaultValue:String):String", "kind" : "def"}, {"label" : "getInt", "tail" : "(name: String, defaultValue: Int): Int", "member" : "org.apache.spark.network.util.TransportConf.getInt", "link" : "org\/apache\/spark\/network\/util\/TransportConf.html#getInt(name:String,defaultValue:Int):Int", "kind" : "def"}, {"member" : "org.apache.spark.network.util.TransportConf#<init>", "error" : "unsupported entity"}, {"label" : "synchronized", "tail" : "(arg0: â‡’ T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "org\/apache\/spark\/network\/util\/TransportConf.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "org\/apache\/spark\/network\/util\/TransportConf.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "org\/apache\/spark\/network\/util\/TransportConf.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "org\/apache\/spark\/network\/util\/TransportConf.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "org\/apache\/spark\/network\/util\/TransportConf.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "org\/apache\/spark\/network\/util\/TransportConf.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "org\/apache\/spark\/network\/util\/TransportConf.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "org\/apache\/spark\/network\/util\/TransportConf.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "org\/apache\/spark\/network\/util\/TransportConf.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "org\/apache\/spark\/network\/util\/TransportConf.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "org\/apache\/spark\/network\/util\/TransportConf.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "org\/apache\/spark\/network\/util\/TransportConf.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "org\/apache\/spark\/network\/util\/TransportConf.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "org\/apache\/spark\/network\/util\/TransportConf.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.equals", "link" : "org\/apache\/spark\/network\/util\/TransportConf.html#equals(x$1:Any):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "org\/apache\/spark\/network\/util\/TransportConf.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_]", "member" : "scala.AnyRef.getClass", "link" : "org\/apache\/spark\/network\/util\/TransportConf.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "org\/apache\/spark\/network\/util\/TransportConf.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "org\/apache\/spark\/network\/util\/TransportConf.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "class" : "org\/apache\/spark\/network\/util\/TransportConf.html", "kind" : "class"}, {"name" : "org.apache.spark.network.util.TransportFrameDecoder", "shortDescription" : "A customized frame decoder that allows intercepting raw data.", "members_class" : [{"label" : "setInterceptor", "tail" : "(interceptor: Interceptor): Unit", "member" : "org.apache.spark.network.util.TransportFrameDecoder.setInterceptor", "link" : "org\/apache\/spark\/network\/util\/TransportFrameDecoder.html#setInterceptor(interceptor:org.apache.spark.network.util.TransportFrameDecoder.Interceptor):Unit", "kind" : "def"}, {"label" : "handlerRemoved", "tail" : "(ctx: ChannelHandlerContext): Unit", "member" : "org.apache.spark.network.util.TransportFrameDecoder.handlerRemoved", "link" : "org\/apache\/spark\/network\/util\/TransportFrameDecoder.html#handlerRemoved(ctx:io.netty.channel.ChannelHandlerContext):Unit", "kind" : "def"}, {"label" : "exceptionCaught", "tail" : "(ctx: ChannelHandlerContext, cause: Throwable): Unit", "member" : "org.apache.spark.network.util.TransportFrameDecoder.exceptionCaught", "link" : "org\/apache\/spark\/network\/util\/TransportFrameDecoder.html#exceptionCaught(ctx:io.netty.channel.ChannelHandlerContext,cause:Throwable):Unit", "kind" : "def"}, {"label" : "channelInactive", "tail" : "(ctx: ChannelHandlerContext): Unit", "member" : "org.apache.spark.network.util.TransportFrameDecoder.channelInactive", "link" : "org\/apache\/spark\/network\/util\/TransportFrameDecoder.html#channelInactive(ctx:io.netty.channel.ChannelHandlerContext):Unit", "kind" : "def"}, {"label" : "channelRead", "tail" : "(ctx: ChannelHandlerContext, data: Any): Unit", "member" : "org.apache.spark.network.util.TransportFrameDecoder.channelRead", "link" : "org\/apache\/spark\/network\/util\/TransportFrameDecoder.html#channelRead(ctx:io.netty.channel.ChannelHandlerContext,data:Any):Unit", "kind" : "def"}, {"member" : "org.apache.spark.network.util.TransportFrameDecoder#<init>", "error" : "unsupported entity"}, {"label" : "channelWritabilityChanged", "tail" : "(arg0: ChannelHandlerContext): Unit", "member" : "io.netty.channel.ChannelInboundHandlerAdapter.channelWritabilityChanged", "link" : "org\/apache\/spark\/network\/util\/TransportFrameDecoder.html#channelWritabilityChanged(x$1:io.netty.channel.ChannelHandlerContext):Unit", "kind" : "def"}, {"label" : "userEventTriggered", "tail" : "(arg0: ChannelHandlerContext, arg1: Any): Unit", "member" : "io.netty.channel.ChannelInboundHandlerAdapter.userEventTriggered", "link" : "org\/apache\/spark\/network\/util\/TransportFrameDecoder.html#userEventTriggered(x$1:io.netty.channel.ChannelHandlerContext,x$2:Any):Unit", "kind" : "def"}, {"label" : "channelReadComplete", "tail" : "(arg0: ChannelHandlerContext): Unit", "member" : "io.netty.channel.ChannelInboundHandlerAdapter.channelReadComplete", "link" : "org\/apache\/spark\/network\/util\/TransportFrameDecoder.html#channelReadComplete(x$1:io.netty.channel.ChannelHandlerContext):Unit", "kind" : "def"}, {"label" : "channelActive", "tail" : "(arg0: ChannelHandlerContext): Unit", "member" : "io.netty.channel.ChannelInboundHandlerAdapter.channelActive", "link" : "org\/apache\/spark\/network\/util\/TransportFrameDecoder.html#channelActive(x$1:io.netty.channel.ChannelHandlerContext):Unit", "kind" : "def"}, {"label" : "channelUnregistered", "tail" : "(arg0: ChannelHandlerContext): Unit", "member" : "io.netty.channel.ChannelInboundHandlerAdapter.channelUnregistered", "link" : "org\/apache\/spark\/network\/util\/TransportFrameDecoder.html#channelUnregistered(x$1:io.netty.channel.ChannelHandlerContext):Unit", "kind" : "def"}, {"label" : "channelRegistered", "tail" : "(arg0: ChannelHandlerContext): Unit", "member" : "io.netty.channel.ChannelInboundHandlerAdapter.channelRegistered", "link" : "org\/apache\/spark\/network\/util\/TransportFrameDecoder.html#channelRegistered(x$1:io.netty.channel.ChannelHandlerContext):Unit", "kind" : "def"}, {"label" : "handlerAdded", "tail" : "(arg0: ChannelHandlerContext): Unit", "member" : "io.netty.channel.ChannelHandlerAdapter.handlerAdded", "link" : "org\/apache\/spark\/network\/util\/TransportFrameDecoder.html#handlerAdded(x$1:io.netty.channel.ChannelHandlerContext):Unit", "kind" : "def"}, {"label" : "isSharable", "tail" : "(): Boolean", "member" : "io.netty.channel.ChannelHandlerAdapter.isSharable", "link" : "org\/apache\/spark\/network\/util\/TransportFrameDecoder.html#isSharable():Boolean", "kind" : "def"}, {"label" : "ensureNotSharable", "tail" : "(): Unit", "member" : "io.netty.channel.ChannelHandlerAdapter.ensureNotSharable", "link" : "org\/apache\/spark\/network\/util\/TransportFrameDecoder.html#ensureNotSharable():Unit", "kind" : "def"}, {"label" : "synchronized", "tail" : "(arg0: â‡’ T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "org\/apache\/spark\/network\/util\/TransportFrameDecoder.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "org\/apache\/spark\/network\/util\/TransportFrameDecoder.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "org\/apache\/spark\/network\/util\/TransportFrameDecoder.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "org\/apache\/spark\/network\/util\/TransportFrameDecoder.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "org\/apache\/spark\/network\/util\/TransportFrameDecoder.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "org\/apache\/spark\/network\/util\/TransportFrameDecoder.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "org\/apache\/spark\/network\/util\/TransportFrameDecoder.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "org\/apache\/spark\/network\/util\/TransportFrameDecoder.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "org\/apache\/spark\/network\/util\/TransportFrameDecoder.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "org\/apache\/spark\/network\/util\/TransportFrameDecoder.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "org\/apache\/spark\/network\/util\/TransportFrameDecoder.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "org\/apache\/spark\/network\/util\/TransportFrameDecoder.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "org\/apache\/spark\/network\/util\/TransportFrameDecoder.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "org\/apache\/spark\/network\/util\/TransportFrameDecoder.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.equals", "link" : "org\/apache\/spark\/network\/util\/TransportFrameDecoder.html#equals(x$1:Any):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "org\/apache\/spark\/network\/util\/TransportFrameDecoder.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_]", "member" : "scala.AnyRef.getClass", "link" : "org\/apache\/spark\/network\/util\/TransportFrameDecoder.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "org\/apache\/spark\/network\/util\/TransportFrameDecoder.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "org\/apache\/spark\/network\/util\/TransportFrameDecoder.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "class" : "org\/apache\/spark\/network\/util\/TransportFrameDecoder.html", "kind" : "class"}]};