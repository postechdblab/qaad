Index.PACKAGES = {"org.apache.spark.streaming" : [{"name" : "org.apache.spark.streaming.Duration", "shortDescription" : "", "members_case class" : [{"label" : "prettyPrint", "tail" : "(): String", "member" : "org.apache.spark.streaming.Duration.prettyPrint", "link" : "org\/apache\/spark\/streaming\/Duration.html#prettyPrint:String", "kind" : "def"}, {"label" : "milliseconds", "tail" : "(): Long", "member" : "org.apache.spark.streaming.Duration.milliseconds", "link" : "org\/apache\/spark\/streaming\/Duration.html#milliseconds:Long", "kind" : "def"}, {"label" : "toFormattedString", "tail" : "(): String", "member" : "org.apache.spark.streaming.Duration.toFormattedString", "link" : "org\/apache\/spark\/streaming\/Duration.html#toFormattedString:String", "kind" : "def"}, {"label" : "toString", "tail" : "(): String", "member" : "org.apache.spark.streaming.Duration.toString", "link" : "org\/apache\/spark\/streaming\/Duration.html#toString():String", "kind" : "def"}, {"label" : "isZero", "tail" : "(): Boolean", "member" : "org.apache.spark.streaming.Duration.isZero", "link" : "org\/apache\/spark\/streaming\/Duration.html#isZero:Boolean", "kind" : "def"}, {"label" : "max", "tail" : "(that: Duration): Duration", "member" : "org.apache.spark.streaming.Duration.max", "link" : "org\/apache\/spark\/streaming\/Duration.html#max(that:org.apache.spark.streaming.Duration):org.apache.spark.streaming.Duration", "kind" : "def"}, {"label" : "min", "tail" : "(that: Duration): Duration", "member" : "org.apache.spark.streaming.Duration.min", "link" : "org\/apache\/spark\/streaming\/Duration.html#min(that:org.apache.spark.streaming.Duration):org.apache.spark.streaming.Duration", "kind" : "def"}, {"label" : "isMultipleOf", "tail" : "(that: Duration): Boolean", "member" : "org.apache.spark.streaming.Duration.isMultipleOf", "link" : "org\/apache\/spark\/streaming\/Duration.html#isMultipleOf(that:org.apache.spark.streaming.Duration):Boolean", "kind" : "def"}, {"label" : "div", "tail" : "(that: Duration): Double", "member" : "org.apache.spark.streaming.Duration.div", "link" : "org\/apache\/spark\/streaming\/Duration.html#div(that:org.apache.spark.streaming.Duration):Double", "kind" : "def"}, {"label" : "times", "tail" : "(times: Int): Duration", "member" : "org.apache.spark.streaming.Duration.times", "link" : "org\/apache\/spark\/streaming\/Duration.html#times(times:Int):org.apache.spark.streaming.Duration", "kind" : "def"}, {"label" : "minus", "tail" : "(that: Duration): Duration", "member" : "org.apache.spark.streaming.Duration.minus", "link" : "org\/apache\/spark\/streaming\/Duration.html#minus(that:org.apache.spark.streaming.Duration):org.apache.spark.streaming.Duration", "kind" : "def"}, {"label" : "plus", "tail" : "(that: Duration): Duration", "member" : "org.apache.spark.streaming.Duration.plus", "link" : "org\/apache\/spark\/streaming\/Duration.html#plus(that:org.apache.spark.streaming.Duration):org.apache.spark.streaming.Duration", "kind" : "def"}, {"label" : "greaterEq", "tail" : "(that: Duration): Boolean", "member" : "org.apache.spark.streaming.Duration.greaterEq", "link" : "org\/apache\/spark\/streaming\/Duration.html#greaterEq(that:org.apache.spark.streaming.Duration):Boolean", "kind" : "def"}, {"label" : "greater", "tail" : "(that: Duration): Boolean", "member" : "org.apache.spark.streaming.Duration.greater", "link" : "org\/apache\/spark\/streaming\/Duration.html#greater(that:org.apache.spark.streaming.Duration):Boolean", "kind" : "def"}, {"label" : "lessEq", "tail" : "(that: Duration): Boolean", "member" : "org.apache.spark.streaming.Duration.lessEq", "link" : "org\/apache\/spark\/streaming\/Duration.html#lessEq(that:org.apache.spark.streaming.Duration):Boolean", "kind" : "def"}, {"label" : "less", "tail" : "(that: Duration): Boolean", "member" : "org.apache.spark.streaming.Duration.less", "link" : "org\/apache\/spark\/streaming\/Duration.html#less(that:org.apache.spark.streaming.Duration):Boolean", "kind" : "def"}, {"label" : "\/", "tail" : "(that: Duration): Double", "member" : "org.apache.spark.streaming.Duration.\/", "link" : "org\/apache\/spark\/streaming\/Duration.html#\/(that:org.apache.spark.streaming.Duration):Double", "kind" : "def"}, {"label" : "*", "tail" : "(times: Int): Duration", "member" : "org.apache.spark.streaming.Duration.*", "link" : "org\/apache\/spark\/streaming\/Duration.html#*(times:Int):org.apache.spark.streaming.Duration", "kind" : "def"}, {"label" : "-", "tail" : "(that: Duration): Duration", "member" : "org.apache.spark.streaming.Duration.-", "link" : "org\/apache\/spark\/streaming\/Duration.html#-(that:org.apache.spark.streaming.Duration):org.apache.spark.streaming.Duration", "kind" : "def"}, {"label" : "+", "tail" : "(that: Duration): Duration", "member" : "org.apache.spark.streaming.Duration.+", "link" : "org\/apache\/spark\/streaming\/Duration.html#+(that:org.apache.spark.streaming.Duration):org.apache.spark.streaming.Duration", "kind" : "def"}, {"label" : ">=", "tail" : "(that: Duration): Boolean", "member" : "org.apache.spark.streaming.Duration.>=", "link" : "org\/apache\/spark\/streaming\/Duration.html#>=(that:org.apache.spark.streaming.Duration):Boolean", "kind" : "def"}, {"label" : ">", "tail" : "(that: Duration): Boolean", "member" : "org.apache.spark.streaming.Duration.>", "link" : "org\/apache\/spark\/streaming\/Duration.html#>(that:org.apache.spark.streaming.Duration):Boolean", "kind" : "def"}, {"label" : "<=", "tail" : "(that: Duration): Boolean", "member" : "org.apache.spark.streaming.Duration.<=", "link" : "org\/apache\/spark\/streaming\/Duration.html#<=(that:org.apache.spark.streaming.Duration):Boolean", "kind" : "def"}, {"label" : "<", "tail" : "(that: Duration): Boolean", "member" : "org.apache.spark.streaming.Duration.<", "link" : "org\/apache\/spark\/streaming\/Duration.html#<(that:org.apache.spark.streaming.Duration):Boolean", "kind" : "def"}, {"member" : "org.apache.spark.streaming.Duration#<init>", "error" : "unsupported entity"}, {"label" : "synchronized", "tail" : "(arg0: ⇒ T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "org\/apache\/spark\/streaming\/Duration.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "org\/apache\/spark\/streaming\/Duration.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "org\/apache\/spark\/streaming\/Duration.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "org\/apache\/spark\/streaming\/Duration.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "org\/apache\/spark\/streaming\/Duration.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "org\/apache\/spark\/streaming\/Duration.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "org\/apache\/spark\/streaming\/Duration.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "org\/apache\/spark\/streaming\/Duration.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "org\/apache\/spark\/streaming\/Duration.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "org\/apache\/spark\/streaming\/Duration.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "org\/apache\/spark\/streaming\/Duration.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "org\/apache\/spark\/streaming\/Duration.html#notify():Unit", "kind" : "final def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "org\/apache\/spark\/streaming\/Duration.html#clone():Object", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_]", "member" : "scala.AnyRef.getClass", "link" : "org\/apache\/spark\/streaming\/Duration.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "org\/apache\/spark\/streaming\/Duration.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "org\/apache\/spark\/streaming\/Duration.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "case class" : "org\/apache\/spark\/streaming\/Duration.html", "kind" : "case class"}, {"name" : "org.apache.spark.streaming.Durations", "shortDescription" : "", "object" : "org\/apache\/spark\/streaming\/Durations$.html", "members_object" : [{"label" : "minutes", "tail" : "(minutes: Long): Duration", "member" : "org.apache.spark.streaming.Durations.minutes", "link" : "org\/apache\/spark\/streaming\/Durations$.html#minutes(minutes:Long):org.apache.spark.streaming.Duration", "kind" : "def"}, {"label" : "seconds", "tail" : "(seconds: Long): Duration", "member" : "org.apache.spark.streaming.Durations.seconds", "link" : "org\/apache\/spark\/streaming\/Durations$.html#seconds(seconds:Long):org.apache.spark.streaming.Duration", "kind" : "def"}, {"label" : "milliseconds", "tail" : "(milliseconds: Long): Duration", "member" : "org.apache.spark.streaming.Durations.milliseconds", "link" : "org\/apache\/spark\/streaming\/Durations$.html#milliseconds(milliseconds:Long):org.apache.spark.streaming.Duration", "kind" : "def"}, {"label" : "synchronized", "tail" : "(arg0: ⇒ T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "org\/apache\/spark\/streaming\/Durations$.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "org\/apache\/spark\/streaming\/Durations$.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "org\/apache\/spark\/streaming\/Durations$.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "org\/apache\/spark\/streaming\/Durations$.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "org\/apache\/spark\/streaming\/Durations$.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "org\/apache\/spark\/streaming\/Durations$.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "org\/apache\/spark\/streaming\/Durations$.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "org\/apache\/spark\/streaming\/Durations$.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "org\/apache\/spark\/streaming\/Durations$.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "org\/apache\/spark\/streaming\/Durations$.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "org\/apache\/spark\/streaming\/Durations$.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "org\/apache\/spark\/streaming\/Durations$.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "org\/apache\/spark\/streaming\/Durations$.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "org\/apache\/spark\/streaming\/Durations$.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.equals", "link" : "org\/apache\/spark\/streaming\/Durations$.html#equals(x$1:Any):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "org\/apache\/spark\/streaming\/Durations$.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_]", "member" : "scala.AnyRef.getClass", "link" : "org\/apache\/spark\/streaming\/Durations$.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "org\/apache\/spark\/streaming\/Durations$.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "org\/apache\/spark\/streaming\/Durations$.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "kind" : "object"}, {"name" : "org.apache.spark.streaming.Milliseconds", "shortDescription" : "Helper object that creates instance of org.apache.spark.streaming.Duration representinga given number of milliseconds.", "object" : "org\/apache\/spark\/streaming\/Milliseconds$.html", "members_object" : [{"label" : "apply", "tail" : "(milliseconds: Long): Duration", "member" : "org.apache.spark.streaming.Milliseconds.apply", "link" : "org\/apache\/spark\/streaming\/Milliseconds$.html#apply(milliseconds:Long):org.apache.spark.streaming.Duration", "kind" : "def"}, {"label" : "synchronized", "tail" : "(arg0: ⇒ T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "org\/apache\/spark\/streaming\/Milliseconds$.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "org\/apache\/spark\/streaming\/Milliseconds$.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "org\/apache\/spark\/streaming\/Milliseconds$.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "org\/apache\/spark\/streaming\/Milliseconds$.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "org\/apache\/spark\/streaming\/Milliseconds$.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "org\/apache\/spark\/streaming\/Milliseconds$.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "org\/apache\/spark\/streaming\/Milliseconds$.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "org\/apache\/spark\/streaming\/Milliseconds$.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "org\/apache\/spark\/streaming\/Milliseconds$.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "org\/apache\/spark\/streaming\/Milliseconds$.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "org\/apache\/spark\/streaming\/Milliseconds$.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "org\/apache\/spark\/streaming\/Milliseconds$.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "org\/apache\/spark\/streaming\/Milliseconds$.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "org\/apache\/spark\/streaming\/Milliseconds$.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.equals", "link" : "org\/apache\/spark\/streaming\/Milliseconds$.html#equals(x$1:Any):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "org\/apache\/spark\/streaming\/Milliseconds$.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_]", "member" : "scala.AnyRef.getClass", "link" : "org\/apache\/spark\/streaming\/Milliseconds$.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "org\/apache\/spark\/streaming\/Milliseconds$.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "org\/apache\/spark\/streaming\/Milliseconds$.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "kind" : "object"}, {"name" : "org.apache.spark.streaming.Minutes", "shortDescription" : "Helper object that creates instance of org.apache.spark.streaming.Duration representinga given number of minutes.", "object" : "org\/apache\/spark\/streaming\/Minutes$.html", "members_object" : [{"label" : "apply", "tail" : "(minutes: Long): Duration", "member" : "org.apache.spark.streaming.Minutes.apply", "link" : "org\/apache\/spark\/streaming\/Minutes$.html#apply(minutes:Long):org.apache.spark.streaming.Duration", "kind" : "def"}, {"label" : "synchronized", "tail" : "(arg0: ⇒ T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "org\/apache\/spark\/streaming\/Minutes$.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "org\/apache\/spark\/streaming\/Minutes$.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "org\/apache\/spark\/streaming\/Minutes$.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "org\/apache\/spark\/streaming\/Minutes$.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "org\/apache\/spark\/streaming\/Minutes$.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "org\/apache\/spark\/streaming\/Minutes$.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "org\/apache\/spark\/streaming\/Minutes$.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "org\/apache\/spark\/streaming\/Minutes$.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "org\/apache\/spark\/streaming\/Minutes$.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "org\/apache\/spark\/streaming\/Minutes$.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "org\/apache\/spark\/streaming\/Minutes$.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "org\/apache\/spark\/streaming\/Minutes$.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "org\/apache\/spark\/streaming\/Minutes$.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "org\/apache\/spark\/streaming\/Minutes$.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.equals", "link" : "org\/apache\/spark\/streaming\/Minutes$.html#equals(x$1:Any):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "org\/apache\/spark\/streaming\/Minutes$.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_]", "member" : "scala.AnyRef.getClass", "link" : "org\/apache\/spark\/streaming\/Minutes$.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "org\/apache\/spark\/streaming\/Minutes$.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "org\/apache\/spark\/streaming\/Minutes$.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "kind" : "object"}, {"name" : "org.apache.spark.streaming.Seconds", "shortDescription" : "Helper object that creates instance of org.apache.spark.streaming.Duration representinga given number of seconds.", "object" : "org\/apache\/spark\/streaming\/Seconds$.html", "members_object" : [{"label" : "apply", "tail" : "(seconds: Long): Duration", "member" : "org.apache.spark.streaming.Seconds.apply", "link" : "org\/apache\/spark\/streaming\/Seconds$.html#apply(seconds:Long):org.apache.spark.streaming.Duration", "kind" : "def"}, {"label" : "synchronized", "tail" : "(arg0: ⇒ T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "org\/apache\/spark\/streaming\/Seconds$.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "org\/apache\/spark\/streaming\/Seconds$.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "org\/apache\/spark\/streaming\/Seconds$.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "org\/apache\/spark\/streaming\/Seconds$.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "org\/apache\/spark\/streaming\/Seconds$.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "org\/apache\/spark\/streaming\/Seconds$.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "org\/apache\/spark\/streaming\/Seconds$.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "org\/apache\/spark\/streaming\/Seconds$.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "org\/apache\/spark\/streaming\/Seconds$.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "org\/apache\/spark\/streaming\/Seconds$.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "org\/apache\/spark\/streaming\/Seconds$.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "org\/apache\/spark\/streaming\/Seconds$.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "org\/apache\/spark\/streaming\/Seconds$.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "org\/apache\/spark\/streaming\/Seconds$.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.equals", "link" : "org\/apache\/spark\/streaming\/Seconds$.html#equals(x$1:Any):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "org\/apache\/spark\/streaming\/Seconds$.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_]", "member" : "scala.AnyRef.getClass", "link" : "org\/apache\/spark\/streaming\/Seconds$.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "org\/apache\/spark\/streaming\/Seconds$.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "org\/apache\/spark\/streaming\/Seconds$.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "kind" : "object"}, {"name" : "org.apache.spark.streaming.State", "shortDescription" : ":: Experimental ::Abstract class for getting and updating the state in mapping function used in the mapWithStateoperation of a pair DStream (Scala)or a JavaPairDStream (Java).", "members_class" : [{"label" : "toString", "tail" : "(): String", "member" : "org.apache.spark.streaming.State.toString", "link" : "org\/apache\/spark\/streaming\/State.html#toString():String", "kind" : "final def"}, {"label" : "getOption", "tail" : "(): Option[S]", "member" : "org.apache.spark.streaming.State.getOption", "link" : "org\/apache\/spark\/streaming\/State.html#getOption():Option[S]", "kind" : "final def"}, {"label" : "synchronized", "tail" : "(arg0: ⇒ T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "org\/apache\/spark\/streaming\/State.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "org\/apache\/spark\/streaming\/State.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "org\/apache\/spark\/streaming\/State.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "org\/apache\/spark\/streaming\/State.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "org\/apache\/spark\/streaming\/State.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "org\/apache\/spark\/streaming\/State.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "org\/apache\/spark\/streaming\/State.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "org\/apache\/spark\/streaming\/State.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "org\/apache\/spark\/streaming\/State.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "org\/apache\/spark\/streaming\/State.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "org\/apache\/spark\/streaming\/State.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "org\/apache\/spark\/streaming\/State.html#notify():Unit", "kind" : "final def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "org\/apache\/spark\/streaming\/State.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.equals", "link" : "org\/apache\/spark\/streaming\/State.html#equals(x$1:Any):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "org\/apache\/spark\/streaming\/State.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_]", "member" : "scala.AnyRef.getClass", "link" : "org\/apache\/spark\/streaming\/State.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "org\/apache\/spark\/streaming\/State.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "org\/apache\/spark\/streaming\/State.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}, {"label" : "isTimingOut", "tail" : "(): Boolean", "member" : "org.apache.spark.streaming.State.isTimingOut", "link" : "org\/apache\/spark\/streaming\/State.html#isTimingOut():Boolean", "kind" : "abstract def"}, {"label" : "remove", "tail" : "(): Unit", "member" : "org.apache.spark.streaming.State.remove", "link" : "org\/apache\/spark\/streaming\/State.html#remove():Unit", "kind" : "abstract def"}, {"label" : "update", "tail" : "(newState: S): Unit", "member" : "org.apache.spark.streaming.State.update", "link" : "org\/apache\/spark\/streaming\/State.html#update(newState:S):Unit", "kind" : "abstract def"}, {"label" : "get", "tail" : "(): S", "member" : "org.apache.spark.streaming.State.get", "link" : "org\/apache\/spark\/streaming\/State.html#get():S", "kind" : "abstract def"}, {"label" : "exists", "tail" : "(): Boolean", "member" : "org.apache.spark.streaming.State.exists", "link" : "org\/apache\/spark\/streaming\/State.html#exists():Boolean", "kind" : "abstract def"}], "class" : "org\/apache\/spark\/streaming\/State.html", "kind" : "class"}, {"name" : "org.apache.spark.streaming.StateSpec", "shortDescription" : ":: Experimental ::Abstract class representing all the specifications of the DStream transformationmapWithState operation of apair DStream (Scala) or aJavaPairDStream (Java).", "object" : "org\/apache\/spark\/streaming\/StateSpec$.html", "members_class" : [{"label" : "synchronized", "tail" : "(arg0: ⇒ T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "org\/apache\/spark\/streaming\/StateSpec.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "org\/apache\/spark\/streaming\/StateSpec.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "org\/apache\/spark\/streaming\/StateSpec.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "org\/apache\/spark\/streaming\/StateSpec.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "org\/apache\/spark\/streaming\/StateSpec.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "org\/apache\/spark\/streaming\/StateSpec.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "org\/apache\/spark\/streaming\/StateSpec.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "org\/apache\/spark\/streaming\/StateSpec.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "org\/apache\/spark\/streaming\/StateSpec.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "org\/apache\/spark\/streaming\/StateSpec.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "org\/apache\/spark\/streaming\/StateSpec.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "org\/apache\/spark\/streaming\/StateSpec.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "org\/apache\/spark\/streaming\/StateSpec.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "org\/apache\/spark\/streaming\/StateSpec.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.equals", "link" : "org\/apache\/spark\/streaming\/StateSpec.html#equals(x$1:Any):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "org\/apache\/spark\/streaming\/StateSpec.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_]", "member" : "scala.AnyRef.getClass", "link" : "org\/apache\/spark\/streaming\/StateSpec.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "org\/apache\/spark\/streaming\/StateSpec.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "org\/apache\/spark\/streaming\/StateSpec.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}, {"label" : "timeout", "tail" : "(idleDuration: Duration): StateSpec.this.type", "member" : "org.apache.spark.streaming.StateSpec.timeout", "link" : "org\/apache\/spark\/streaming\/StateSpec.html#timeout(idleDuration:org.apache.spark.streaming.Duration):StateSpec.this.type", "kind" : "abstract def"}, {"label" : "partitioner", "tail" : "(partitioner: Partitioner): StateSpec.this.type", "member" : "org.apache.spark.streaming.StateSpec.partitioner", "link" : "org\/apache\/spark\/streaming\/StateSpec.html#partitioner(partitioner:org.apache.spark.Partitioner):StateSpec.this.type", "kind" : "abstract def"}, {"label" : "numPartitions", "tail" : "(numPartitions: Int): StateSpec.this.type", "member" : "org.apache.spark.streaming.StateSpec.numPartitions", "link" : "org\/apache\/spark\/streaming\/StateSpec.html#numPartitions(numPartitions:Int):StateSpec.this.type", "kind" : "abstract def"}, {"label" : "initialState", "tail" : "(javaPairRDD: JavaPairRDD[KeyType, StateType]): StateSpec.this.type", "member" : "org.apache.spark.streaming.StateSpec.initialState", "link" : "org\/apache\/spark\/streaming\/StateSpec.html#initialState(javaPairRDD:org.apache.spark.api.java.JavaPairRDD[KeyType,StateType]):StateSpec.this.type", "kind" : "abstract def"}, {"label" : "initialState", "tail" : "(rdd: RDD[(KeyType, StateType)]): StateSpec.this.type", "member" : "org.apache.spark.streaming.StateSpec.initialState", "link" : "org\/apache\/spark\/streaming\/StateSpec.html#initialState(rdd:org.apache.spark.rdd.RDD[(KeyType,StateType)]):StateSpec.this.type", "kind" : "abstract def"}], "members_object" : [{"label" : "function", "tail" : "(mappingFunction: Function3[KeyType, Optional[ValueType], State[StateType], MappedType]): StateSpec[KeyType, ValueType, StateType, MappedType]", "member" : "org.apache.spark.streaming.StateSpec.function", "link" : "org\/apache\/spark\/streaming\/StateSpec$.html#function[KeyType,ValueType,StateType,MappedType](mappingFunction:org.apache.spark.api.java.function.Function3[KeyType,org.apache.spark.api.java.Optional[ValueType],org.apache.spark.streaming.State[StateType],MappedType]):org.apache.spark.streaming.StateSpec[KeyType,ValueType,StateType,MappedType]", "kind" : "def"}, {"label" : "function", "tail" : "(mappingFunction: Function4[Time, KeyType, Optional[ValueType], State[StateType], Optional[MappedType]]): StateSpec[KeyType, ValueType, StateType, MappedType]", "member" : "org.apache.spark.streaming.StateSpec.function", "link" : "org\/apache\/spark\/streaming\/StateSpec$.html#function[KeyType,ValueType,StateType,MappedType](mappingFunction:org.apache.spark.api.java.function.Function4[org.apache.spark.streaming.Time,KeyType,org.apache.spark.api.java.Optional[ValueType],org.apache.spark.streaming.State[StateType],org.apache.spark.api.java.Optional[MappedType]]):org.apache.spark.streaming.StateSpec[KeyType,ValueType,StateType,MappedType]", "kind" : "def"}, {"label" : "function", "tail" : "(mappingFunction: (KeyType, Option[ValueType], State[StateType]) ⇒ MappedType): StateSpec[KeyType, ValueType, StateType, MappedType]", "member" : "org.apache.spark.streaming.StateSpec.function", "link" : "org\/apache\/spark\/streaming\/StateSpec$.html#function[KeyType,ValueType,StateType,MappedType](mappingFunction:(KeyType,Option[ValueType],org.apache.spark.streaming.State[StateType])=>MappedType):org.apache.spark.streaming.StateSpec[KeyType,ValueType,StateType,MappedType]", "kind" : "def"}, {"label" : "function", "tail" : "(mappingFunction: (Time, KeyType, Option[ValueType], State[StateType]) ⇒ Option[MappedType]): StateSpec[KeyType, ValueType, StateType, MappedType]", "member" : "org.apache.spark.streaming.StateSpec.function", "link" : "org\/apache\/spark\/streaming\/StateSpec$.html#function[KeyType,ValueType,StateType,MappedType](mappingFunction:(org.apache.spark.streaming.Time,KeyType,Option[ValueType],org.apache.spark.streaming.State[StateType])=>Option[MappedType]):org.apache.spark.streaming.StateSpec[KeyType,ValueType,StateType,MappedType]", "kind" : "def"}, {"label" : "synchronized", "tail" : "(arg0: ⇒ T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "org\/apache\/spark\/streaming\/StateSpec$.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "org\/apache\/spark\/streaming\/StateSpec$.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "org\/apache\/spark\/streaming\/StateSpec$.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "org\/apache\/spark\/streaming\/StateSpec$.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "org\/apache\/spark\/streaming\/StateSpec$.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "org\/apache\/spark\/streaming\/StateSpec$.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "org\/apache\/spark\/streaming\/StateSpec$.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "org\/apache\/spark\/streaming\/StateSpec$.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "org\/apache\/spark\/streaming\/StateSpec$.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "org\/apache\/spark\/streaming\/StateSpec$.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "org\/apache\/spark\/streaming\/StateSpec$.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "org\/apache\/spark\/streaming\/StateSpec$.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "org\/apache\/spark\/streaming\/StateSpec$.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "org\/apache\/spark\/streaming\/StateSpec$.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.equals", "link" : "org\/apache\/spark\/streaming\/StateSpec$.html#equals(x$1:Any):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "org\/apache\/spark\/streaming\/StateSpec$.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_]", "member" : "scala.AnyRef.getClass", "link" : "org\/apache\/spark\/streaming\/StateSpec$.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "org\/apache\/spark\/streaming\/StateSpec$.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "org\/apache\/spark\/streaming\/StateSpec$.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "class" : "org\/apache\/spark\/streaming\/StateSpec.html", "kind" : "class"}, {"name" : "org.apache.spark.streaming.StreamingConf", "shortDescription" : "", "object" : "org\/apache\/spark\/streaming\/StreamingConf$.html", "members_object" : [{"label" : "synchronized", "tail" : "(arg0: ⇒ T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "org\/apache\/spark\/streaming\/StreamingConf$.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "org\/apache\/spark\/streaming\/StreamingConf$.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "org\/apache\/spark\/streaming\/StreamingConf$.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "org\/apache\/spark\/streaming\/StreamingConf$.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "org\/apache\/spark\/streaming\/StreamingConf$.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "org\/apache\/spark\/streaming\/StreamingConf$.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "org\/apache\/spark\/streaming\/StreamingConf$.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "org\/apache\/spark\/streaming\/StreamingConf$.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "org\/apache\/spark\/streaming\/StreamingConf$.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "org\/apache\/spark\/streaming\/StreamingConf$.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "org\/apache\/spark\/streaming\/StreamingConf$.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "org\/apache\/spark\/streaming\/StreamingConf$.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "org\/apache\/spark\/streaming\/StreamingConf$.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "org\/apache\/spark\/streaming\/StreamingConf$.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.equals", "link" : "org\/apache\/spark\/streaming\/StreamingConf$.html#equals(x$1:Any):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "org\/apache\/spark\/streaming\/StreamingConf$.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_]", "member" : "scala.AnyRef.getClass", "link" : "org\/apache\/spark\/streaming\/StreamingConf$.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "org\/apache\/spark\/streaming\/StreamingConf$.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "org\/apache\/spark\/streaming\/StreamingConf$.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "kind" : "object"}, {"name" : "org.apache.spark.streaming.StreamingContext", "shortDescription" : "Main entry point for Spark Streaming functionality.", "object" : "org\/apache\/spark\/streaming\/StreamingContext$.html", "members_class" : [{"label" : "stop", "tail" : "(stopSparkContext: Boolean, stopGracefully: Boolean): Unit", "member" : "org.apache.spark.streaming.StreamingContext.stop", "link" : "org\/apache\/spark\/streaming\/StreamingContext.html#stop(stopSparkContext:Boolean,stopGracefully:Boolean):Unit", "kind" : "def"}, {"label" : "stop", "tail" : "(stopSparkContext: Boolean): Unit", "member" : "org.apache.spark.streaming.StreamingContext.stop", "link" : "org\/apache\/spark\/streaming\/StreamingContext.html#stop(stopSparkContext:Boolean):Unit", "kind" : "def"}, {"label" : "awaitTerminationOrTimeout", "tail" : "(timeout: Long): Boolean", "member" : "org.apache.spark.streaming.StreamingContext.awaitTerminationOrTimeout", "link" : "org\/apache\/spark\/streaming\/StreamingContext.html#awaitTerminationOrTimeout(timeout:Long):Boolean", "kind" : "def"}, {"label" : "awaitTermination", "tail" : "(): Unit", "member" : "org.apache.spark.streaming.StreamingContext.awaitTermination", "link" : "org\/apache\/spark\/streaming\/StreamingContext.html#awaitTermination():Unit", "kind" : "def"}, {"label" : "start", "tail" : "(): Unit", "member" : "org.apache.spark.streaming.StreamingContext.start", "link" : "org\/apache\/spark\/streaming\/StreamingContext.html#start():Unit", "kind" : "def"}, {"label" : "getState", "tail" : "(): StreamingContextState", "member" : "org.apache.spark.streaming.StreamingContext.getState", "link" : "org\/apache\/spark\/streaming\/StreamingContext.html#getState():org.apache.spark.streaming.StreamingContextState", "kind" : "def"}, {"label" : "removeStreamingListener", "tail" : "(streamingListener: StreamingListener): Unit", "member" : "org.apache.spark.streaming.StreamingContext.removeStreamingListener", "link" : "org\/apache\/spark\/streaming\/StreamingContext.html#removeStreamingListener(streamingListener:org.apache.spark.streaming.scheduler.StreamingListener):Unit", "kind" : "def"}, {"label" : "addStreamingListener", "tail" : "(streamingListener: StreamingListener): Unit", "member" : "org.apache.spark.streaming.StreamingContext.addStreamingListener", "link" : "org\/apache\/spark\/streaming\/StreamingContext.html#addStreamingListener(streamingListener:org.apache.spark.streaming.scheduler.StreamingListener):Unit", "kind" : "def"}, {"label" : "transform", "tail" : "(dstreams: Seq[DStream[_]], transformFunc: (Seq[RDD[_]], Time) ⇒ RDD[T])(arg0: ClassTag[T]): DStream[T]", "member" : "org.apache.spark.streaming.StreamingContext.transform", "link" : "org\/apache\/spark\/streaming\/StreamingContext.html#transform[T](dstreams:Seq[org.apache.spark.streaming.dstream.DStream[_]],transformFunc:(Seq[org.apache.spark.rdd.RDD[_]],org.apache.spark.streaming.Time)=>org.apache.spark.rdd.RDD[T])(implicitevidence$16:scala.reflect.ClassTag[T]):org.apache.spark.streaming.dstream.DStream[T]", "kind" : "def"}, {"label" : "union", "tail" : "(streams: Seq[DStream[T]])(arg0: ClassTag[T]): DStream[T]", "member" : "org.apache.spark.streaming.StreamingContext.union", "link" : "org\/apache\/spark\/streaming\/StreamingContext.html#union[T](streams:Seq[org.apache.spark.streaming.dstream.DStream[T]])(implicitevidence$15:scala.reflect.ClassTag[T]):org.apache.spark.streaming.dstream.DStream[T]", "kind" : "def"}, {"label" : "queueStream", "tail" : "(queue: Queue[RDD[T]], oneAtATime: Boolean, defaultRDD: RDD[T])(arg0: ClassTag[T]): InputDStream[T]", "member" : "org.apache.spark.streaming.StreamingContext.queueStream", "link" : "org\/apache\/spark\/streaming\/StreamingContext.html#queueStream[T](queue:scala.collection.mutable.Queue[org.apache.spark.rdd.RDD[T]],oneAtATime:Boolean,defaultRDD:org.apache.spark.rdd.RDD[T])(implicitevidence$14:scala.reflect.ClassTag[T]):org.apache.spark.streaming.dstream.InputDStream[T]", "kind" : "def"}, {"label" : "queueStream", "tail" : "(queue: Queue[RDD[T]], oneAtATime: Boolean)(arg0: ClassTag[T]): InputDStream[T]", "member" : "org.apache.spark.streaming.StreamingContext.queueStream", "link" : "org\/apache\/spark\/streaming\/StreamingContext.html#queueStream[T](queue:scala.collection.mutable.Queue[org.apache.spark.rdd.RDD[T]],oneAtATime:Boolean)(implicitevidence$13:scala.reflect.ClassTag[T]):org.apache.spark.streaming.dstream.InputDStream[T]", "kind" : "def"}, {"label" : "binaryRecordsStream", "tail" : "(directory: String, recordLength: Int): DStream[Array[Byte]]", "member" : "org.apache.spark.streaming.StreamingContext.binaryRecordsStream", "link" : "org\/apache\/spark\/streaming\/StreamingContext.html#binaryRecordsStream(directory:String,recordLength:Int):org.apache.spark.streaming.dstream.DStream[Array[Byte]]", "kind" : "def"}, {"label" : "textFileStream", "tail" : "(directory: String): DStream[String]", "member" : "org.apache.spark.streaming.StreamingContext.textFileStream", "link" : "org\/apache\/spark\/streaming\/StreamingContext.html#textFileStream(directory:String):org.apache.spark.streaming.dstream.DStream[String]", "kind" : "def"}, {"label" : "fileStream", "tail" : "(directory: String, filter: (Path) ⇒ Boolean, newFilesOnly: Boolean, conf: Configuration)(arg0: ClassTag[K], arg1: ClassTag[V], arg2: ClassTag[F]): InputDStream[(K, V)]", "member" : "org.apache.spark.streaming.StreamingContext.fileStream", "link" : "org\/apache\/spark\/streaming\/StreamingContext.html#fileStream[K,V,F<:org.apache.hadoop.mapreduce.InputFormat[K,V]](directory:String,filter:org.apache.hadoop.fs.Path=>Boolean,newFilesOnly:Boolean,conf:org.apache.hadoop.conf.Configuration)(implicitevidence$10:scala.reflect.ClassTag[K],implicitevidence$11:scala.reflect.ClassTag[V],implicitevidence$12:scala.reflect.ClassTag[F]):org.apache.spark.streaming.dstream.InputDStream[(K,V)]", "kind" : "def"}, {"label" : "fileStream", "tail" : "(directory: String, filter: (Path) ⇒ Boolean, newFilesOnly: Boolean)(arg0: ClassTag[K], arg1: ClassTag[V], arg2: ClassTag[F]): InputDStream[(K, V)]", "member" : "org.apache.spark.streaming.StreamingContext.fileStream", "link" : "org\/apache\/spark\/streaming\/StreamingContext.html#fileStream[K,V,F<:org.apache.hadoop.mapreduce.InputFormat[K,V]](directory:String,filter:org.apache.hadoop.fs.Path=>Boolean,newFilesOnly:Boolean)(implicitevidence$7:scala.reflect.ClassTag[K],implicitevidence$8:scala.reflect.ClassTag[V],implicitevidence$9:scala.reflect.ClassTag[F]):org.apache.spark.streaming.dstream.InputDStream[(K,V)]", "kind" : "def"}, {"label" : "fileStream", "tail" : "(directory: String)(arg0: ClassTag[K], arg1: ClassTag[V], arg2: ClassTag[F]): InputDStream[(K, V)]", "member" : "org.apache.spark.streaming.StreamingContext.fileStream", "link" : "org\/apache\/spark\/streaming\/StreamingContext.html#fileStream[K,V,F<:org.apache.hadoop.mapreduce.InputFormat[K,V]](directory:String)(implicitevidence$4:scala.reflect.ClassTag[K],implicitevidence$5:scala.reflect.ClassTag[V],implicitevidence$6:scala.reflect.ClassTag[F]):org.apache.spark.streaming.dstream.InputDStream[(K,V)]", "kind" : "def"}, {"label" : "rawSocketStream", "tail" : "(hostname: String, port: Int, storageLevel: StorageLevel)(arg0: ClassTag[T]): ReceiverInputDStream[T]", "member" : "org.apache.spark.streaming.StreamingContext.rawSocketStream", "link" : "org\/apache\/spark\/streaming\/StreamingContext.html#rawSocketStream[T](hostname:String,port:Int,storageLevel:org.apache.spark.storage.StorageLevel)(implicitevidence$3:scala.reflect.ClassTag[T]):org.apache.spark.streaming.dstream.ReceiverInputDStream[T]", "kind" : "def"}, {"label" : "socketStream", "tail" : "(hostname: String, port: Int, converter: (InputStream) ⇒ Iterator[T], storageLevel: StorageLevel)(arg0: ClassTag[T]): ReceiverInputDStream[T]", "member" : "org.apache.spark.streaming.StreamingContext.socketStream", "link" : "org\/apache\/spark\/streaming\/StreamingContext.html#socketStream[T](hostname:String,port:Int,converter:java.io.InputStream=>Iterator[T],storageLevel:org.apache.spark.storage.StorageLevel)(implicitevidence$2:scala.reflect.ClassTag[T]):org.apache.spark.streaming.dstream.ReceiverInputDStream[T]", "kind" : "def"}, {"label" : "socketTextStream", "tail" : "(hostname: String, port: Int, storageLevel: StorageLevel): ReceiverInputDStream[String]", "member" : "org.apache.spark.streaming.StreamingContext.socketTextStream", "link" : "org\/apache\/spark\/streaming\/StreamingContext.html#socketTextStream(hostname:String,port:Int,storageLevel:org.apache.spark.storage.StorageLevel):org.apache.spark.streaming.dstream.ReceiverInputDStream[String]", "kind" : "def"}, {"label" : "receiverStream", "tail" : "(receiver: Receiver[T])(arg0: ClassTag[T]): ReceiverInputDStream[T]", "member" : "org.apache.spark.streaming.StreamingContext.receiverStream", "link" : "org\/apache\/spark\/streaming\/StreamingContext.html#receiverStream[T](receiver:org.apache.spark.streaming.receiver.Receiver[T])(implicitevidence$1:scala.reflect.ClassTag[T]):org.apache.spark.streaming.dstream.ReceiverInputDStream[T]", "kind" : "def"}, {"label" : "checkpoint", "tail" : "(directory: String): Unit", "member" : "org.apache.spark.streaming.StreamingContext.checkpoint", "link" : "org\/apache\/spark\/streaming\/StreamingContext.html#checkpoint(directory:String):Unit", "kind" : "def"}, {"label" : "remember", "tail" : "(duration: Duration): Unit", "member" : "org.apache.spark.streaming.StreamingContext.remember", "link" : "org\/apache\/spark\/streaming\/StreamingContext.html#remember(duration:org.apache.spark.streaming.Duration):Unit", "kind" : "def"}, {"label" : "sparkContext", "tail" : "(): SparkContext", "member" : "org.apache.spark.streaming.StreamingContext.sparkContext", "link" : "org\/apache\/spark\/streaming\/StreamingContext.html#sparkContext:org.apache.spark.SparkContext", "kind" : "def"}, {"member" : "org.apache.spark.streaming.StreamingContext#<init>", "error" : "unsupported entity"}, {"member" : "org.apache.spark.streaming.StreamingContext#<init>", "error" : "unsupported entity"}, {"member" : "org.apache.spark.streaming.StreamingContext#<init>", "error" : "unsupported entity"}, {"member" : "org.apache.spark.streaming.StreamingContext#<init>", "error" : "unsupported entity"}, {"member" : "org.apache.spark.streaming.StreamingContext#<init>", "error" : "unsupported entity"}, {"member" : "org.apache.spark.streaming.StreamingContext#<init>", "error" : "unsupported entity"}, {"label" : "initializeLogIfNecessary", "tail" : "(isInterpreter: Boolean, silent: Boolean): Boolean", "member" : "org.apache.spark.internal.Logging.initializeLogIfNecessary", "link" : "org\/apache\/spark\/streaming\/StreamingContext.html#initializeLogIfNecessary(isInterpreter:Boolean,silent:Boolean):Boolean", "kind" : "def"}, {"label" : "initializeLogIfNecessary", "tail" : "(isInterpreter: Boolean): Unit", "member" : "org.apache.spark.internal.Logging.initializeLogIfNecessary", "link" : "org\/apache\/spark\/streaming\/StreamingContext.html#initializeLogIfNecessary(isInterpreter:Boolean):Unit", "kind" : "def"}, {"label" : "isTraceEnabled", "tail" : "(): Boolean", "member" : "org.apache.spark.internal.Logging.isTraceEnabled", "link" : "org\/apache\/spark\/streaming\/StreamingContext.html#isTraceEnabled():Boolean", "kind" : "def"}, {"label" : "logError", "tail" : "(msg: ⇒ String, throwable: Throwable): Unit", "member" : "org.apache.spark.internal.Logging.logError", "link" : "org\/apache\/spark\/streaming\/StreamingContext.html#logError(msg:=>String,throwable:Throwable):Unit", "kind" : "def"}, {"label" : "logWarning", "tail" : "(msg: ⇒ String, throwable: Throwable): Unit", "member" : "org.apache.spark.internal.Logging.logWarning", "link" : "org\/apache\/spark\/streaming\/StreamingContext.html#logWarning(msg:=>String,throwable:Throwable):Unit", "kind" : "def"}, {"label" : "logTrace", "tail" : "(msg: ⇒ String, throwable: Throwable): Unit", "member" : "org.apache.spark.internal.Logging.logTrace", "link" : "org\/apache\/spark\/streaming\/StreamingContext.html#logTrace(msg:=>String,throwable:Throwable):Unit", "kind" : "def"}, {"label" : "logDebug", "tail" : "(msg: ⇒ String, throwable: Throwable): Unit", "member" : "org.apache.spark.internal.Logging.logDebug", "link" : "org\/apache\/spark\/streaming\/StreamingContext.html#logDebug(msg:=>String,throwable:Throwable):Unit", "kind" : "def"}, {"label" : "logInfo", "tail" : "(msg: ⇒ String, throwable: Throwable): Unit", "member" : "org.apache.spark.internal.Logging.logInfo", "link" : "org\/apache\/spark\/streaming\/StreamingContext.html#logInfo(msg:=>String,throwable:Throwable):Unit", "kind" : "def"}, {"label" : "logError", "tail" : "(msg: ⇒ String): Unit", "member" : "org.apache.spark.internal.Logging.logError", "link" : "org\/apache\/spark\/streaming\/StreamingContext.html#logError(msg:=>String):Unit", "kind" : "def"}, {"label" : "logWarning", "tail" : "(msg: ⇒ String): Unit", "member" : "org.apache.spark.internal.Logging.logWarning", "link" : "org\/apache\/spark\/streaming\/StreamingContext.html#logWarning(msg:=>String):Unit", "kind" : "def"}, {"label" : "logTrace", "tail" : "(msg: ⇒ String): Unit", "member" : "org.apache.spark.internal.Logging.logTrace", "link" : "org\/apache\/spark\/streaming\/StreamingContext.html#logTrace(msg:=>String):Unit", "kind" : "def"}, {"label" : "logDebug", "tail" : "(msg: ⇒ String): Unit", "member" : "org.apache.spark.internal.Logging.logDebug", "link" : "org\/apache\/spark\/streaming\/StreamingContext.html#logDebug(msg:=>String):Unit", "kind" : "def"}, {"label" : "logInfo", "tail" : "(msg: ⇒ String): Unit", "member" : "org.apache.spark.internal.Logging.logInfo", "link" : "org\/apache\/spark\/streaming\/StreamingContext.html#logInfo(msg:=>String):Unit", "kind" : "def"}, {"label" : "log", "tail" : "(): Logger", "member" : "org.apache.spark.internal.Logging.log", "link" : "org\/apache\/spark\/streaming\/StreamingContext.html#log:org.slf4j.Logger", "kind" : "def"}, {"label" : "logName", "tail" : "(): String", "member" : "org.apache.spark.internal.Logging.logName", "link" : "org\/apache\/spark\/streaming\/StreamingContext.html#logName:String", "kind" : "def"}, {"label" : "synchronized", "tail" : "(arg0: ⇒ T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "org\/apache\/spark\/streaming\/StreamingContext.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "org\/apache\/spark\/streaming\/StreamingContext.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "org\/apache\/spark\/streaming\/StreamingContext.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "org\/apache\/spark\/streaming\/StreamingContext.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "org\/apache\/spark\/streaming\/StreamingContext.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "org\/apache\/spark\/streaming\/StreamingContext.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "org\/apache\/spark\/streaming\/StreamingContext.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "org\/apache\/spark\/streaming\/StreamingContext.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "org\/apache\/spark\/streaming\/StreamingContext.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "org\/apache\/spark\/streaming\/StreamingContext.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "org\/apache\/spark\/streaming\/StreamingContext.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "org\/apache\/spark\/streaming\/StreamingContext.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "org\/apache\/spark\/streaming\/StreamingContext.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "org\/apache\/spark\/streaming\/StreamingContext.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.equals", "link" : "org\/apache\/spark\/streaming\/StreamingContext.html#equals(x$1:Any):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "org\/apache\/spark\/streaming\/StreamingContext.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_]", "member" : "scala.AnyRef.getClass", "link" : "org\/apache\/spark\/streaming\/StreamingContext.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "org\/apache\/spark\/streaming\/StreamingContext.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "org\/apache\/spark\/streaming\/StreamingContext.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "members_object" : [{"label" : "jarOfClass", "tail" : "(cls: Class[_]): Option[String]", "member" : "org.apache.spark.streaming.StreamingContext.jarOfClass", "link" : "org\/apache\/spark\/streaming\/StreamingContext$.html#jarOfClass(cls:Class[_]):Option[String]", "kind" : "def"}, {"label" : "getOrCreate", "tail" : "(checkpointPath: String, creatingFunc: () ⇒ StreamingContext, hadoopConf: Configuration, createOnError: Boolean): StreamingContext", "member" : "org.apache.spark.streaming.StreamingContext.getOrCreate", "link" : "org\/apache\/spark\/streaming\/StreamingContext$.html#getOrCreate(checkpointPath:String,creatingFunc:()=>org.apache.spark.streaming.StreamingContext,hadoopConf:org.apache.hadoop.conf.Configuration,createOnError:Boolean):org.apache.spark.streaming.StreamingContext", "kind" : "def"}, {"label" : "getActiveOrCreate", "tail" : "(checkpointPath: String, creatingFunc: () ⇒ StreamingContext, hadoopConf: Configuration, createOnError: Boolean): StreamingContext", "member" : "org.apache.spark.streaming.StreamingContext.getActiveOrCreate", "link" : "org\/apache\/spark\/streaming\/StreamingContext$.html#getActiveOrCreate(checkpointPath:String,creatingFunc:()=>org.apache.spark.streaming.StreamingContext,hadoopConf:org.apache.hadoop.conf.Configuration,createOnError:Boolean):org.apache.spark.streaming.StreamingContext", "kind" : "def"}, {"label" : "getActiveOrCreate", "tail" : "(creatingFunc: () ⇒ StreamingContext): StreamingContext", "member" : "org.apache.spark.streaming.StreamingContext.getActiveOrCreate", "link" : "org\/apache\/spark\/streaming\/StreamingContext$.html#getActiveOrCreate(creatingFunc:()=>org.apache.spark.streaming.StreamingContext):org.apache.spark.streaming.StreamingContext", "kind" : "def"}, {"label" : "getActive", "tail" : "(): Option[StreamingContext]", "member" : "org.apache.spark.streaming.StreamingContext.getActive", "link" : "org\/apache\/spark\/streaming\/StreamingContext$.html#getActive():Option[org.apache.spark.streaming.StreamingContext]", "kind" : "def"}, {"label" : "initializeLogIfNecessary", "tail" : "(isInterpreter: Boolean, silent: Boolean): Boolean", "member" : "org.apache.spark.internal.Logging.initializeLogIfNecessary", "link" : "org\/apache\/spark\/streaming\/StreamingContext$.html#initializeLogIfNecessary(isInterpreter:Boolean,silent:Boolean):Boolean", "kind" : "def"}, {"label" : "initializeLogIfNecessary", "tail" : "(isInterpreter: Boolean): Unit", "member" : "org.apache.spark.internal.Logging.initializeLogIfNecessary", "link" : "org\/apache\/spark\/streaming\/StreamingContext$.html#initializeLogIfNecessary(isInterpreter:Boolean):Unit", "kind" : "def"}, {"label" : "isTraceEnabled", "tail" : "(): Boolean", "member" : "org.apache.spark.internal.Logging.isTraceEnabled", "link" : "org\/apache\/spark\/streaming\/StreamingContext$.html#isTraceEnabled():Boolean", "kind" : "def"}, {"label" : "logError", "tail" : "(msg: ⇒ String, throwable: Throwable): Unit", "member" : "org.apache.spark.internal.Logging.logError", "link" : "org\/apache\/spark\/streaming\/StreamingContext$.html#logError(msg:=>String,throwable:Throwable):Unit", "kind" : "def"}, {"label" : "logWarning", "tail" : "(msg: ⇒ String, throwable: Throwable): Unit", "member" : "org.apache.spark.internal.Logging.logWarning", "link" : "org\/apache\/spark\/streaming\/StreamingContext$.html#logWarning(msg:=>String,throwable:Throwable):Unit", "kind" : "def"}, {"label" : "logTrace", "tail" : "(msg: ⇒ String, throwable: Throwable): Unit", "member" : "org.apache.spark.internal.Logging.logTrace", "link" : "org\/apache\/spark\/streaming\/StreamingContext$.html#logTrace(msg:=>String,throwable:Throwable):Unit", "kind" : "def"}, {"label" : "logDebug", "tail" : "(msg: ⇒ String, throwable: Throwable): Unit", "member" : "org.apache.spark.internal.Logging.logDebug", "link" : "org\/apache\/spark\/streaming\/StreamingContext$.html#logDebug(msg:=>String,throwable:Throwable):Unit", "kind" : "def"}, {"label" : "logInfo", "tail" : "(msg: ⇒ String, throwable: Throwable): Unit", "member" : "org.apache.spark.internal.Logging.logInfo", "link" : "org\/apache\/spark\/streaming\/StreamingContext$.html#logInfo(msg:=>String,throwable:Throwable):Unit", "kind" : "def"}, {"label" : "logError", "tail" : "(msg: ⇒ String): Unit", "member" : "org.apache.spark.internal.Logging.logError", "link" : "org\/apache\/spark\/streaming\/StreamingContext$.html#logError(msg:=>String):Unit", "kind" : "def"}, {"label" : "logWarning", "tail" : "(msg: ⇒ String): Unit", "member" : "org.apache.spark.internal.Logging.logWarning", "link" : "org\/apache\/spark\/streaming\/StreamingContext$.html#logWarning(msg:=>String):Unit", "kind" : "def"}, {"label" : "logTrace", "tail" : "(msg: ⇒ String): Unit", "member" : "org.apache.spark.internal.Logging.logTrace", "link" : "org\/apache\/spark\/streaming\/StreamingContext$.html#logTrace(msg:=>String):Unit", "kind" : "def"}, {"label" : "logDebug", "tail" : "(msg: ⇒ String): Unit", "member" : "org.apache.spark.internal.Logging.logDebug", "link" : "org\/apache\/spark\/streaming\/StreamingContext$.html#logDebug(msg:=>String):Unit", "kind" : "def"}, {"label" : "logInfo", "tail" : "(msg: ⇒ String): Unit", "member" : "org.apache.spark.internal.Logging.logInfo", "link" : "org\/apache\/spark\/streaming\/StreamingContext$.html#logInfo(msg:=>String):Unit", "kind" : "def"}, {"label" : "log", "tail" : "(): Logger", "member" : "org.apache.spark.internal.Logging.log", "link" : "org\/apache\/spark\/streaming\/StreamingContext$.html#log:org.slf4j.Logger", "kind" : "def"}, {"label" : "logName", "tail" : "(): String", "member" : "org.apache.spark.internal.Logging.logName", "link" : "org\/apache\/spark\/streaming\/StreamingContext$.html#logName:String", "kind" : "def"}, {"label" : "synchronized", "tail" : "(arg0: ⇒ T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "org\/apache\/spark\/streaming\/StreamingContext$.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "org\/apache\/spark\/streaming\/StreamingContext$.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "org\/apache\/spark\/streaming\/StreamingContext$.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "org\/apache\/spark\/streaming\/StreamingContext$.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "org\/apache\/spark\/streaming\/StreamingContext$.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "org\/apache\/spark\/streaming\/StreamingContext$.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "org\/apache\/spark\/streaming\/StreamingContext$.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "org\/apache\/spark\/streaming\/StreamingContext$.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "org\/apache\/spark\/streaming\/StreamingContext$.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "org\/apache\/spark\/streaming\/StreamingContext$.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "org\/apache\/spark\/streaming\/StreamingContext$.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "org\/apache\/spark\/streaming\/StreamingContext$.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "org\/apache\/spark\/streaming\/StreamingContext$.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "org\/apache\/spark\/streaming\/StreamingContext$.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.equals", "link" : "org\/apache\/spark\/streaming\/StreamingContext$.html#equals(x$1:Any):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "org\/apache\/spark\/streaming\/StreamingContext$.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_]", "member" : "scala.AnyRef.getClass", "link" : "org\/apache\/spark\/streaming\/StreamingContext$.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "org\/apache\/spark\/streaming\/StreamingContext$.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "org\/apache\/spark\/streaming\/StreamingContext$.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "class" : "org\/apache\/spark\/streaming\/StreamingContext.html", "kind" : "class"}, {"name" : "org.apache.spark.streaming.StreamingContextState", "shortDescription" : ":: DeveloperApi ::", "members_class" : [{"label" : "finalize", "tail" : "(): Unit", "member" : "java.lang.Enum.finalize", "link" : "org\/apache\/spark\/streaming\/StreamingContextState.html#finalize():Unit", "kind" : "final def"}, {"label" : "getDeclaringClass", "tail" : "(): Class[StreamingContextState]", "member" : "java.lang.Enum.getDeclaringClass", "link" : "org\/apache\/spark\/streaming\/StreamingContextState.html#getDeclaringClass():Class[E]", "kind" : "final def"}, {"label" : "compareTo", "tail" : "(arg0: StreamingContextState): Int", "member" : "java.lang.Enum.compareTo", "link" : "org\/apache\/spark\/streaming\/StreamingContextState.html#compareTo(x$1:E):Int", "kind" : "final def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "java.lang.Enum.clone", "link" : "org\/apache\/spark\/streaming\/StreamingContextState.html#clone():Object", "kind" : "final def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "java.lang.Enum.hashCode", "link" : "org\/apache\/spark\/streaming\/StreamingContextState.html#hashCode():Int", "kind" : "final def"}, {"label" : "equals", "tail" : "(arg0: Any): Boolean", "member" : "java.lang.Enum.equals", "link" : "org\/apache\/spark\/streaming\/StreamingContextState.html#equals(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "java.lang.Enum.toString", "link" : "org\/apache\/spark\/streaming\/StreamingContextState.html#toString():String", "kind" : "def"}, {"label" : "ordinal", "tail" : "(): Int", "member" : "java.lang.Enum.ordinal", "link" : "org\/apache\/spark\/streaming\/StreamingContextState.html#ordinal():Int", "kind" : "final def"}, {"label" : "name", "tail" : "(): String", "member" : "java.lang.Enum.name", "link" : "org\/apache\/spark\/streaming\/StreamingContextState.html#name():String", "kind" : "final def"}, {"label" : "synchronized", "tail" : "(arg0: ⇒ T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "org\/apache\/spark\/streaming\/StreamingContextState.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "org\/apache\/spark\/streaming\/StreamingContextState.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "org\/apache\/spark\/streaming\/StreamingContextState.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "org\/apache\/spark\/streaming\/StreamingContextState.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "org\/apache\/spark\/streaming\/StreamingContextState.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "org\/apache\/spark\/streaming\/StreamingContextState.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "org\/apache\/spark\/streaming\/StreamingContextState.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "org\/apache\/spark\/streaming\/StreamingContextState.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "org\/apache\/spark\/streaming\/StreamingContextState.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "org\/apache\/spark\/streaming\/StreamingContextState.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "org\/apache\/spark\/streaming\/StreamingContextState.html#notify():Unit", "kind" : "final def"}, {"label" : "getClass", "tail" : "(): Class[_]", "member" : "scala.AnyRef.getClass", "link" : "org\/apache\/spark\/streaming\/StreamingContextState.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "org\/apache\/spark\/streaming\/StreamingContextState.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "org\/apache\/spark\/streaming\/StreamingContextState.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "class" : "org\/apache\/spark\/streaming\/StreamingContextState.html", "kind" : "class"}, {"name" : "org.apache.spark.streaming.Time", "shortDescription" : "This is a simple class that represents an absolute instant of time.", "object" : "org\/apache\/spark\/streaming\/Time$.html", "members_object" : [{"label" : "ordering", "tail" : ": Ordering[Time]", "member" : "org.apache.spark.streaming.Time.ordering", "link" : "org\/apache\/spark\/streaming\/Time$.html#ordering:scala.math.Ordering[org.apache.spark.streaming.Time]", "kind" : "implicit val"}, {"label" : "synchronized", "tail" : "(arg0: ⇒ T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "org\/apache\/spark\/streaming\/Time$.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "org\/apache\/spark\/streaming\/Time$.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "org\/apache\/spark\/streaming\/Time$.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "org\/apache\/spark\/streaming\/Time$.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "org\/apache\/spark\/streaming\/Time$.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "org\/apache\/spark\/streaming\/Time$.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "org\/apache\/spark\/streaming\/Time$.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "org\/apache\/spark\/streaming\/Time$.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "org\/apache\/spark\/streaming\/Time$.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "org\/apache\/spark\/streaming\/Time$.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "org\/apache\/spark\/streaming\/Time$.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "org\/apache\/spark\/streaming\/Time$.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "org\/apache\/spark\/streaming\/Time$.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "org\/apache\/spark\/streaming\/Time$.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.equals", "link" : "org\/apache\/spark\/streaming\/Time$.html#equals(x$1:Any):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "org\/apache\/spark\/streaming\/Time$.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_]", "member" : "scala.AnyRef.getClass", "link" : "org\/apache\/spark\/streaming\/Time$.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "org\/apache\/spark\/streaming\/Time$.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "org\/apache\/spark\/streaming\/Time$.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "members_case class" : [{"label" : "toString", "tail" : "(): String", "member" : "org.apache.spark.streaming.Time.toString", "link" : "org\/apache\/spark\/streaming\/Time.html#toString():String", "kind" : "def"}, {"label" : "to", "tail" : "(that: Time, interval: Duration): Seq[Time]", "member" : "org.apache.spark.streaming.Time.to", "link" : "org\/apache\/spark\/streaming\/Time.html#to(that:org.apache.spark.streaming.Time,interval:org.apache.spark.streaming.Duration):Seq[org.apache.spark.streaming.Time]", "kind" : "def"}, {"label" : "until", "tail" : "(that: Time, interval: Duration): Seq[Time]", "member" : "org.apache.spark.streaming.Time.until", "link" : "org\/apache\/spark\/streaming\/Time.html#until(that:org.apache.spark.streaming.Time,interval:org.apache.spark.streaming.Duration):Seq[org.apache.spark.streaming.Time]", "kind" : "def"}, {"label" : "max", "tail" : "(that: Time): Time", "member" : "org.apache.spark.streaming.Time.max", "link" : "org\/apache\/spark\/streaming\/Time.html#max(that:org.apache.spark.streaming.Time):org.apache.spark.streaming.Time", "kind" : "def"}, {"label" : "min", "tail" : "(that: Time): Time", "member" : "org.apache.spark.streaming.Time.min", "link" : "org\/apache\/spark\/streaming\/Time.html#min(that:org.apache.spark.streaming.Time):org.apache.spark.streaming.Time", "kind" : "def"}, {"label" : "isMultipleOf", "tail" : "(that: Duration): Boolean", "member" : "org.apache.spark.streaming.Time.isMultipleOf", "link" : "org\/apache\/spark\/streaming\/Time.html#isMultipleOf(that:org.apache.spark.streaming.Duration):Boolean", "kind" : "def"}, {"label" : "floor", "tail" : "(that: Duration, zeroTime: Time): Time", "member" : "org.apache.spark.streaming.Time.floor", "link" : "org\/apache\/spark\/streaming\/Time.html#floor(that:org.apache.spark.streaming.Duration,zeroTime:org.apache.spark.streaming.Time):org.apache.spark.streaming.Time", "kind" : "def"}, {"label" : "floor", "tail" : "(that: Duration): Time", "member" : "org.apache.spark.streaming.Time.floor", "link" : "org\/apache\/spark\/streaming\/Time.html#floor(that:org.apache.spark.streaming.Duration):org.apache.spark.streaming.Time", "kind" : "def"}, {"label" : "minus", "tail" : "(that: Duration): Time", "member" : "org.apache.spark.streaming.Time.minus", "link" : "org\/apache\/spark\/streaming\/Time.html#minus(that:org.apache.spark.streaming.Duration):org.apache.spark.streaming.Time", "kind" : "def"}, {"label" : "minus", "tail" : "(that: Time): Duration", "member" : "org.apache.spark.streaming.Time.minus", "link" : "org\/apache\/spark\/streaming\/Time.html#minus(that:org.apache.spark.streaming.Time):org.apache.spark.streaming.Duration", "kind" : "def"}, {"label" : "plus", "tail" : "(that: Duration): Time", "member" : "org.apache.spark.streaming.Time.plus", "link" : "org\/apache\/spark\/streaming\/Time.html#plus(that:org.apache.spark.streaming.Duration):org.apache.spark.streaming.Time", "kind" : "def"}, {"label" : "greaterEq", "tail" : "(that: Time): Boolean", "member" : "org.apache.spark.streaming.Time.greaterEq", "link" : "org\/apache\/spark\/streaming\/Time.html#greaterEq(that:org.apache.spark.streaming.Time):Boolean", "kind" : "def"}, {"label" : "greater", "tail" : "(that: Time): Boolean", "member" : "org.apache.spark.streaming.Time.greater", "link" : "org\/apache\/spark\/streaming\/Time.html#greater(that:org.apache.spark.streaming.Time):Boolean", "kind" : "def"}, {"label" : "lessEq", "tail" : "(that: Time): Boolean", "member" : "org.apache.spark.streaming.Time.lessEq", "link" : "org\/apache\/spark\/streaming\/Time.html#lessEq(that:org.apache.spark.streaming.Time):Boolean", "kind" : "def"}, {"label" : "less", "tail" : "(that: Time): Boolean", "member" : "org.apache.spark.streaming.Time.less", "link" : "org\/apache\/spark\/streaming\/Time.html#less(that:org.apache.spark.streaming.Time):Boolean", "kind" : "def"}, {"label" : "-", "tail" : "(that: Duration): Time", "member" : "org.apache.spark.streaming.Time.-", "link" : "org\/apache\/spark\/streaming\/Time.html#-(that:org.apache.spark.streaming.Duration):org.apache.spark.streaming.Time", "kind" : "def"}, {"label" : "-", "tail" : "(that: Time): Duration", "member" : "org.apache.spark.streaming.Time.-", "link" : "org\/apache\/spark\/streaming\/Time.html#-(that:org.apache.spark.streaming.Time):org.apache.spark.streaming.Duration", "kind" : "def"}, {"label" : "+", "tail" : "(that: Duration): Time", "member" : "org.apache.spark.streaming.Time.+", "link" : "org\/apache\/spark\/streaming\/Time.html#+(that:org.apache.spark.streaming.Duration):org.apache.spark.streaming.Time", "kind" : "def"}, {"label" : ">=", "tail" : "(that: Time): Boolean", "member" : "org.apache.spark.streaming.Time.>=", "link" : "org\/apache\/spark\/streaming\/Time.html#>=(that:org.apache.spark.streaming.Time):Boolean", "kind" : "def"}, {"label" : ">", "tail" : "(that: Time): Boolean", "member" : "org.apache.spark.streaming.Time.>", "link" : "org\/apache\/spark\/streaming\/Time.html#>(that:org.apache.spark.streaming.Time):Boolean", "kind" : "def"}, {"label" : "<=", "tail" : "(that: Time): Boolean", "member" : "org.apache.spark.streaming.Time.<=", "link" : "org\/apache\/spark\/streaming\/Time.html#<=(that:org.apache.spark.streaming.Time):Boolean", "kind" : "def"}, {"label" : "<", "tail" : "(that: Time): Boolean", "member" : "org.apache.spark.streaming.Time.<", "link" : "org\/apache\/spark\/streaming\/Time.html#<(that:org.apache.spark.streaming.Time):Boolean", "kind" : "def"}, {"label" : "milliseconds", "tail" : "(): Long", "member" : "org.apache.spark.streaming.Time.milliseconds", "link" : "org\/apache\/spark\/streaming\/Time.html#milliseconds:Long", "kind" : "def"}, {"member" : "org.apache.spark.streaming.Time#<init>", "error" : "unsupported entity"}, {"label" : "synchronized", "tail" : "(arg0: ⇒ T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "org\/apache\/spark\/streaming\/Time.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "org\/apache\/spark\/streaming\/Time.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "org\/apache\/spark\/streaming\/Time.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "org\/apache\/spark\/streaming\/Time.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "org\/apache\/spark\/streaming\/Time.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "org\/apache\/spark\/streaming\/Time.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "org\/apache\/spark\/streaming\/Time.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "org\/apache\/spark\/streaming\/Time.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "org\/apache\/spark\/streaming\/Time.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "org\/apache\/spark\/streaming\/Time.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "org\/apache\/spark\/streaming\/Time.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "org\/apache\/spark\/streaming\/Time.html#notify():Unit", "kind" : "final def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "org\/apache\/spark\/streaming\/Time.html#clone():Object", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_]", "member" : "scala.AnyRef.getClass", "link" : "org\/apache\/spark\/streaming\/Time.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "org\/apache\/spark\/streaming\/Time.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "org\/apache\/spark\/streaming\/Time.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "case class" : "org\/apache\/spark\/streaming\/Time.html", "kind" : "case class"}], "org.apache.spark.streaming.scheduler" : [{"name" : "org.apache.spark.streaming.scheduler.BatchInfo", "shortDescription" : ":: DeveloperApi ::Class having information on completed batches.", "members_case class" : [{"label" : "numRecords", "tail" : "(): Long", "member" : "org.apache.spark.streaming.scheduler.BatchInfo.numRecords", "link" : "org\/apache\/spark\/streaming\/scheduler\/BatchInfo.html#numRecords:Long", "kind" : "def"}, {"label" : "totalDelay", "tail" : "(): Option[Long]", "member" : "org.apache.spark.streaming.scheduler.BatchInfo.totalDelay", "link" : "org\/apache\/spark\/streaming\/scheduler\/BatchInfo.html#totalDelay:Option[Long]", "kind" : "def"}, {"label" : "processingDelay", "tail" : "(): Option[Long]", "member" : "org.apache.spark.streaming.scheduler.BatchInfo.processingDelay", "link" : "org\/apache\/spark\/streaming\/scheduler\/BatchInfo.html#processingDelay:Option[Long]", "kind" : "def"}, {"label" : "schedulingDelay", "tail" : "(): Option[Long]", "member" : "org.apache.spark.streaming.scheduler.BatchInfo.schedulingDelay", "link" : "org\/apache\/spark\/streaming\/scheduler\/BatchInfo.html#schedulingDelay:Option[Long]", "kind" : "def"}, {"member" : "org.apache.spark.streaming.scheduler.BatchInfo#<init>", "error" : "unsupported entity"}, {"label" : "outputOperationInfos", "tail" : ": Map[Int, OutputOperationInfo]", "member" : "org.apache.spark.streaming.scheduler.BatchInfo.outputOperationInfos", "link" : "org\/apache\/spark\/streaming\/scheduler\/BatchInfo.html#outputOperationInfos:Map[Int,org.apache.spark.streaming.scheduler.OutputOperationInfo]", "kind" : "val"}, {"label" : "processingEndTime", "tail" : ": Option[Long]", "member" : "org.apache.spark.streaming.scheduler.BatchInfo.processingEndTime", "link" : "org\/apache\/spark\/streaming\/scheduler\/BatchInfo.html#processingEndTime:Option[Long]", "kind" : "val"}, {"label" : "processingStartTime", "tail" : ": Option[Long]", "member" : "org.apache.spark.streaming.scheduler.BatchInfo.processingStartTime", "link" : "org\/apache\/spark\/streaming\/scheduler\/BatchInfo.html#processingStartTime:Option[Long]", "kind" : "val"}, {"label" : "submissionTime", "tail" : ": Long", "member" : "org.apache.spark.streaming.scheduler.BatchInfo.submissionTime", "link" : "org\/apache\/spark\/streaming\/scheduler\/BatchInfo.html#submissionTime:Long", "kind" : "val"}, {"label" : "streamIdToInputInfo", "tail" : ": Map[Int, StreamInputInfo]", "member" : "org.apache.spark.streaming.scheduler.BatchInfo.streamIdToInputInfo", "link" : "org\/apache\/spark\/streaming\/scheduler\/BatchInfo.html#streamIdToInputInfo:Map[Int,org.apache.spark.streaming.scheduler.StreamInputInfo]", "kind" : "val"}, {"label" : "batchTime", "tail" : ": Time", "member" : "org.apache.spark.streaming.scheduler.BatchInfo.batchTime", "link" : "org\/apache\/spark\/streaming\/scheduler\/BatchInfo.html#batchTime:org.apache.spark.streaming.Time", "kind" : "val"}, {"label" : "synchronized", "tail" : "(arg0: ⇒ T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "org\/apache\/spark\/streaming\/scheduler\/BatchInfo.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "org\/apache\/spark\/streaming\/scheduler\/BatchInfo.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "org\/apache\/spark\/streaming\/scheduler\/BatchInfo.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "org\/apache\/spark\/streaming\/scheduler\/BatchInfo.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "org\/apache\/spark\/streaming\/scheduler\/BatchInfo.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "org\/apache\/spark\/streaming\/scheduler\/BatchInfo.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "org\/apache\/spark\/streaming\/scheduler\/BatchInfo.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "org\/apache\/spark\/streaming\/scheduler\/BatchInfo.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "org\/apache\/spark\/streaming\/scheduler\/BatchInfo.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "org\/apache\/spark\/streaming\/scheduler\/BatchInfo.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "org\/apache\/spark\/streaming\/scheduler\/BatchInfo.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "org\/apache\/spark\/streaming\/scheduler\/BatchInfo.html#notify():Unit", "kind" : "final def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "org\/apache\/spark\/streaming\/scheduler\/BatchInfo.html#clone():Object", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_]", "member" : "scala.AnyRef.getClass", "link" : "org\/apache\/spark\/streaming\/scheduler\/BatchInfo.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "org\/apache\/spark\/streaming\/scheduler\/BatchInfo.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "org\/apache\/spark\/streaming\/scheduler\/BatchInfo.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "case class" : "org\/apache\/spark\/streaming\/scheduler\/BatchInfo.html", "kind" : "case class"}, {"name" : "org.apache.spark.streaming.scheduler.OutputOperationInfo", "shortDescription" : ":: DeveloperApi ::Class having information on output operations.", "members_case class" : [{"label" : "duration", "tail" : "(): Option[Long]", "member" : "org.apache.spark.streaming.scheduler.OutputOperationInfo.duration", "link" : "org\/apache\/spark\/streaming\/scheduler\/OutputOperationInfo.html#duration:Option[Long]", "kind" : "def"}, {"member" : "org.apache.spark.streaming.scheduler.OutputOperationInfo#<init>", "error" : "unsupported entity"}, {"label" : "failureReason", "tail" : ": Option[String]", "member" : "org.apache.spark.streaming.scheduler.OutputOperationInfo.failureReason", "link" : "org\/apache\/spark\/streaming\/scheduler\/OutputOperationInfo.html#failureReason:Option[String]", "kind" : "val"}, {"label" : "endTime", "tail" : ": Option[Long]", "member" : "org.apache.spark.streaming.scheduler.OutputOperationInfo.endTime", "link" : "org\/apache\/spark\/streaming\/scheduler\/OutputOperationInfo.html#endTime:Option[Long]", "kind" : "val"}, {"label" : "startTime", "tail" : ": Option[Long]", "member" : "org.apache.spark.streaming.scheduler.OutputOperationInfo.startTime", "link" : "org\/apache\/spark\/streaming\/scheduler\/OutputOperationInfo.html#startTime:Option[Long]", "kind" : "val"}, {"label" : "description", "tail" : ": String", "member" : "org.apache.spark.streaming.scheduler.OutputOperationInfo.description", "link" : "org\/apache\/spark\/streaming\/scheduler\/OutputOperationInfo.html#description:String", "kind" : "val"}, {"label" : "name", "tail" : ": String", "member" : "org.apache.spark.streaming.scheduler.OutputOperationInfo.name", "link" : "org\/apache\/spark\/streaming\/scheduler\/OutputOperationInfo.html#name:String", "kind" : "val"}, {"label" : "id", "tail" : ": Int", "member" : "org.apache.spark.streaming.scheduler.OutputOperationInfo.id", "link" : "org\/apache\/spark\/streaming\/scheduler\/OutputOperationInfo.html#id:Int", "kind" : "val"}, {"label" : "batchTime", "tail" : ": Time", "member" : "org.apache.spark.streaming.scheduler.OutputOperationInfo.batchTime", "link" : "org\/apache\/spark\/streaming\/scheduler\/OutputOperationInfo.html#batchTime:org.apache.spark.streaming.Time", "kind" : "val"}, {"label" : "synchronized", "tail" : "(arg0: ⇒ T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "org\/apache\/spark\/streaming\/scheduler\/OutputOperationInfo.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "org\/apache\/spark\/streaming\/scheduler\/OutputOperationInfo.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "org\/apache\/spark\/streaming\/scheduler\/OutputOperationInfo.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "org\/apache\/spark\/streaming\/scheduler\/OutputOperationInfo.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "org\/apache\/spark\/streaming\/scheduler\/OutputOperationInfo.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "org\/apache\/spark\/streaming\/scheduler\/OutputOperationInfo.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "org\/apache\/spark\/streaming\/scheduler\/OutputOperationInfo.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "org\/apache\/spark\/streaming\/scheduler\/OutputOperationInfo.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "org\/apache\/spark\/streaming\/scheduler\/OutputOperationInfo.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "org\/apache\/spark\/streaming\/scheduler\/OutputOperationInfo.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "org\/apache\/spark\/streaming\/scheduler\/OutputOperationInfo.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "org\/apache\/spark\/streaming\/scheduler\/OutputOperationInfo.html#notify():Unit", "kind" : "final def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "org\/apache\/spark\/streaming\/scheduler\/OutputOperationInfo.html#clone():Object", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_]", "member" : "scala.AnyRef.getClass", "link" : "org\/apache\/spark\/streaming\/scheduler\/OutputOperationInfo.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "org\/apache\/spark\/streaming\/scheduler\/OutputOperationInfo.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "org\/apache\/spark\/streaming\/scheduler\/OutputOperationInfo.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "case class" : "org\/apache\/spark\/streaming\/scheduler\/OutputOperationInfo.html", "kind" : "case class"}, {"name" : "org.apache.spark.streaming.scheduler.RateController", "shortDescription" : "", "object" : "org\/apache\/spark\/streaming\/scheduler\/RateController$.html", "members_object" : [{"label" : "isBackPressureEnabled", "tail" : "(conf: SparkConf): Boolean", "member" : "org.apache.spark.streaming.scheduler.RateController.isBackPressureEnabled", "link" : "org\/apache\/spark\/streaming\/scheduler\/RateController$.html#isBackPressureEnabled(conf:org.apache.spark.SparkConf):Boolean", "kind" : "def"}, {"label" : "synchronized", "tail" : "(arg0: ⇒ T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "org\/apache\/spark\/streaming\/scheduler\/RateController$.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "org\/apache\/spark\/streaming\/scheduler\/RateController$.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "org\/apache\/spark\/streaming\/scheduler\/RateController$.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "org\/apache\/spark\/streaming\/scheduler\/RateController$.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "org\/apache\/spark\/streaming\/scheduler\/RateController$.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "org\/apache\/spark\/streaming\/scheduler\/RateController$.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "org\/apache\/spark\/streaming\/scheduler\/RateController$.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "org\/apache\/spark\/streaming\/scheduler\/RateController$.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "org\/apache\/spark\/streaming\/scheduler\/RateController$.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "org\/apache\/spark\/streaming\/scheduler\/RateController$.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "org\/apache\/spark\/streaming\/scheduler\/RateController$.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "org\/apache\/spark\/streaming\/scheduler\/RateController$.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "org\/apache\/spark\/streaming\/scheduler\/RateController$.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "org\/apache\/spark\/streaming\/scheduler\/RateController$.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.equals", "link" : "org\/apache\/spark\/streaming\/scheduler\/RateController$.html#equals(x$1:Any):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "org\/apache\/spark\/streaming\/scheduler\/RateController$.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_]", "member" : "scala.AnyRef.getClass", "link" : "org\/apache\/spark\/streaming\/scheduler\/RateController$.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "org\/apache\/spark\/streaming\/scheduler\/RateController$.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "org\/apache\/spark\/streaming\/scheduler\/RateController$.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "kind" : "object"}, {"name" : "org.apache.spark.streaming.scheduler.ReceiverInfo", "shortDescription" : ":: DeveloperApi ::Class having information about a receiver", "members_case class" : [{"member" : "org.apache.spark.streaming.scheduler.ReceiverInfo#<init>", "error" : "unsupported entity"}, {"label" : "lastErrorTime", "tail" : ": Long", "member" : "org.apache.spark.streaming.scheduler.ReceiverInfo.lastErrorTime", "link" : "org\/apache\/spark\/streaming\/scheduler\/ReceiverInfo.html#lastErrorTime:Long", "kind" : "val"}, {"label" : "lastError", "tail" : ": String", "member" : "org.apache.spark.streaming.scheduler.ReceiverInfo.lastError", "link" : "org\/apache\/spark\/streaming\/scheduler\/ReceiverInfo.html#lastError:String", "kind" : "val"}, {"label" : "lastErrorMessage", "tail" : ": String", "member" : "org.apache.spark.streaming.scheduler.ReceiverInfo.lastErrorMessage", "link" : "org\/apache\/spark\/streaming\/scheduler\/ReceiverInfo.html#lastErrorMessage:String", "kind" : "val"}, {"label" : "executorId", "tail" : ": String", "member" : "org.apache.spark.streaming.scheduler.ReceiverInfo.executorId", "link" : "org\/apache\/spark\/streaming\/scheduler\/ReceiverInfo.html#executorId:String", "kind" : "val"}, {"label" : "location", "tail" : ": String", "member" : "org.apache.spark.streaming.scheduler.ReceiverInfo.location", "link" : "org\/apache\/spark\/streaming\/scheduler\/ReceiverInfo.html#location:String", "kind" : "val"}, {"label" : "active", "tail" : ": Boolean", "member" : "org.apache.spark.streaming.scheduler.ReceiverInfo.active", "link" : "org\/apache\/spark\/streaming\/scheduler\/ReceiverInfo.html#active:Boolean", "kind" : "val"}, {"label" : "name", "tail" : ": String", "member" : "org.apache.spark.streaming.scheduler.ReceiverInfo.name", "link" : "org\/apache\/spark\/streaming\/scheduler\/ReceiverInfo.html#name:String", "kind" : "val"}, {"label" : "streamId", "tail" : ": Int", "member" : "org.apache.spark.streaming.scheduler.ReceiverInfo.streamId", "link" : "org\/apache\/spark\/streaming\/scheduler\/ReceiverInfo.html#streamId:Int", "kind" : "val"}, {"label" : "synchronized", "tail" : "(arg0: ⇒ T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "org\/apache\/spark\/streaming\/scheduler\/ReceiverInfo.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "org\/apache\/spark\/streaming\/scheduler\/ReceiverInfo.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "org\/apache\/spark\/streaming\/scheduler\/ReceiverInfo.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "org\/apache\/spark\/streaming\/scheduler\/ReceiverInfo.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "org\/apache\/spark\/streaming\/scheduler\/ReceiverInfo.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "org\/apache\/spark\/streaming\/scheduler\/ReceiverInfo.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "org\/apache\/spark\/streaming\/scheduler\/ReceiverInfo.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "org\/apache\/spark\/streaming\/scheduler\/ReceiverInfo.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "org\/apache\/spark\/streaming\/scheduler\/ReceiverInfo.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "org\/apache\/spark\/streaming\/scheduler\/ReceiverInfo.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "org\/apache\/spark\/streaming\/scheduler\/ReceiverInfo.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "org\/apache\/spark\/streaming\/scheduler\/ReceiverInfo.html#notify():Unit", "kind" : "final def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "org\/apache\/spark\/streaming\/scheduler\/ReceiverInfo.html#clone():Object", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_]", "member" : "scala.AnyRef.getClass", "link" : "org\/apache\/spark\/streaming\/scheduler\/ReceiverInfo.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "org\/apache\/spark\/streaming\/scheduler\/ReceiverInfo.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "org\/apache\/spark\/streaming\/scheduler\/ReceiverInfo.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "case class" : "org\/apache\/spark\/streaming\/scheduler\/ReceiverInfo.html", "kind" : "case class"}, {"name" : "org.apache.spark.streaming.scheduler.StatsReportListener", "shortDescription" : ":: DeveloperApi ::A simple StreamingListener that logs summary statistics across Spark Streaming batches", "members_class" : [{"label" : "extractDistribution", "tail" : "(getMetric: (BatchInfo) ⇒ Option[Long]): Option[Distribution]", "member" : "org.apache.spark.streaming.scheduler.StatsReportListener.extractDistribution", "link" : "org\/apache\/spark\/streaming\/scheduler\/StatsReportListener.html#extractDistribution(getMetric:org.apache.spark.streaming.scheduler.BatchInfo=>Option[Long]):Option[org.apache.spark.util.Distribution]", "kind" : "def"}, {"label" : "showMillisDistribution", "tail" : "(heading: String, getMetric: (BatchInfo) ⇒ Option[Long]): Unit", "member" : "org.apache.spark.streaming.scheduler.StatsReportListener.showMillisDistribution", "link" : "org\/apache\/spark\/streaming\/scheduler\/StatsReportListener.html#showMillisDistribution(heading:String,getMetric:org.apache.spark.streaming.scheduler.BatchInfo=>Option[Long]):Unit", "kind" : "def"}, {"label" : "printStats", "tail" : "(): Unit", "member" : "org.apache.spark.streaming.scheduler.StatsReportListener.printStats", "link" : "org\/apache\/spark\/streaming\/scheduler\/StatsReportListener.html#printStats():Unit", "kind" : "def"}, {"label" : "onBatchCompleted", "tail" : "(batchStarted: StreamingListenerBatchCompleted): Unit", "member" : "org.apache.spark.streaming.scheduler.StatsReportListener.onBatchCompleted", "link" : "org\/apache\/spark\/streaming\/scheduler\/StatsReportListener.html#onBatchCompleted(batchStarted:org.apache.spark.streaming.scheduler.StreamingListenerBatchCompleted):Unit", "kind" : "def"}, {"label" : "batchInfos", "tail" : ": Queue[BatchInfo]", "member" : "org.apache.spark.streaming.scheduler.StatsReportListener.batchInfos", "link" : "org\/apache\/spark\/streaming\/scheduler\/StatsReportListener.html#batchInfos:scala.collection.mutable.Queue[org.apache.spark.streaming.scheduler.BatchInfo]", "kind" : "val"}, {"member" : "org.apache.spark.streaming.scheduler.StatsReportListener#<init>", "error" : "unsupported entity"}, {"label" : "onOutputOperationCompleted", "tail" : "(outputOperationCompleted: StreamingListenerOutputOperationCompleted): Unit", "member" : "org.apache.spark.streaming.scheduler.StreamingListener.onOutputOperationCompleted", "link" : "org\/apache\/spark\/streaming\/scheduler\/StatsReportListener.html#onOutputOperationCompleted(outputOperationCompleted:org.apache.spark.streaming.scheduler.StreamingListenerOutputOperationCompleted):Unit", "kind" : "def"}, {"label" : "onOutputOperationStarted", "tail" : "(outputOperationStarted: StreamingListenerOutputOperationStarted): Unit", "member" : "org.apache.spark.streaming.scheduler.StreamingListener.onOutputOperationStarted", "link" : "org\/apache\/spark\/streaming\/scheduler\/StatsReportListener.html#onOutputOperationStarted(outputOperationStarted:org.apache.spark.streaming.scheduler.StreamingListenerOutputOperationStarted):Unit", "kind" : "def"}, {"label" : "onBatchStarted", "tail" : "(batchStarted: StreamingListenerBatchStarted): Unit", "member" : "org.apache.spark.streaming.scheduler.StreamingListener.onBatchStarted", "link" : "org\/apache\/spark\/streaming\/scheduler\/StatsReportListener.html#onBatchStarted(batchStarted:org.apache.spark.streaming.scheduler.StreamingListenerBatchStarted):Unit", "kind" : "def"}, {"label" : "onBatchSubmitted", "tail" : "(batchSubmitted: StreamingListenerBatchSubmitted): Unit", "member" : "org.apache.spark.streaming.scheduler.StreamingListener.onBatchSubmitted", "link" : "org\/apache\/spark\/streaming\/scheduler\/StatsReportListener.html#onBatchSubmitted(batchSubmitted:org.apache.spark.streaming.scheduler.StreamingListenerBatchSubmitted):Unit", "kind" : "def"}, {"label" : "onReceiverStopped", "tail" : "(receiverStopped: StreamingListenerReceiverStopped): Unit", "member" : "org.apache.spark.streaming.scheduler.StreamingListener.onReceiverStopped", "link" : "org\/apache\/spark\/streaming\/scheduler\/StatsReportListener.html#onReceiverStopped(receiverStopped:org.apache.spark.streaming.scheduler.StreamingListenerReceiverStopped):Unit", "kind" : "def"}, {"label" : "onReceiverError", "tail" : "(receiverError: StreamingListenerReceiverError): Unit", "member" : "org.apache.spark.streaming.scheduler.StreamingListener.onReceiverError", "link" : "org\/apache\/spark\/streaming\/scheduler\/StatsReportListener.html#onReceiverError(receiverError:org.apache.spark.streaming.scheduler.StreamingListenerReceiverError):Unit", "kind" : "def"}, {"label" : "onReceiverStarted", "tail" : "(receiverStarted: StreamingListenerReceiverStarted): Unit", "member" : "org.apache.spark.streaming.scheduler.StreamingListener.onReceiverStarted", "link" : "org\/apache\/spark\/streaming\/scheduler\/StatsReportListener.html#onReceiverStarted(receiverStarted:org.apache.spark.streaming.scheduler.StreamingListenerReceiverStarted):Unit", "kind" : "def"}, {"label" : "onStreamingStarted", "tail" : "(streamingStarted: StreamingListenerStreamingStarted): Unit", "member" : "org.apache.spark.streaming.scheduler.StreamingListener.onStreamingStarted", "link" : "org\/apache\/spark\/streaming\/scheduler\/StatsReportListener.html#onStreamingStarted(streamingStarted:org.apache.spark.streaming.scheduler.StreamingListenerStreamingStarted):Unit", "kind" : "def"}, {"label" : "synchronized", "tail" : "(arg0: ⇒ T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "org\/apache\/spark\/streaming\/scheduler\/StatsReportListener.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "org\/apache\/spark\/streaming\/scheduler\/StatsReportListener.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "org\/apache\/spark\/streaming\/scheduler\/StatsReportListener.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "org\/apache\/spark\/streaming\/scheduler\/StatsReportListener.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "org\/apache\/spark\/streaming\/scheduler\/StatsReportListener.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "org\/apache\/spark\/streaming\/scheduler\/StatsReportListener.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "org\/apache\/spark\/streaming\/scheduler\/StatsReportListener.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "org\/apache\/spark\/streaming\/scheduler\/StatsReportListener.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "org\/apache\/spark\/streaming\/scheduler\/StatsReportListener.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "org\/apache\/spark\/streaming\/scheduler\/StatsReportListener.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "org\/apache\/spark\/streaming\/scheduler\/StatsReportListener.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "org\/apache\/spark\/streaming\/scheduler\/StatsReportListener.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "org\/apache\/spark\/streaming\/scheduler\/StatsReportListener.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "org\/apache\/spark\/streaming\/scheduler\/StatsReportListener.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.equals", "link" : "org\/apache\/spark\/streaming\/scheduler\/StatsReportListener.html#equals(x$1:Any):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "org\/apache\/spark\/streaming\/scheduler\/StatsReportListener.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_]", "member" : "scala.AnyRef.getClass", "link" : "org\/apache\/spark\/streaming\/scheduler\/StatsReportListener.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "org\/apache\/spark\/streaming\/scheduler\/StatsReportListener.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "org\/apache\/spark\/streaming\/scheduler\/StatsReportListener.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "class" : "org\/apache\/spark\/streaming\/scheduler\/StatsReportListener.html", "kind" : "class"}, {"name" : "org.apache.spark.streaming.scheduler.StreamingListener", "members_trait" : [{"label" : "onOutputOperationCompleted", "tail" : "(outputOperationCompleted: StreamingListenerOutputOperationCompleted): Unit", "member" : "org.apache.spark.streaming.scheduler.StreamingListener.onOutputOperationCompleted", "link" : "org\/apache\/spark\/streaming\/scheduler\/StreamingListener.html#onOutputOperationCompleted(outputOperationCompleted:org.apache.spark.streaming.scheduler.StreamingListenerOutputOperationCompleted):Unit", "kind" : "def"}, {"label" : "onOutputOperationStarted", "tail" : "(outputOperationStarted: StreamingListenerOutputOperationStarted): Unit", "member" : "org.apache.spark.streaming.scheduler.StreamingListener.onOutputOperationStarted", "link" : "org\/apache\/spark\/streaming\/scheduler\/StreamingListener.html#onOutputOperationStarted(outputOperationStarted:org.apache.spark.streaming.scheduler.StreamingListenerOutputOperationStarted):Unit", "kind" : "def"}, {"label" : "onBatchCompleted", "tail" : "(batchCompleted: StreamingListenerBatchCompleted): Unit", "member" : "org.apache.spark.streaming.scheduler.StreamingListener.onBatchCompleted", "link" : "org\/apache\/spark\/streaming\/scheduler\/StreamingListener.html#onBatchCompleted(batchCompleted:org.apache.spark.streaming.scheduler.StreamingListenerBatchCompleted):Unit", "kind" : "def"}, {"label" : "onBatchStarted", "tail" : "(batchStarted: StreamingListenerBatchStarted): Unit", "member" : "org.apache.spark.streaming.scheduler.StreamingListener.onBatchStarted", "link" : "org\/apache\/spark\/streaming\/scheduler\/StreamingListener.html#onBatchStarted(batchStarted:org.apache.spark.streaming.scheduler.StreamingListenerBatchStarted):Unit", "kind" : "def"}, {"label" : "onBatchSubmitted", "tail" : "(batchSubmitted: StreamingListenerBatchSubmitted): Unit", "member" : "org.apache.spark.streaming.scheduler.StreamingListener.onBatchSubmitted", "link" : "org\/apache\/spark\/streaming\/scheduler\/StreamingListener.html#onBatchSubmitted(batchSubmitted:org.apache.spark.streaming.scheduler.StreamingListenerBatchSubmitted):Unit", "kind" : "def"}, {"label" : "onReceiverStopped", "tail" : "(receiverStopped: StreamingListenerReceiverStopped): Unit", "member" : "org.apache.spark.streaming.scheduler.StreamingListener.onReceiverStopped", "link" : "org\/apache\/spark\/streaming\/scheduler\/StreamingListener.html#onReceiverStopped(receiverStopped:org.apache.spark.streaming.scheduler.StreamingListenerReceiverStopped):Unit", "kind" : "def"}, {"label" : "onReceiverError", "tail" : "(receiverError: StreamingListenerReceiverError): Unit", "member" : "org.apache.spark.streaming.scheduler.StreamingListener.onReceiverError", "link" : "org\/apache\/spark\/streaming\/scheduler\/StreamingListener.html#onReceiverError(receiverError:org.apache.spark.streaming.scheduler.StreamingListenerReceiverError):Unit", "kind" : "def"}, {"label" : "onReceiverStarted", "tail" : "(receiverStarted: StreamingListenerReceiverStarted): Unit", "member" : "org.apache.spark.streaming.scheduler.StreamingListener.onReceiverStarted", "link" : "org\/apache\/spark\/streaming\/scheduler\/StreamingListener.html#onReceiverStarted(receiverStarted:org.apache.spark.streaming.scheduler.StreamingListenerReceiverStarted):Unit", "kind" : "def"}, {"label" : "onStreamingStarted", "tail" : "(streamingStarted: StreamingListenerStreamingStarted): Unit", "member" : "org.apache.spark.streaming.scheduler.StreamingListener.onStreamingStarted", "link" : "org\/apache\/spark\/streaming\/scheduler\/StreamingListener.html#onStreamingStarted(streamingStarted:org.apache.spark.streaming.scheduler.StreamingListenerStreamingStarted):Unit", "kind" : "def"}, {"label" : "synchronized", "tail" : "(arg0: ⇒ T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "org\/apache\/spark\/streaming\/scheduler\/StreamingListener.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "org\/apache\/spark\/streaming\/scheduler\/StreamingListener.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "org\/apache\/spark\/streaming\/scheduler\/StreamingListener.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "org\/apache\/spark\/streaming\/scheduler\/StreamingListener.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "org\/apache\/spark\/streaming\/scheduler\/StreamingListener.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "org\/apache\/spark\/streaming\/scheduler\/StreamingListener.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "org\/apache\/spark\/streaming\/scheduler\/StreamingListener.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "org\/apache\/spark\/streaming\/scheduler\/StreamingListener.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "org\/apache\/spark\/streaming\/scheduler\/StreamingListener.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "org\/apache\/spark\/streaming\/scheduler\/StreamingListener.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "org\/apache\/spark\/streaming\/scheduler\/StreamingListener.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "org\/apache\/spark\/streaming\/scheduler\/StreamingListener.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "org\/apache\/spark\/streaming\/scheduler\/StreamingListener.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "org\/apache\/spark\/streaming\/scheduler\/StreamingListener.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.equals", "link" : "org\/apache\/spark\/streaming\/scheduler\/StreamingListener.html#equals(x$1:Any):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "org\/apache\/spark\/streaming\/scheduler\/StreamingListener.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_]", "member" : "scala.AnyRef.getClass", "link" : "org\/apache\/spark\/streaming\/scheduler\/StreamingListener.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "org\/apache\/spark\/streaming\/scheduler\/StreamingListener.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "org\/apache\/spark\/streaming\/scheduler\/StreamingListener.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "shortDescription" : ":: DeveloperApi ::A listener interface for receiving information about an ongoing streamingcomputation.", "trait" : "org\/apache\/spark\/streaming\/scheduler\/StreamingListener.html", "kind" : "trait"}, {"name" : "org.apache.spark.streaming.scheduler.StreamingListenerBatchCompleted", "shortDescription" : "", "members_case class" : [{"member" : "org.apache.spark.streaming.scheduler.StreamingListenerBatchCompleted#<init>", "error" : "unsupported entity"}, {"label" : "batchInfo", "tail" : ": BatchInfo", "member" : "org.apache.spark.streaming.scheduler.StreamingListenerBatchCompleted.batchInfo", "link" : "org\/apache\/spark\/streaming\/scheduler\/StreamingListenerBatchCompleted.html#batchInfo:org.apache.spark.streaming.scheduler.BatchInfo", "kind" : "val"}, {"label" : "synchronized", "tail" : "(arg0: ⇒ T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "org\/apache\/spark\/streaming\/scheduler\/StreamingListenerBatchCompleted.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "org\/apache\/spark\/streaming\/scheduler\/StreamingListenerBatchCompleted.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "org\/apache\/spark\/streaming\/scheduler\/StreamingListenerBatchCompleted.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "org\/apache\/spark\/streaming\/scheduler\/StreamingListenerBatchCompleted.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "org\/apache\/spark\/streaming\/scheduler\/StreamingListenerBatchCompleted.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "org\/apache\/spark\/streaming\/scheduler\/StreamingListenerBatchCompleted.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "org\/apache\/spark\/streaming\/scheduler\/StreamingListenerBatchCompleted.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "org\/apache\/spark\/streaming\/scheduler\/StreamingListenerBatchCompleted.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "org\/apache\/spark\/streaming\/scheduler\/StreamingListenerBatchCompleted.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "org\/apache\/spark\/streaming\/scheduler\/StreamingListenerBatchCompleted.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "org\/apache\/spark\/streaming\/scheduler\/StreamingListenerBatchCompleted.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "org\/apache\/spark\/streaming\/scheduler\/StreamingListenerBatchCompleted.html#notify():Unit", "kind" : "final def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "org\/apache\/spark\/streaming\/scheduler\/StreamingListenerBatchCompleted.html#clone():Object", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_]", "member" : "scala.AnyRef.getClass", "link" : "org\/apache\/spark\/streaming\/scheduler\/StreamingListenerBatchCompleted.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "org\/apache\/spark\/streaming\/scheduler\/StreamingListenerBatchCompleted.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "org\/apache\/spark\/streaming\/scheduler\/StreamingListenerBatchCompleted.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "case class" : "org\/apache\/spark\/streaming\/scheduler\/StreamingListenerBatchCompleted.html", "kind" : "case class"}, {"name" : "org.apache.spark.streaming.scheduler.StreamingListenerBatchStarted", "shortDescription" : "", "members_case class" : [{"member" : "org.apache.spark.streaming.scheduler.StreamingListenerBatchStarted#<init>", "error" : "unsupported entity"}, {"label" : "batchInfo", "tail" : ": BatchInfo", "member" : "org.apache.spark.streaming.scheduler.StreamingListenerBatchStarted.batchInfo", "link" : "org\/apache\/spark\/streaming\/scheduler\/StreamingListenerBatchStarted.html#batchInfo:org.apache.spark.streaming.scheduler.BatchInfo", "kind" : "val"}, {"label" : "synchronized", "tail" : "(arg0: ⇒ T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "org\/apache\/spark\/streaming\/scheduler\/StreamingListenerBatchStarted.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "org\/apache\/spark\/streaming\/scheduler\/StreamingListenerBatchStarted.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "org\/apache\/spark\/streaming\/scheduler\/StreamingListenerBatchStarted.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "org\/apache\/spark\/streaming\/scheduler\/StreamingListenerBatchStarted.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "org\/apache\/spark\/streaming\/scheduler\/StreamingListenerBatchStarted.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "org\/apache\/spark\/streaming\/scheduler\/StreamingListenerBatchStarted.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "org\/apache\/spark\/streaming\/scheduler\/StreamingListenerBatchStarted.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "org\/apache\/spark\/streaming\/scheduler\/StreamingListenerBatchStarted.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "org\/apache\/spark\/streaming\/scheduler\/StreamingListenerBatchStarted.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "org\/apache\/spark\/streaming\/scheduler\/StreamingListenerBatchStarted.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "org\/apache\/spark\/streaming\/scheduler\/StreamingListenerBatchStarted.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "org\/apache\/spark\/streaming\/scheduler\/StreamingListenerBatchStarted.html#notify():Unit", "kind" : "final def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "org\/apache\/spark\/streaming\/scheduler\/StreamingListenerBatchStarted.html#clone():Object", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_]", "member" : "scala.AnyRef.getClass", "link" : "org\/apache\/spark\/streaming\/scheduler\/StreamingListenerBatchStarted.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "org\/apache\/spark\/streaming\/scheduler\/StreamingListenerBatchStarted.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "org\/apache\/spark\/streaming\/scheduler\/StreamingListenerBatchStarted.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "case class" : "org\/apache\/spark\/streaming\/scheduler\/StreamingListenerBatchStarted.html", "kind" : "case class"}, {"name" : "org.apache.spark.streaming.scheduler.StreamingListenerBatchSubmitted", "shortDescription" : "", "members_case class" : [{"member" : "org.apache.spark.streaming.scheduler.StreamingListenerBatchSubmitted#<init>", "error" : "unsupported entity"}, {"label" : "batchInfo", "tail" : ": BatchInfo", "member" : "org.apache.spark.streaming.scheduler.StreamingListenerBatchSubmitted.batchInfo", "link" : "org\/apache\/spark\/streaming\/scheduler\/StreamingListenerBatchSubmitted.html#batchInfo:org.apache.spark.streaming.scheduler.BatchInfo", "kind" : "val"}, {"label" : "synchronized", "tail" : "(arg0: ⇒ T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "org\/apache\/spark\/streaming\/scheduler\/StreamingListenerBatchSubmitted.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "org\/apache\/spark\/streaming\/scheduler\/StreamingListenerBatchSubmitted.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "org\/apache\/spark\/streaming\/scheduler\/StreamingListenerBatchSubmitted.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "org\/apache\/spark\/streaming\/scheduler\/StreamingListenerBatchSubmitted.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "org\/apache\/spark\/streaming\/scheduler\/StreamingListenerBatchSubmitted.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "org\/apache\/spark\/streaming\/scheduler\/StreamingListenerBatchSubmitted.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "org\/apache\/spark\/streaming\/scheduler\/StreamingListenerBatchSubmitted.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "org\/apache\/spark\/streaming\/scheduler\/StreamingListenerBatchSubmitted.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "org\/apache\/spark\/streaming\/scheduler\/StreamingListenerBatchSubmitted.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "org\/apache\/spark\/streaming\/scheduler\/StreamingListenerBatchSubmitted.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "org\/apache\/spark\/streaming\/scheduler\/StreamingListenerBatchSubmitted.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "org\/apache\/spark\/streaming\/scheduler\/StreamingListenerBatchSubmitted.html#notify():Unit", "kind" : "final def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "org\/apache\/spark\/streaming\/scheduler\/StreamingListenerBatchSubmitted.html#clone():Object", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_]", "member" : "scala.AnyRef.getClass", "link" : "org\/apache\/spark\/streaming\/scheduler\/StreamingListenerBatchSubmitted.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "org\/apache\/spark\/streaming\/scheduler\/StreamingListenerBatchSubmitted.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "org\/apache\/spark\/streaming\/scheduler\/StreamingListenerBatchSubmitted.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "case class" : "org\/apache\/spark\/streaming\/scheduler\/StreamingListenerBatchSubmitted.html", "kind" : "case class"}, {"name" : "org.apache.spark.streaming.scheduler.StreamingListenerEvent", "members_trait" : [{"label" : "synchronized", "tail" : "(arg0: ⇒ T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "org\/apache\/spark\/streaming\/scheduler\/StreamingListenerEvent.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "org\/apache\/spark\/streaming\/scheduler\/StreamingListenerEvent.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "org\/apache\/spark\/streaming\/scheduler\/StreamingListenerEvent.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "org\/apache\/spark\/streaming\/scheduler\/StreamingListenerEvent.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "org\/apache\/spark\/streaming\/scheduler\/StreamingListenerEvent.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "org\/apache\/spark\/streaming\/scheduler\/StreamingListenerEvent.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "org\/apache\/spark\/streaming\/scheduler\/StreamingListenerEvent.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "org\/apache\/spark\/streaming\/scheduler\/StreamingListenerEvent.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "org\/apache\/spark\/streaming\/scheduler\/StreamingListenerEvent.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "org\/apache\/spark\/streaming\/scheduler\/StreamingListenerEvent.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "org\/apache\/spark\/streaming\/scheduler\/StreamingListenerEvent.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "org\/apache\/spark\/streaming\/scheduler\/StreamingListenerEvent.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "org\/apache\/spark\/streaming\/scheduler\/StreamingListenerEvent.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "org\/apache\/spark\/streaming\/scheduler\/StreamingListenerEvent.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.equals", "link" : "org\/apache\/spark\/streaming\/scheduler\/StreamingListenerEvent.html#equals(x$1:Any):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "org\/apache\/spark\/streaming\/scheduler\/StreamingListenerEvent.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_]", "member" : "scala.AnyRef.getClass", "link" : "org\/apache\/spark\/streaming\/scheduler\/StreamingListenerEvent.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "org\/apache\/spark\/streaming\/scheduler\/StreamingListenerEvent.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "org\/apache\/spark\/streaming\/scheduler\/StreamingListenerEvent.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "shortDescription" : ":: DeveloperApi ::Base trait for events related to StreamingListener", "trait" : "org\/apache\/spark\/streaming\/scheduler\/StreamingListenerEvent.html", "kind" : "trait"}, {"name" : "org.apache.spark.streaming.scheduler.StreamingListenerOutputOperationCompleted", "shortDescription" : "", "members_case class" : [{"member" : "org.apache.spark.streaming.scheduler.StreamingListenerOutputOperationCompleted#<init>", "error" : "unsupported entity"}, {"label" : "outputOperationInfo", "tail" : ": OutputOperationInfo", "member" : "org.apache.spark.streaming.scheduler.StreamingListenerOutputOperationCompleted.outputOperationInfo", "link" : "org\/apache\/spark\/streaming\/scheduler\/StreamingListenerOutputOperationCompleted.html#outputOperationInfo:org.apache.spark.streaming.scheduler.OutputOperationInfo", "kind" : "val"}, {"label" : "synchronized", "tail" : "(arg0: ⇒ T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "org\/apache\/spark\/streaming\/scheduler\/StreamingListenerOutputOperationCompleted.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "org\/apache\/spark\/streaming\/scheduler\/StreamingListenerOutputOperationCompleted.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "org\/apache\/spark\/streaming\/scheduler\/StreamingListenerOutputOperationCompleted.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "org\/apache\/spark\/streaming\/scheduler\/StreamingListenerOutputOperationCompleted.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "org\/apache\/spark\/streaming\/scheduler\/StreamingListenerOutputOperationCompleted.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "org\/apache\/spark\/streaming\/scheduler\/StreamingListenerOutputOperationCompleted.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "org\/apache\/spark\/streaming\/scheduler\/StreamingListenerOutputOperationCompleted.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "org\/apache\/spark\/streaming\/scheduler\/StreamingListenerOutputOperationCompleted.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "org\/apache\/spark\/streaming\/scheduler\/StreamingListenerOutputOperationCompleted.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "org\/apache\/spark\/streaming\/scheduler\/StreamingListenerOutputOperationCompleted.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "org\/apache\/spark\/streaming\/scheduler\/StreamingListenerOutputOperationCompleted.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "org\/apache\/spark\/streaming\/scheduler\/StreamingListenerOutputOperationCompleted.html#notify():Unit", "kind" : "final def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "org\/apache\/spark\/streaming\/scheduler\/StreamingListenerOutputOperationCompleted.html#clone():Object", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_]", "member" : "scala.AnyRef.getClass", "link" : "org\/apache\/spark\/streaming\/scheduler\/StreamingListenerOutputOperationCompleted.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "org\/apache\/spark\/streaming\/scheduler\/StreamingListenerOutputOperationCompleted.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "org\/apache\/spark\/streaming\/scheduler\/StreamingListenerOutputOperationCompleted.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "case class" : "org\/apache\/spark\/streaming\/scheduler\/StreamingListenerOutputOperationCompleted.html", "kind" : "case class"}, {"name" : "org.apache.spark.streaming.scheduler.StreamingListenerOutputOperationStarted", "shortDescription" : "", "members_case class" : [{"member" : "org.apache.spark.streaming.scheduler.StreamingListenerOutputOperationStarted#<init>", "error" : "unsupported entity"}, {"label" : "outputOperationInfo", "tail" : ": OutputOperationInfo", "member" : "org.apache.spark.streaming.scheduler.StreamingListenerOutputOperationStarted.outputOperationInfo", "link" : "org\/apache\/spark\/streaming\/scheduler\/StreamingListenerOutputOperationStarted.html#outputOperationInfo:org.apache.spark.streaming.scheduler.OutputOperationInfo", "kind" : "val"}, {"label" : "synchronized", "tail" : "(arg0: ⇒ T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "org\/apache\/spark\/streaming\/scheduler\/StreamingListenerOutputOperationStarted.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "org\/apache\/spark\/streaming\/scheduler\/StreamingListenerOutputOperationStarted.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "org\/apache\/spark\/streaming\/scheduler\/StreamingListenerOutputOperationStarted.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "org\/apache\/spark\/streaming\/scheduler\/StreamingListenerOutputOperationStarted.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "org\/apache\/spark\/streaming\/scheduler\/StreamingListenerOutputOperationStarted.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "org\/apache\/spark\/streaming\/scheduler\/StreamingListenerOutputOperationStarted.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "org\/apache\/spark\/streaming\/scheduler\/StreamingListenerOutputOperationStarted.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "org\/apache\/spark\/streaming\/scheduler\/StreamingListenerOutputOperationStarted.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "org\/apache\/spark\/streaming\/scheduler\/StreamingListenerOutputOperationStarted.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "org\/apache\/spark\/streaming\/scheduler\/StreamingListenerOutputOperationStarted.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "org\/apache\/spark\/streaming\/scheduler\/StreamingListenerOutputOperationStarted.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "org\/apache\/spark\/streaming\/scheduler\/StreamingListenerOutputOperationStarted.html#notify():Unit", "kind" : "final def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "org\/apache\/spark\/streaming\/scheduler\/StreamingListenerOutputOperationStarted.html#clone():Object", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_]", "member" : "scala.AnyRef.getClass", "link" : "org\/apache\/spark\/streaming\/scheduler\/StreamingListenerOutputOperationStarted.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "org\/apache\/spark\/streaming\/scheduler\/StreamingListenerOutputOperationStarted.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "org\/apache\/spark\/streaming\/scheduler\/StreamingListenerOutputOperationStarted.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "case class" : "org\/apache\/spark\/streaming\/scheduler\/StreamingListenerOutputOperationStarted.html", "kind" : "case class"}, {"name" : "org.apache.spark.streaming.scheduler.StreamingListenerReceiverError", "shortDescription" : "", "members_case class" : [{"member" : "org.apache.spark.streaming.scheduler.StreamingListenerReceiverError#<init>", "error" : "unsupported entity"}, {"label" : "receiverInfo", "tail" : ": ReceiverInfo", "member" : "org.apache.spark.streaming.scheduler.StreamingListenerReceiverError.receiverInfo", "link" : "org\/apache\/spark\/streaming\/scheduler\/StreamingListenerReceiverError.html#receiverInfo:org.apache.spark.streaming.scheduler.ReceiverInfo", "kind" : "val"}, {"label" : "synchronized", "tail" : "(arg0: ⇒ T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "org\/apache\/spark\/streaming\/scheduler\/StreamingListenerReceiverError.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "org\/apache\/spark\/streaming\/scheduler\/StreamingListenerReceiverError.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "org\/apache\/spark\/streaming\/scheduler\/StreamingListenerReceiverError.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "org\/apache\/spark\/streaming\/scheduler\/StreamingListenerReceiverError.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "org\/apache\/spark\/streaming\/scheduler\/StreamingListenerReceiverError.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "org\/apache\/spark\/streaming\/scheduler\/StreamingListenerReceiverError.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "org\/apache\/spark\/streaming\/scheduler\/StreamingListenerReceiverError.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "org\/apache\/spark\/streaming\/scheduler\/StreamingListenerReceiverError.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "org\/apache\/spark\/streaming\/scheduler\/StreamingListenerReceiverError.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "org\/apache\/spark\/streaming\/scheduler\/StreamingListenerReceiverError.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "org\/apache\/spark\/streaming\/scheduler\/StreamingListenerReceiverError.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "org\/apache\/spark\/streaming\/scheduler\/StreamingListenerReceiverError.html#notify():Unit", "kind" : "final def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "org\/apache\/spark\/streaming\/scheduler\/StreamingListenerReceiverError.html#clone():Object", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_]", "member" : "scala.AnyRef.getClass", "link" : "org\/apache\/spark\/streaming\/scheduler\/StreamingListenerReceiverError.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "org\/apache\/spark\/streaming\/scheduler\/StreamingListenerReceiverError.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "org\/apache\/spark\/streaming\/scheduler\/StreamingListenerReceiverError.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "case class" : "org\/apache\/spark\/streaming\/scheduler\/StreamingListenerReceiverError.html", "kind" : "case class"}, {"name" : "org.apache.spark.streaming.scheduler.StreamingListenerReceiverStarted", "shortDescription" : "", "members_case class" : [{"member" : "org.apache.spark.streaming.scheduler.StreamingListenerReceiverStarted#<init>", "error" : "unsupported entity"}, {"label" : "receiverInfo", "tail" : ": ReceiverInfo", "member" : "org.apache.spark.streaming.scheduler.StreamingListenerReceiverStarted.receiverInfo", "link" : "org\/apache\/spark\/streaming\/scheduler\/StreamingListenerReceiverStarted.html#receiverInfo:org.apache.spark.streaming.scheduler.ReceiverInfo", "kind" : "val"}, {"label" : "synchronized", "tail" : "(arg0: ⇒ T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "org\/apache\/spark\/streaming\/scheduler\/StreamingListenerReceiverStarted.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "org\/apache\/spark\/streaming\/scheduler\/StreamingListenerReceiverStarted.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "org\/apache\/spark\/streaming\/scheduler\/StreamingListenerReceiverStarted.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "org\/apache\/spark\/streaming\/scheduler\/StreamingListenerReceiverStarted.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "org\/apache\/spark\/streaming\/scheduler\/StreamingListenerReceiverStarted.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "org\/apache\/spark\/streaming\/scheduler\/StreamingListenerReceiverStarted.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "org\/apache\/spark\/streaming\/scheduler\/StreamingListenerReceiverStarted.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "org\/apache\/spark\/streaming\/scheduler\/StreamingListenerReceiverStarted.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "org\/apache\/spark\/streaming\/scheduler\/StreamingListenerReceiverStarted.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "org\/apache\/spark\/streaming\/scheduler\/StreamingListenerReceiverStarted.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "org\/apache\/spark\/streaming\/scheduler\/StreamingListenerReceiverStarted.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "org\/apache\/spark\/streaming\/scheduler\/StreamingListenerReceiverStarted.html#notify():Unit", "kind" : "final def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "org\/apache\/spark\/streaming\/scheduler\/StreamingListenerReceiverStarted.html#clone():Object", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_]", "member" : "scala.AnyRef.getClass", "link" : "org\/apache\/spark\/streaming\/scheduler\/StreamingListenerReceiverStarted.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "org\/apache\/spark\/streaming\/scheduler\/StreamingListenerReceiverStarted.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "org\/apache\/spark\/streaming\/scheduler\/StreamingListenerReceiverStarted.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "case class" : "org\/apache\/spark\/streaming\/scheduler\/StreamingListenerReceiverStarted.html", "kind" : "case class"}, {"name" : "org.apache.spark.streaming.scheduler.StreamingListenerReceiverStopped", "shortDescription" : "", "members_case class" : [{"member" : "org.apache.spark.streaming.scheduler.StreamingListenerReceiverStopped#<init>", "error" : "unsupported entity"}, {"label" : "receiverInfo", "tail" : ": ReceiverInfo", "member" : "org.apache.spark.streaming.scheduler.StreamingListenerReceiverStopped.receiverInfo", "link" : "org\/apache\/spark\/streaming\/scheduler\/StreamingListenerReceiverStopped.html#receiverInfo:org.apache.spark.streaming.scheduler.ReceiverInfo", "kind" : "val"}, {"label" : "synchronized", "tail" : "(arg0: ⇒ T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "org\/apache\/spark\/streaming\/scheduler\/StreamingListenerReceiverStopped.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "org\/apache\/spark\/streaming\/scheduler\/StreamingListenerReceiverStopped.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "org\/apache\/spark\/streaming\/scheduler\/StreamingListenerReceiverStopped.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "org\/apache\/spark\/streaming\/scheduler\/StreamingListenerReceiverStopped.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "org\/apache\/spark\/streaming\/scheduler\/StreamingListenerReceiverStopped.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "org\/apache\/spark\/streaming\/scheduler\/StreamingListenerReceiverStopped.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "org\/apache\/spark\/streaming\/scheduler\/StreamingListenerReceiverStopped.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "org\/apache\/spark\/streaming\/scheduler\/StreamingListenerReceiverStopped.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "org\/apache\/spark\/streaming\/scheduler\/StreamingListenerReceiverStopped.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "org\/apache\/spark\/streaming\/scheduler\/StreamingListenerReceiverStopped.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "org\/apache\/spark\/streaming\/scheduler\/StreamingListenerReceiverStopped.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "org\/apache\/spark\/streaming\/scheduler\/StreamingListenerReceiverStopped.html#notify():Unit", "kind" : "final def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "org\/apache\/spark\/streaming\/scheduler\/StreamingListenerReceiverStopped.html#clone():Object", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_]", "member" : "scala.AnyRef.getClass", "link" : "org\/apache\/spark\/streaming\/scheduler\/StreamingListenerReceiverStopped.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "org\/apache\/spark\/streaming\/scheduler\/StreamingListenerReceiverStopped.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "org\/apache\/spark\/streaming\/scheduler\/StreamingListenerReceiverStopped.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "case class" : "org\/apache\/spark\/streaming\/scheduler\/StreamingListenerReceiverStopped.html", "kind" : "case class"}, {"name" : "org.apache.spark.streaming.scheduler.StreamingListenerStreamingStarted", "shortDescription" : "", "members_case class" : [{"member" : "org.apache.spark.streaming.scheduler.StreamingListenerStreamingStarted#<init>", "error" : "unsupported entity"}, {"label" : "time", "tail" : ": Long", "member" : "org.apache.spark.streaming.scheduler.StreamingListenerStreamingStarted.time", "link" : "org\/apache\/spark\/streaming\/scheduler\/StreamingListenerStreamingStarted.html#time:Long", "kind" : "val"}, {"label" : "synchronized", "tail" : "(arg0: ⇒ T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "org\/apache\/spark\/streaming\/scheduler\/StreamingListenerStreamingStarted.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "org\/apache\/spark\/streaming\/scheduler\/StreamingListenerStreamingStarted.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "org\/apache\/spark\/streaming\/scheduler\/StreamingListenerStreamingStarted.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "org\/apache\/spark\/streaming\/scheduler\/StreamingListenerStreamingStarted.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "org\/apache\/spark\/streaming\/scheduler\/StreamingListenerStreamingStarted.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "org\/apache\/spark\/streaming\/scheduler\/StreamingListenerStreamingStarted.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "org\/apache\/spark\/streaming\/scheduler\/StreamingListenerStreamingStarted.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "org\/apache\/spark\/streaming\/scheduler\/StreamingListenerStreamingStarted.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "org\/apache\/spark\/streaming\/scheduler\/StreamingListenerStreamingStarted.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "org\/apache\/spark\/streaming\/scheduler\/StreamingListenerStreamingStarted.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "org\/apache\/spark\/streaming\/scheduler\/StreamingListenerStreamingStarted.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "org\/apache\/spark\/streaming\/scheduler\/StreamingListenerStreamingStarted.html#notify():Unit", "kind" : "final def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "org\/apache\/spark\/streaming\/scheduler\/StreamingListenerStreamingStarted.html#clone():Object", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_]", "member" : "scala.AnyRef.getClass", "link" : "org\/apache\/spark\/streaming\/scheduler\/StreamingListenerStreamingStarted.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "org\/apache\/spark\/streaming\/scheduler\/StreamingListenerStreamingStarted.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "org\/apache\/spark\/streaming\/scheduler\/StreamingListenerStreamingStarted.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "case class" : "org\/apache\/spark\/streaming\/scheduler\/StreamingListenerStreamingStarted.html", "kind" : "case class"}, {"name" : "org.apache.spark.streaming.scheduler.StreamInputInfo", "shortDescription" : ":: DeveloperApi ::Track the information of input stream at specified batch time.", "object" : "org\/apache\/spark\/streaming\/scheduler\/StreamInputInfo$.html", "members_object" : [{"label" : "METADATA_KEY_DESCRIPTION", "tail" : ": String", "member" : "org.apache.spark.streaming.scheduler.StreamInputInfo.METADATA_KEY_DESCRIPTION", "link" : "org\/apache\/spark\/streaming\/scheduler\/StreamInputInfo$.html#METADATA_KEY_DESCRIPTION:String", "kind" : "val"}, {"label" : "synchronized", "tail" : "(arg0: ⇒ T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "org\/apache\/spark\/streaming\/scheduler\/StreamInputInfo$.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "org\/apache\/spark\/streaming\/scheduler\/StreamInputInfo$.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "org\/apache\/spark\/streaming\/scheduler\/StreamInputInfo$.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "org\/apache\/spark\/streaming\/scheduler\/StreamInputInfo$.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "org\/apache\/spark\/streaming\/scheduler\/StreamInputInfo$.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "org\/apache\/spark\/streaming\/scheduler\/StreamInputInfo$.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "org\/apache\/spark\/streaming\/scheduler\/StreamInputInfo$.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "org\/apache\/spark\/streaming\/scheduler\/StreamInputInfo$.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "org\/apache\/spark\/streaming\/scheduler\/StreamInputInfo$.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "org\/apache\/spark\/streaming\/scheduler\/StreamInputInfo$.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "org\/apache\/spark\/streaming\/scheduler\/StreamInputInfo$.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "org\/apache\/spark\/streaming\/scheduler\/StreamInputInfo$.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "org\/apache\/spark\/streaming\/scheduler\/StreamInputInfo$.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "org\/apache\/spark\/streaming\/scheduler\/StreamInputInfo$.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.equals", "link" : "org\/apache\/spark\/streaming\/scheduler\/StreamInputInfo$.html#equals(x$1:Any):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "org\/apache\/spark\/streaming\/scheduler\/StreamInputInfo$.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_]", "member" : "scala.AnyRef.getClass", "link" : "org\/apache\/spark\/streaming\/scheduler\/StreamInputInfo$.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "org\/apache\/spark\/streaming\/scheduler\/StreamInputInfo$.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "org\/apache\/spark\/streaming\/scheduler\/StreamInputInfo$.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "members_case class" : [{"label" : "metadataDescription", "tail" : "(): Option[String]", "member" : "org.apache.spark.streaming.scheduler.StreamInputInfo.metadataDescription", "link" : "org\/apache\/spark\/streaming\/scheduler\/StreamInputInfo.html#metadataDescription:Option[String]", "kind" : "def"}, {"member" : "org.apache.spark.streaming.scheduler.StreamInputInfo#<init>", "error" : "unsupported entity"}, {"label" : "metadata", "tail" : ": Map[String, Any]", "member" : "org.apache.spark.streaming.scheduler.StreamInputInfo.metadata", "link" : "org\/apache\/spark\/streaming\/scheduler\/StreamInputInfo.html#metadata:Map[String,Any]", "kind" : "val"}, {"label" : "numRecords", "tail" : ": Long", "member" : "org.apache.spark.streaming.scheduler.StreamInputInfo.numRecords", "link" : "org\/apache\/spark\/streaming\/scheduler\/StreamInputInfo.html#numRecords:Long", "kind" : "val"}, {"label" : "inputStreamId", "tail" : ": Int", "member" : "org.apache.spark.streaming.scheduler.StreamInputInfo.inputStreamId", "link" : "org\/apache\/spark\/streaming\/scheduler\/StreamInputInfo.html#inputStreamId:Int", "kind" : "val"}, {"label" : "synchronized", "tail" : "(arg0: ⇒ T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "org\/apache\/spark\/streaming\/scheduler\/StreamInputInfo.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "org\/apache\/spark\/streaming\/scheduler\/StreamInputInfo.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "org\/apache\/spark\/streaming\/scheduler\/StreamInputInfo.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "org\/apache\/spark\/streaming\/scheduler\/StreamInputInfo.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "org\/apache\/spark\/streaming\/scheduler\/StreamInputInfo.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "org\/apache\/spark\/streaming\/scheduler\/StreamInputInfo.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "org\/apache\/spark\/streaming\/scheduler\/StreamInputInfo.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "org\/apache\/spark\/streaming\/scheduler\/StreamInputInfo.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "org\/apache\/spark\/streaming\/scheduler\/StreamInputInfo.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "org\/apache\/spark\/streaming\/scheduler\/StreamInputInfo.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "org\/apache\/spark\/streaming\/scheduler\/StreamInputInfo.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "org\/apache\/spark\/streaming\/scheduler\/StreamInputInfo.html#notify():Unit", "kind" : "final def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "org\/apache\/spark\/streaming\/scheduler\/StreamInputInfo.html#clone():Object", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_]", "member" : "scala.AnyRef.getClass", "link" : "org\/apache\/spark\/streaming\/scheduler\/StreamInputInfo.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "org\/apache\/spark\/streaming\/scheduler\/StreamInputInfo.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "org\/apache\/spark\/streaming\/scheduler\/StreamInputInfo.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "case class" : "org\/apache\/spark\/streaming\/scheduler\/StreamInputInfo.html", "kind" : "case class"}], "org.apache.spark.status.api.v1" : [], "org.apache.spark" : [], "org.apache" : [], "org.apache.spark.streaming.util" : [{"name" : "org.apache.spark.streaming.util.WriteAheadLog", "shortDescription" : ":: DeveloperApi ::", "members_class" : [{"member" : "org.apache.spark.streaming.util.WriteAheadLog#<init>", "error" : "unsupported entity"}, {"label" : "synchronized", "tail" : "(arg0: ⇒ T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "org\/apache\/spark\/streaming\/util\/WriteAheadLog.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "org\/apache\/spark\/streaming\/util\/WriteAheadLog.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "org\/apache\/spark\/streaming\/util\/WriteAheadLog.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "org\/apache\/spark\/streaming\/util\/WriteAheadLog.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "org\/apache\/spark\/streaming\/util\/WriteAheadLog.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "org\/apache\/spark\/streaming\/util\/WriteAheadLog.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "org\/apache\/spark\/streaming\/util\/WriteAheadLog.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "org\/apache\/spark\/streaming\/util\/WriteAheadLog.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "org\/apache\/spark\/streaming\/util\/WriteAheadLog.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "org\/apache\/spark\/streaming\/util\/WriteAheadLog.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "org\/apache\/spark\/streaming\/util\/WriteAheadLog.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "org\/apache\/spark\/streaming\/util\/WriteAheadLog.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "org\/apache\/spark\/streaming\/util\/WriteAheadLog.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "org\/apache\/spark\/streaming\/util\/WriteAheadLog.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.equals", "link" : "org\/apache\/spark\/streaming\/util\/WriteAheadLog.html#equals(x$1:Any):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "org\/apache\/spark\/streaming\/util\/WriteAheadLog.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_]", "member" : "scala.AnyRef.getClass", "link" : "org\/apache\/spark\/streaming\/util\/WriteAheadLog.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "org\/apache\/spark\/streaming\/util\/WriteAheadLog.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "org\/apache\/spark\/streaming\/util\/WriteAheadLog.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}, {"label" : "close", "tail" : "(): Unit", "member" : "org.apache.spark.streaming.util.WriteAheadLog.close", "link" : "org\/apache\/spark\/streaming\/util\/WriteAheadLog.html#close():Unit", "kind" : "abstract def"}, {"label" : "clean", "tail" : "(threshTime: Long, waitForCompletion: Boolean): Unit", "member" : "org.apache.spark.streaming.util.WriteAheadLog.clean", "link" : "org\/apache\/spark\/streaming\/util\/WriteAheadLog.html#clean(threshTime:Long,waitForCompletion:Boolean):Unit", "kind" : "abstract def"}, {"label" : "readAll", "tail" : "(): Iterator[ByteBuffer]", "member" : "org.apache.spark.streaming.util.WriteAheadLog.readAll", "link" : "org\/apache\/spark\/streaming\/util\/WriteAheadLog.html#readAll():java.util.Iterator[java.nio.ByteBuffer]", "kind" : "abstract def"}, {"label" : "read", "tail" : "(handle: WriteAheadLogRecordHandle): ByteBuffer", "member" : "org.apache.spark.streaming.util.WriteAheadLog.read", "link" : "org\/apache\/spark\/streaming\/util\/WriteAheadLog.html#read(handle:org.apache.spark.streaming.util.WriteAheadLogRecordHandle):java.nio.ByteBuffer", "kind" : "abstract def"}, {"label" : "write", "tail" : "(record: ByteBuffer, time: Long): WriteAheadLogRecordHandle", "member" : "org.apache.spark.streaming.util.WriteAheadLog.write", "link" : "org\/apache\/spark\/streaming\/util\/WriteAheadLog.html#write(record:java.nio.ByteBuffer,time:Long):org.apache.spark.streaming.util.WriteAheadLogRecordHandle", "kind" : "abstract def"}], "class" : "org\/apache\/spark\/streaming\/util\/WriteAheadLog.html", "kind" : "class"}, {"name" : "org.apache.spark.streaming.util.WriteAheadLogRecordHandle", "shortDescription" : ":: DeveloperApi ::", "members_class" : [{"member" : "org.apache.spark.streaming.util.WriteAheadLogRecordHandle#<init>", "error" : "unsupported entity"}, {"label" : "synchronized", "tail" : "(arg0: ⇒ T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "org\/apache\/spark\/streaming\/util\/WriteAheadLogRecordHandle.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "org\/apache\/spark\/streaming\/util\/WriteAheadLogRecordHandle.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "org\/apache\/spark\/streaming\/util\/WriteAheadLogRecordHandle.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "org\/apache\/spark\/streaming\/util\/WriteAheadLogRecordHandle.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "org\/apache\/spark\/streaming\/util\/WriteAheadLogRecordHandle.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "org\/apache\/spark\/streaming\/util\/WriteAheadLogRecordHandle.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "org\/apache\/spark\/streaming\/util\/WriteAheadLogRecordHandle.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "org\/apache\/spark\/streaming\/util\/WriteAheadLogRecordHandle.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "org\/apache\/spark\/streaming\/util\/WriteAheadLogRecordHandle.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "org\/apache\/spark\/streaming\/util\/WriteAheadLogRecordHandle.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "org\/apache\/spark\/streaming\/util\/WriteAheadLogRecordHandle.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "org\/apache\/spark\/streaming\/util\/WriteAheadLogRecordHandle.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "org\/apache\/spark\/streaming\/util\/WriteAheadLogRecordHandle.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "org\/apache\/spark\/streaming\/util\/WriteAheadLogRecordHandle.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.equals", "link" : "org\/apache\/spark\/streaming\/util\/WriteAheadLogRecordHandle.html#equals(x$1:Any):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "org\/apache\/spark\/streaming\/util\/WriteAheadLogRecordHandle.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_]", "member" : "scala.AnyRef.getClass", "link" : "org\/apache\/spark\/streaming\/util\/WriteAheadLogRecordHandle.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "org\/apache\/spark\/streaming\/util\/WriteAheadLogRecordHandle.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "org\/apache\/spark\/streaming\/util\/WriteAheadLogRecordHandle.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "class" : "org\/apache\/spark\/streaming\/util\/WriteAheadLogRecordHandle.html", "kind" : "class"}], "org.apache.spark.streaming.dstream" : [{"name" : "org.apache.spark.streaming.dstream.ConstantInputDStream", "shortDescription" : "An input stream that always returns the same RDD on each time step.", "members_class" : [{"label" : "compute", "tail" : "(validTime: Time): Option[RDD[T]]", "member" : "org.apache.spark.streaming.dstream.ConstantInputDStream.compute", "link" : "org\/apache\/spark\/streaming\/dstream\/ConstantInputDStream.html#compute(validTime:org.apache.spark.streaming.Time):Option[org.apache.spark.rdd.RDD[T]]", "kind" : "def"}, {"label" : "stop", "tail" : "(): Unit", "member" : "org.apache.spark.streaming.dstream.ConstantInputDStream.stop", "link" : "org\/apache\/spark\/streaming\/dstream\/ConstantInputDStream.html#stop():Unit", "kind" : "def"}, {"label" : "start", "tail" : "(): Unit", "member" : "org.apache.spark.streaming.dstream.ConstantInputDStream.start", "link" : "org\/apache\/spark\/streaming\/dstream\/ConstantInputDStream.html#start():Unit", "kind" : "def"}, {"member" : "org.apache.spark.streaming.dstream.ConstantInputDStream#<init>", "error" : "unsupported entity"}, {"label" : "slideDuration", "tail" : "(): Duration", "member" : "org.apache.spark.streaming.dstream.InputDStream.slideDuration", "link" : "org\/apache\/spark\/streaming\/dstream\/ConstantInputDStream.html#slideDuration:org.apache.spark.streaming.Duration", "kind" : "def"}, {"label" : "dependencies", "tail" : "(): List[DStream[_]]", "member" : "org.apache.spark.streaming.dstream.InputDStream.dependencies", "link" : "org\/apache\/spark\/streaming\/dstream\/ConstantInputDStream.html#dependencies:List[org.apache.spark.streaming.dstream.DStream[_]]", "kind" : "def"}, {"label" : "baseScope", "tail" : ": Option[String]", "member" : "org.apache.spark.streaming.dstream.InputDStream.baseScope", "link" : "org\/apache\/spark\/streaming\/dstream\/ConstantInputDStream.html#baseScope:Option[String]", "kind" : "val"}, {"label" : "rateController", "tail" : ": Option[RateController]", "member" : "org.apache.spark.streaming.dstream.InputDStream.rateController", "link" : "org\/apache\/spark\/streaming\/dstream\/ConstantInputDStream.html#rateController:Option[org.apache.spark.streaming.scheduler.RateController]", "kind" : "val"}, {"label" : "id", "tail" : ": Int", "member" : "org.apache.spark.streaming.dstream.InputDStream.id", "link" : "org\/apache\/spark\/streaming\/dstream\/ConstantInputDStream.html#id:Int", "kind" : "val"}, {"label" : "saveAsTextFiles", "tail" : "(prefix: String, suffix: String): Unit", "member" : "org.apache.spark.streaming.dstream.DStream.saveAsTextFiles", "link" : "org\/apache\/spark\/streaming\/dstream\/ConstantInputDStream.html#saveAsTextFiles(prefix:String,suffix:String):Unit", "kind" : "def"}, {"label" : "saveAsObjectFiles", "tail" : "(prefix: String, suffix: String): Unit", "member" : "org.apache.spark.streaming.dstream.DStream.saveAsObjectFiles", "link" : "org\/apache\/spark\/streaming\/dstream\/ConstantInputDStream.html#saveAsObjectFiles(prefix:String,suffix:String):Unit", "kind" : "def"}, {"label" : "slice", "tail" : "(fromTime: Time, toTime: Time): Seq[RDD[T]]", "member" : "org.apache.spark.streaming.dstream.DStream.slice", "link" : "org\/apache\/spark\/streaming\/dstream\/ConstantInputDStream.html#slice(fromTime:org.apache.spark.streaming.Time,toTime:org.apache.spark.streaming.Time):Seq[org.apache.spark.rdd.RDD[T]]", "kind" : "def"}, {"label" : "slice", "tail" : "(interval: Interval): Seq[RDD[T]]", "member" : "org.apache.spark.streaming.dstream.DStream.slice", "link" : "org\/apache\/spark\/streaming\/dstream\/ConstantInputDStream.html#slice(interval:org.apache.spark.streaming.Interval):Seq[org.apache.spark.rdd.RDD[T]]", "kind" : "def"}, {"label" : "union", "tail" : "(that: DStream[T]): DStream[T]", "member" : "org.apache.spark.streaming.dstream.DStream.union", "link" : "org\/apache\/spark\/streaming\/dstream\/ConstantInputDStream.html#union(that:org.apache.spark.streaming.dstream.DStream[T]):org.apache.spark.streaming.dstream.DStream[T]", "kind" : "def"}, {"label" : "countByValueAndWindow", "tail" : "(windowDuration: Duration, slideDuration: Duration, numPartitions: Int)(ord: Ordering[T]): DStream[(T, Long)]", "member" : "org.apache.spark.streaming.dstream.DStream.countByValueAndWindow", "link" : "org\/apache\/spark\/streaming\/dstream\/ConstantInputDStream.html#countByValueAndWindow(windowDuration:org.apache.spark.streaming.Duration,slideDuration:org.apache.spark.streaming.Duration,numPartitions:Int)(implicitord:Ordering[T]):org.apache.spark.streaming.dstream.DStream[(T,Long)]", "kind" : "def"}, {"label" : "countByWindow", "tail" : "(windowDuration: Duration, slideDuration: Duration): DStream[Long]", "member" : "org.apache.spark.streaming.dstream.DStream.countByWindow", "link" : "org\/apache\/spark\/streaming\/dstream\/ConstantInputDStream.html#countByWindow(windowDuration:org.apache.spark.streaming.Duration,slideDuration:org.apache.spark.streaming.Duration):org.apache.spark.streaming.dstream.DStream[Long]", "kind" : "def"}, {"label" : "reduceByWindow", "tail" : "(reduceFunc: (T, T) ⇒ T, invReduceFunc: (T, T) ⇒ T, windowDuration: Duration, slideDuration: Duration): DStream[T]", "member" : "org.apache.spark.streaming.dstream.DStream.reduceByWindow", "link" : "org\/apache\/spark\/streaming\/dstream\/ConstantInputDStream.html#reduceByWindow(reduceFunc:(T,T)=>T,invReduceFunc:(T,T)=>T,windowDuration:org.apache.spark.streaming.Duration,slideDuration:org.apache.spark.streaming.Duration):org.apache.spark.streaming.dstream.DStream[T]", "kind" : "def"}, {"label" : "reduceByWindow", "tail" : "(reduceFunc: (T, T) ⇒ T, windowDuration: Duration, slideDuration: Duration): DStream[T]", "member" : "org.apache.spark.streaming.dstream.DStream.reduceByWindow", "link" : "org\/apache\/spark\/streaming\/dstream\/ConstantInputDStream.html#reduceByWindow(reduceFunc:(T,T)=>T,windowDuration:org.apache.spark.streaming.Duration,slideDuration:org.apache.spark.streaming.Duration):org.apache.spark.streaming.dstream.DStream[T]", "kind" : "def"}, {"label" : "window", "tail" : "(windowDuration: Duration, slideDuration: Duration): DStream[T]", "member" : "org.apache.spark.streaming.dstream.DStream.window", "link" : "org\/apache\/spark\/streaming\/dstream\/ConstantInputDStream.html#window(windowDuration:org.apache.spark.streaming.Duration,slideDuration:org.apache.spark.streaming.Duration):org.apache.spark.streaming.dstream.DStream[T]", "kind" : "def"}, {"label" : "window", "tail" : "(windowDuration: Duration): DStream[T]", "member" : "org.apache.spark.streaming.dstream.DStream.window", "link" : "org\/apache\/spark\/streaming\/dstream\/ConstantInputDStream.html#window(windowDuration:org.apache.spark.streaming.Duration):org.apache.spark.streaming.dstream.DStream[T]", "kind" : "def"}, {"label" : "print", "tail" : "(num: Int): Unit", "member" : "org.apache.spark.streaming.dstream.DStream.print", "link" : "org\/apache\/spark\/streaming\/dstream\/ConstantInputDStream.html#print(num:Int):Unit", "kind" : "def"}, {"label" : "print", "tail" : "(): Unit", "member" : "org.apache.spark.streaming.dstream.DStream.print", "link" : "org\/apache\/spark\/streaming\/dstream\/ConstantInputDStream.html#print():Unit", "kind" : "def"}, {"label" : "transformWith", "tail" : "(other: DStream[U], transformFunc: (RDD[T], RDD[U], Time) ⇒ RDD[V])(arg0: ClassTag[U], arg1: ClassTag[V]): DStream[V]", "member" : "org.apache.spark.streaming.dstream.DStream.transformWith", "link" : "org\/apache\/spark\/streaming\/dstream\/ConstantInputDStream.html#transformWith[U,V](other:org.apache.spark.streaming.dstream.DStream[U],transformFunc:(org.apache.spark.rdd.RDD[T],org.apache.spark.rdd.RDD[U],org.apache.spark.streaming.Time)=>org.apache.spark.rdd.RDD[V])(implicitevidence$9:scala.reflect.ClassTag[U],implicitevidence$10:scala.reflect.ClassTag[V]):org.apache.spark.streaming.dstream.DStream[V]", "kind" : "def"}, {"label" : "transformWith", "tail" : "(other: DStream[U], transformFunc: (RDD[T], RDD[U]) ⇒ RDD[V])(arg0: ClassTag[U], arg1: ClassTag[V]): DStream[V]", "member" : "org.apache.spark.streaming.dstream.DStream.transformWith", "link" : "org\/apache\/spark\/streaming\/dstream\/ConstantInputDStream.html#transformWith[U,V](other:org.apache.spark.streaming.dstream.DStream[U],transformFunc:(org.apache.spark.rdd.RDD[T],org.apache.spark.rdd.RDD[U])=>org.apache.spark.rdd.RDD[V])(implicitevidence$7:scala.reflect.ClassTag[U],implicitevidence$8:scala.reflect.ClassTag[V]):org.apache.spark.streaming.dstream.DStream[V]", "kind" : "def"}, {"label" : "transform", "tail" : "(transformFunc: (RDD[T], Time) ⇒ RDD[U])(arg0: ClassTag[U]): DStream[U]", "member" : "org.apache.spark.streaming.dstream.DStream.transform", "link" : "org\/apache\/spark\/streaming\/dstream\/ConstantInputDStream.html#transform[U](transformFunc:(org.apache.spark.rdd.RDD[T],org.apache.spark.streaming.Time)=>org.apache.spark.rdd.RDD[U])(implicitevidence$6:scala.reflect.ClassTag[U]):org.apache.spark.streaming.dstream.DStream[U]", "kind" : "def"}, {"label" : "transform", "tail" : "(transformFunc: (RDD[T]) ⇒ RDD[U])(arg0: ClassTag[U]): DStream[U]", "member" : "org.apache.spark.streaming.dstream.DStream.transform", "link" : "org\/apache\/spark\/streaming\/dstream\/ConstantInputDStream.html#transform[U](transformFunc:org.apache.spark.rdd.RDD[T]=>org.apache.spark.rdd.RDD[U])(implicitevidence$5:scala.reflect.ClassTag[U]):org.apache.spark.streaming.dstream.DStream[U]", "kind" : "def"}, {"label" : "foreachRDD", "tail" : "(foreachFunc: (RDD[T], Time) ⇒ Unit): Unit", "member" : "org.apache.spark.streaming.dstream.DStream.foreachRDD", "link" : "org\/apache\/spark\/streaming\/dstream\/ConstantInputDStream.html#foreachRDD(foreachFunc:(org.apache.spark.rdd.RDD[T],org.apache.spark.streaming.Time)=>Unit):Unit", "kind" : "def"}, {"label" : "foreachRDD", "tail" : "(foreachFunc: (RDD[T]) ⇒ Unit): Unit", "member" : "org.apache.spark.streaming.dstream.DStream.foreachRDD", "link" : "org\/apache\/spark\/streaming\/dstream\/ConstantInputDStream.html#foreachRDD(foreachFunc:org.apache.spark.rdd.RDD[T]=>Unit):Unit", "kind" : "def"}, {"label" : "countByValue", "tail" : "(numPartitions: Int)(ord: Ordering[T]): DStream[(T, Long)]", "member" : "org.apache.spark.streaming.dstream.DStream.countByValue", "link" : "org\/apache\/spark\/streaming\/dstream\/ConstantInputDStream.html#countByValue(numPartitions:Int)(implicitord:Ordering[T]):org.apache.spark.streaming.dstream.DStream[(T,Long)]", "kind" : "def"}, {"label" : "count", "tail" : "(): DStream[Long]", "member" : "org.apache.spark.streaming.dstream.DStream.count", "link" : "org\/apache\/spark\/streaming\/dstream\/ConstantInputDStream.html#count():org.apache.spark.streaming.dstream.DStream[Long]", "kind" : "def"}, {"label" : "reduce", "tail" : "(reduceFunc: (T, T) ⇒ T): DStream[T]", "member" : "org.apache.spark.streaming.dstream.DStream.reduce", "link" : "org\/apache\/spark\/streaming\/dstream\/ConstantInputDStream.html#reduce(reduceFunc:(T,T)=>T):org.apache.spark.streaming.dstream.DStream[T]", "kind" : "def"}, {"label" : "mapPartitions", "tail" : "(mapPartFunc: (Iterator[T]) ⇒ Iterator[U], preservePartitioning: Boolean)(arg0: ClassTag[U]): DStream[U]", "member" : "org.apache.spark.streaming.dstream.DStream.mapPartitions", "link" : "org\/apache\/spark\/streaming\/dstream\/ConstantInputDStream.html#mapPartitions[U](mapPartFunc:Iterator[T]=>Iterator[U],preservePartitioning:Boolean)(implicitevidence$4:scala.reflect.ClassTag[U]):org.apache.spark.streaming.dstream.DStream[U]", "kind" : "def"}, {"label" : "repartition", "tail" : "(numPartitions: Int): DStream[T]", "member" : "org.apache.spark.streaming.dstream.DStream.repartition", "link" : "org\/apache\/spark\/streaming\/dstream\/ConstantInputDStream.html#repartition(numPartitions:Int):org.apache.spark.streaming.dstream.DStream[T]", "kind" : "def"}, {"label" : "glom", "tail" : "(): DStream[Array[T]]", "member" : "org.apache.spark.streaming.dstream.DStream.glom", "link" : "org\/apache\/spark\/streaming\/dstream\/ConstantInputDStream.html#glom():org.apache.spark.streaming.dstream.DStream[Array[T]]", "kind" : "def"}, {"label" : "filter", "tail" : "(filterFunc: (T) ⇒ Boolean): DStream[T]", "member" : "org.apache.spark.streaming.dstream.DStream.filter", "link" : "org\/apache\/spark\/streaming\/dstream\/ConstantInputDStream.html#filter(filterFunc:T=>Boolean):org.apache.spark.streaming.dstream.DStream[T]", "kind" : "def"}, {"label" : "flatMap", "tail" : "(flatMapFunc: (T) ⇒ TraversableOnce[U])(arg0: ClassTag[U]): DStream[U]", "member" : "org.apache.spark.streaming.dstream.DStream.flatMap", "link" : "org\/apache\/spark\/streaming\/dstream\/ConstantInputDStream.html#flatMap[U](flatMapFunc:T=>TraversableOnce[U])(implicitevidence$3:scala.reflect.ClassTag[U]):org.apache.spark.streaming.dstream.DStream[U]", "kind" : "def"}, {"label" : "map", "tail" : "(mapFunc: (T) ⇒ U)(arg0: ClassTag[U]): DStream[U]", "member" : "org.apache.spark.streaming.dstream.DStream.map", "link" : "org\/apache\/spark\/streaming\/dstream\/ConstantInputDStream.html#map[U](mapFunc:T=>U)(implicitevidence$2:scala.reflect.ClassTag[U]):org.apache.spark.streaming.dstream.DStream[U]", "kind" : "def"}, {"label" : "createRDDWithLocalProperties", "tail" : "(time: Time, displayInnerRDDOps: Boolean)(body: ⇒ U): U", "member" : "org.apache.spark.streaming.dstream.DStream.createRDDWithLocalProperties", "link" : "org\/apache\/spark\/streaming\/dstream\/ConstantInputDStream.html#createRDDWithLocalProperties[U](time:org.apache.spark.streaming.Time,displayInnerRDDOps:Boolean)(body:=>U):U", "kind" : "def"}, {"label" : "checkpoint", "tail" : "(interval: Duration): DStream[T]", "member" : "org.apache.spark.streaming.dstream.DStream.checkpoint", "link" : "org\/apache\/spark\/streaming\/dstream\/ConstantInputDStream.html#checkpoint(interval:org.apache.spark.streaming.Duration):org.apache.spark.streaming.dstream.DStream[T]", "kind" : "def"}, {"label" : "cache", "tail" : "(): DStream[T]", "member" : "org.apache.spark.streaming.dstream.DStream.cache", "link" : "org\/apache\/spark\/streaming\/dstream\/ConstantInputDStream.html#cache():org.apache.spark.streaming.dstream.DStream[T]", "kind" : "def"}, {"label" : "persist", "tail" : "(): DStream[T]", "member" : "org.apache.spark.streaming.dstream.DStream.persist", "link" : "org\/apache\/spark\/streaming\/dstream\/ConstantInputDStream.html#persist():org.apache.spark.streaming.dstream.DStream[T]", "kind" : "def"}, {"label" : "persist", "tail" : "(level: StorageLevel): DStream[T]", "member" : "org.apache.spark.streaming.dstream.DStream.persist", "link" : "org\/apache\/spark\/streaming\/dstream\/ConstantInputDStream.html#persist(level:org.apache.spark.storage.StorageLevel):org.apache.spark.streaming.dstream.DStream[T]", "kind" : "def"}, {"label" : "context", "tail" : "(): StreamingContext", "member" : "org.apache.spark.streaming.dstream.DStream.context", "link" : "org\/apache\/spark\/streaming\/dstream\/ConstantInputDStream.html#context:org.apache.spark.streaming.StreamingContext", "kind" : "def"}, {"label" : "initializeLogIfNecessary", "tail" : "(isInterpreter: Boolean, silent: Boolean): Boolean", "member" : "org.apache.spark.internal.Logging.initializeLogIfNecessary", "link" : "org\/apache\/spark\/streaming\/dstream\/ConstantInputDStream.html#initializeLogIfNecessary(isInterpreter:Boolean,silent:Boolean):Boolean", "kind" : "def"}, {"label" : "initializeLogIfNecessary", "tail" : "(isInterpreter: Boolean): Unit", "member" : "org.apache.spark.internal.Logging.initializeLogIfNecessary", "link" : "org\/apache\/spark\/streaming\/dstream\/ConstantInputDStream.html#initializeLogIfNecessary(isInterpreter:Boolean):Unit", "kind" : "def"}, {"label" : "isTraceEnabled", "tail" : "(): Boolean", "member" : "org.apache.spark.internal.Logging.isTraceEnabled", "link" : "org\/apache\/spark\/streaming\/dstream\/ConstantInputDStream.html#isTraceEnabled():Boolean", "kind" : "def"}, {"label" : "logError", "tail" : "(msg: ⇒ String, throwable: Throwable): Unit", "member" : "org.apache.spark.internal.Logging.logError", "link" : "org\/apache\/spark\/streaming\/dstream\/ConstantInputDStream.html#logError(msg:=>String,throwable:Throwable):Unit", "kind" : "def"}, {"label" : "logWarning", "tail" : "(msg: ⇒ String, throwable: Throwable): Unit", "member" : "org.apache.spark.internal.Logging.logWarning", "link" : "org\/apache\/spark\/streaming\/dstream\/ConstantInputDStream.html#logWarning(msg:=>String,throwable:Throwable):Unit", "kind" : "def"}, {"label" : "logTrace", "tail" : "(msg: ⇒ String, throwable: Throwable): Unit", "member" : "org.apache.spark.internal.Logging.logTrace", "link" : "org\/apache\/spark\/streaming\/dstream\/ConstantInputDStream.html#logTrace(msg:=>String,throwable:Throwable):Unit", "kind" : "def"}, {"label" : "logDebug", "tail" : "(msg: ⇒ String, throwable: Throwable): Unit", "member" : "org.apache.spark.internal.Logging.logDebug", "link" : "org\/apache\/spark\/streaming\/dstream\/ConstantInputDStream.html#logDebug(msg:=>String,throwable:Throwable):Unit", "kind" : "def"}, {"label" : "logInfo", "tail" : "(msg: ⇒ String, throwable: Throwable): Unit", "member" : "org.apache.spark.internal.Logging.logInfo", "link" : "org\/apache\/spark\/streaming\/dstream\/ConstantInputDStream.html#logInfo(msg:=>String,throwable:Throwable):Unit", "kind" : "def"}, {"label" : "logError", "tail" : "(msg: ⇒ String): Unit", "member" : "org.apache.spark.internal.Logging.logError", "link" : "org\/apache\/spark\/streaming\/dstream\/ConstantInputDStream.html#logError(msg:=>String):Unit", "kind" : "def"}, {"label" : "logWarning", "tail" : "(msg: ⇒ String): Unit", "member" : "org.apache.spark.internal.Logging.logWarning", "link" : "org\/apache\/spark\/streaming\/dstream\/ConstantInputDStream.html#logWarning(msg:=>String):Unit", "kind" : "def"}, {"label" : "logTrace", "tail" : "(msg: ⇒ String): Unit", "member" : "org.apache.spark.internal.Logging.logTrace", "link" : "org\/apache\/spark\/streaming\/dstream\/ConstantInputDStream.html#logTrace(msg:=>String):Unit", "kind" : "def"}, {"label" : "logDebug", "tail" : "(msg: ⇒ String): Unit", "member" : "org.apache.spark.internal.Logging.logDebug", "link" : "org\/apache\/spark\/streaming\/dstream\/ConstantInputDStream.html#logDebug(msg:=>String):Unit", "kind" : "def"}, {"label" : "logInfo", "tail" : "(msg: ⇒ String): Unit", "member" : "org.apache.spark.internal.Logging.logInfo", "link" : "org\/apache\/spark\/streaming\/dstream\/ConstantInputDStream.html#logInfo(msg:=>String):Unit", "kind" : "def"}, {"label" : "log", "tail" : "(): Logger", "member" : "org.apache.spark.internal.Logging.log", "link" : "org\/apache\/spark\/streaming\/dstream\/ConstantInputDStream.html#log:org.slf4j.Logger", "kind" : "def"}, {"label" : "logName", "tail" : "(): String", "member" : "org.apache.spark.internal.Logging.logName", "link" : "org\/apache\/spark\/streaming\/dstream\/ConstantInputDStream.html#logName:String", "kind" : "def"}, {"label" : "synchronized", "tail" : "(arg0: ⇒ T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "org\/apache\/spark\/streaming\/dstream\/ConstantInputDStream.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "org\/apache\/spark\/streaming\/dstream\/ConstantInputDStream.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "org\/apache\/spark\/streaming\/dstream\/ConstantInputDStream.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "org\/apache\/spark\/streaming\/dstream\/ConstantInputDStream.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "org\/apache\/spark\/streaming\/dstream\/ConstantInputDStream.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "org\/apache\/spark\/streaming\/dstream\/ConstantInputDStream.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "org\/apache\/spark\/streaming\/dstream\/ConstantInputDStream.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "org\/apache\/spark\/streaming\/dstream\/ConstantInputDStream.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "org\/apache\/spark\/streaming\/dstream\/ConstantInputDStream.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "org\/apache\/spark\/streaming\/dstream\/ConstantInputDStream.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "org\/apache\/spark\/streaming\/dstream\/ConstantInputDStream.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "org\/apache\/spark\/streaming\/dstream\/ConstantInputDStream.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "org\/apache\/spark\/streaming\/dstream\/ConstantInputDStream.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "org\/apache\/spark\/streaming\/dstream\/ConstantInputDStream.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.equals", "link" : "org\/apache\/spark\/streaming\/dstream\/ConstantInputDStream.html#equals(x$1:Any):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "org\/apache\/spark\/streaming\/dstream\/ConstantInputDStream.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_]", "member" : "scala.AnyRef.getClass", "link" : "org\/apache\/spark\/streaming\/dstream\/ConstantInputDStream.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "org\/apache\/spark\/streaming\/dstream\/ConstantInputDStream.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "org\/apache\/spark\/streaming\/dstream\/ConstantInputDStream.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "class" : "org\/apache\/spark\/streaming\/dstream\/ConstantInputDStream.html", "kind" : "class"}, {"name" : "org.apache.spark.streaming.dstream.DStream", "shortDescription" : "A Discretized Stream (DStream), the basic abstraction in Spark Streaming, is a continuoussequence of RDDs (of the same type) representing a continuous stream of data (seeorg.apache.spark.rdd.RDD in the Spark core documentation for more details on RDDs).", "object" : "org\/apache\/spark\/streaming\/dstream\/DStream$.html", "members_class" : [{"label" : "saveAsTextFiles", "tail" : "(prefix: String, suffix: String): Unit", "member" : "org.apache.spark.streaming.dstream.DStream.saveAsTextFiles", "link" : "org\/apache\/spark\/streaming\/dstream\/DStream.html#saveAsTextFiles(prefix:String,suffix:String):Unit", "kind" : "def"}, {"label" : "saveAsObjectFiles", "tail" : "(prefix: String, suffix: String): Unit", "member" : "org.apache.spark.streaming.dstream.DStream.saveAsObjectFiles", "link" : "org\/apache\/spark\/streaming\/dstream\/DStream.html#saveAsObjectFiles(prefix:String,suffix:String):Unit", "kind" : "def"}, {"label" : "slice", "tail" : "(fromTime: Time, toTime: Time): Seq[RDD[T]]", "member" : "org.apache.spark.streaming.dstream.DStream.slice", "link" : "org\/apache\/spark\/streaming\/dstream\/DStream.html#slice(fromTime:org.apache.spark.streaming.Time,toTime:org.apache.spark.streaming.Time):Seq[org.apache.spark.rdd.RDD[T]]", "kind" : "def"}, {"label" : "slice", "tail" : "(interval: Interval): Seq[RDD[T]]", "member" : "org.apache.spark.streaming.dstream.DStream.slice", "link" : "org\/apache\/spark\/streaming\/dstream\/DStream.html#slice(interval:org.apache.spark.streaming.Interval):Seq[org.apache.spark.rdd.RDD[T]]", "kind" : "def"}, {"label" : "union", "tail" : "(that: DStream[T]): DStream[T]", "member" : "org.apache.spark.streaming.dstream.DStream.union", "link" : "org\/apache\/spark\/streaming\/dstream\/DStream.html#union(that:org.apache.spark.streaming.dstream.DStream[T]):org.apache.spark.streaming.dstream.DStream[T]", "kind" : "def"}, {"label" : "countByValueAndWindow", "tail" : "(windowDuration: Duration, slideDuration: Duration, numPartitions: Int)(ord: Ordering[T]): DStream[(T, Long)]", "member" : "org.apache.spark.streaming.dstream.DStream.countByValueAndWindow", "link" : "org\/apache\/spark\/streaming\/dstream\/DStream.html#countByValueAndWindow(windowDuration:org.apache.spark.streaming.Duration,slideDuration:org.apache.spark.streaming.Duration,numPartitions:Int)(implicitord:Ordering[T]):org.apache.spark.streaming.dstream.DStream[(T,Long)]", "kind" : "def"}, {"label" : "countByWindow", "tail" : "(windowDuration: Duration, slideDuration: Duration): DStream[Long]", "member" : "org.apache.spark.streaming.dstream.DStream.countByWindow", "link" : "org\/apache\/spark\/streaming\/dstream\/DStream.html#countByWindow(windowDuration:org.apache.spark.streaming.Duration,slideDuration:org.apache.spark.streaming.Duration):org.apache.spark.streaming.dstream.DStream[Long]", "kind" : "def"}, {"label" : "reduceByWindow", "tail" : "(reduceFunc: (T, T) ⇒ T, invReduceFunc: (T, T) ⇒ T, windowDuration: Duration, slideDuration: Duration): DStream[T]", "member" : "org.apache.spark.streaming.dstream.DStream.reduceByWindow", "link" : "org\/apache\/spark\/streaming\/dstream\/DStream.html#reduceByWindow(reduceFunc:(T,T)=>T,invReduceFunc:(T,T)=>T,windowDuration:org.apache.spark.streaming.Duration,slideDuration:org.apache.spark.streaming.Duration):org.apache.spark.streaming.dstream.DStream[T]", "kind" : "def"}, {"label" : "reduceByWindow", "tail" : "(reduceFunc: (T, T) ⇒ T, windowDuration: Duration, slideDuration: Duration): DStream[T]", "member" : "org.apache.spark.streaming.dstream.DStream.reduceByWindow", "link" : "org\/apache\/spark\/streaming\/dstream\/DStream.html#reduceByWindow(reduceFunc:(T,T)=>T,windowDuration:org.apache.spark.streaming.Duration,slideDuration:org.apache.spark.streaming.Duration):org.apache.spark.streaming.dstream.DStream[T]", "kind" : "def"}, {"label" : "window", "tail" : "(windowDuration: Duration, slideDuration: Duration): DStream[T]", "member" : "org.apache.spark.streaming.dstream.DStream.window", "link" : "org\/apache\/spark\/streaming\/dstream\/DStream.html#window(windowDuration:org.apache.spark.streaming.Duration,slideDuration:org.apache.spark.streaming.Duration):org.apache.spark.streaming.dstream.DStream[T]", "kind" : "def"}, {"label" : "window", "tail" : "(windowDuration: Duration): DStream[T]", "member" : "org.apache.spark.streaming.dstream.DStream.window", "link" : "org\/apache\/spark\/streaming\/dstream\/DStream.html#window(windowDuration:org.apache.spark.streaming.Duration):org.apache.spark.streaming.dstream.DStream[T]", "kind" : "def"}, {"label" : "print", "tail" : "(num: Int): Unit", "member" : "org.apache.spark.streaming.dstream.DStream.print", "link" : "org\/apache\/spark\/streaming\/dstream\/DStream.html#print(num:Int):Unit", "kind" : "def"}, {"label" : "print", "tail" : "(): Unit", "member" : "org.apache.spark.streaming.dstream.DStream.print", "link" : "org\/apache\/spark\/streaming\/dstream\/DStream.html#print():Unit", "kind" : "def"}, {"label" : "transformWith", "tail" : "(other: DStream[U], transformFunc: (RDD[T], RDD[U], Time) ⇒ RDD[V])(arg0: ClassTag[U], arg1: ClassTag[V]): DStream[V]", "member" : "org.apache.spark.streaming.dstream.DStream.transformWith", "link" : "org\/apache\/spark\/streaming\/dstream\/DStream.html#transformWith[U,V](other:org.apache.spark.streaming.dstream.DStream[U],transformFunc:(org.apache.spark.rdd.RDD[T],org.apache.spark.rdd.RDD[U],org.apache.spark.streaming.Time)=>org.apache.spark.rdd.RDD[V])(implicitevidence$9:scala.reflect.ClassTag[U],implicitevidence$10:scala.reflect.ClassTag[V]):org.apache.spark.streaming.dstream.DStream[V]", "kind" : "def"}, {"label" : "transformWith", "tail" : "(other: DStream[U], transformFunc: (RDD[T], RDD[U]) ⇒ RDD[V])(arg0: ClassTag[U], arg1: ClassTag[V]): DStream[V]", "member" : "org.apache.spark.streaming.dstream.DStream.transformWith", "link" : "org\/apache\/spark\/streaming\/dstream\/DStream.html#transformWith[U,V](other:org.apache.spark.streaming.dstream.DStream[U],transformFunc:(org.apache.spark.rdd.RDD[T],org.apache.spark.rdd.RDD[U])=>org.apache.spark.rdd.RDD[V])(implicitevidence$7:scala.reflect.ClassTag[U],implicitevidence$8:scala.reflect.ClassTag[V]):org.apache.spark.streaming.dstream.DStream[V]", "kind" : "def"}, {"label" : "transform", "tail" : "(transformFunc: (RDD[T], Time) ⇒ RDD[U])(arg0: ClassTag[U]): DStream[U]", "member" : "org.apache.spark.streaming.dstream.DStream.transform", "link" : "org\/apache\/spark\/streaming\/dstream\/DStream.html#transform[U](transformFunc:(org.apache.spark.rdd.RDD[T],org.apache.spark.streaming.Time)=>org.apache.spark.rdd.RDD[U])(implicitevidence$6:scala.reflect.ClassTag[U]):org.apache.spark.streaming.dstream.DStream[U]", "kind" : "def"}, {"label" : "transform", "tail" : "(transformFunc: (RDD[T]) ⇒ RDD[U])(arg0: ClassTag[U]): DStream[U]", "member" : "org.apache.spark.streaming.dstream.DStream.transform", "link" : "org\/apache\/spark\/streaming\/dstream\/DStream.html#transform[U](transformFunc:org.apache.spark.rdd.RDD[T]=>org.apache.spark.rdd.RDD[U])(implicitevidence$5:scala.reflect.ClassTag[U]):org.apache.spark.streaming.dstream.DStream[U]", "kind" : "def"}, {"label" : "foreachRDD", "tail" : "(foreachFunc: (RDD[T], Time) ⇒ Unit): Unit", "member" : "org.apache.spark.streaming.dstream.DStream.foreachRDD", "link" : "org\/apache\/spark\/streaming\/dstream\/DStream.html#foreachRDD(foreachFunc:(org.apache.spark.rdd.RDD[T],org.apache.spark.streaming.Time)=>Unit):Unit", "kind" : "def"}, {"label" : "foreachRDD", "tail" : "(foreachFunc: (RDD[T]) ⇒ Unit): Unit", "member" : "org.apache.spark.streaming.dstream.DStream.foreachRDD", "link" : "org\/apache\/spark\/streaming\/dstream\/DStream.html#foreachRDD(foreachFunc:org.apache.spark.rdd.RDD[T]=>Unit):Unit", "kind" : "def"}, {"label" : "countByValue", "tail" : "(numPartitions: Int)(ord: Ordering[T]): DStream[(T, Long)]", "member" : "org.apache.spark.streaming.dstream.DStream.countByValue", "link" : "org\/apache\/spark\/streaming\/dstream\/DStream.html#countByValue(numPartitions:Int)(implicitord:Ordering[T]):org.apache.spark.streaming.dstream.DStream[(T,Long)]", "kind" : "def"}, {"label" : "count", "tail" : "(): DStream[Long]", "member" : "org.apache.spark.streaming.dstream.DStream.count", "link" : "org\/apache\/spark\/streaming\/dstream\/DStream.html#count():org.apache.spark.streaming.dstream.DStream[Long]", "kind" : "def"}, {"label" : "reduce", "tail" : "(reduceFunc: (T, T) ⇒ T): DStream[T]", "member" : "org.apache.spark.streaming.dstream.DStream.reduce", "link" : "org\/apache\/spark\/streaming\/dstream\/DStream.html#reduce(reduceFunc:(T,T)=>T):org.apache.spark.streaming.dstream.DStream[T]", "kind" : "def"}, {"label" : "mapPartitions", "tail" : "(mapPartFunc: (Iterator[T]) ⇒ Iterator[U], preservePartitioning: Boolean)(arg0: ClassTag[U]): DStream[U]", "member" : "org.apache.spark.streaming.dstream.DStream.mapPartitions", "link" : "org\/apache\/spark\/streaming\/dstream\/DStream.html#mapPartitions[U](mapPartFunc:Iterator[T]=>Iterator[U],preservePartitioning:Boolean)(implicitevidence$4:scala.reflect.ClassTag[U]):org.apache.spark.streaming.dstream.DStream[U]", "kind" : "def"}, {"label" : "repartition", "tail" : "(numPartitions: Int): DStream[T]", "member" : "org.apache.spark.streaming.dstream.DStream.repartition", "link" : "org\/apache\/spark\/streaming\/dstream\/DStream.html#repartition(numPartitions:Int):org.apache.spark.streaming.dstream.DStream[T]", "kind" : "def"}, {"label" : "glom", "tail" : "(): DStream[Array[T]]", "member" : "org.apache.spark.streaming.dstream.DStream.glom", "link" : "org\/apache\/spark\/streaming\/dstream\/DStream.html#glom():org.apache.spark.streaming.dstream.DStream[Array[T]]", "kind" : "def"}, {"label" : "filter", "tail" : "(filterFunc: (T) ⇒ Boolean): DStream[T]", "member" : "org.apache.spark.streaming.dstream.DStream.filter", "link" : "org\/apache\/spark\/streaming\/dstream\/DStream.html#filter(filterFunc:T=>Boolean):org.apache.spark.streaming.dstream.DStream[T]", "kind" : "def"}, {"label" : "flatMap", "tail" : "(flatMapFunc: (T) ⇒ TraversableOnce[U])(arg0: ClassTag[U]): DStream[U]", "member" : "org.apache.spark.streaming.dstream.DStream.flatMap", "link" : "org\/apache\/spark\/streaming\/dstream\/DStream.html#flatMap[U](flatMapFunc:T=>TraversableOnce[U])(implicitevidence$3:scala.reflect.ClassTag[U]):org.apache.spark.streaming.dstream.DStream[U]", "kind" : "def"}, {"label" : "map", "tail" : "(mapFunc: (T) ⇒ U)(arg0: ClassTag[U]): DStream[U]", "member" : "org.apache.spark.streaming.dstream.DStream.map", "link" : "org\/apache\/spark\/streaming\/dstream\/DStream.html#map[U](mapFunc:T=>U)(implicitevidence$2:scala.reflect.ClassTag[U]):org.apache.spark.streaming.dstream.DStream[U]", "kind" : "def"}, {"label" : "createRDDWithLocalProperties", "tail" : "(time: Time, displayInnerRDDOps: Boolean)(body: ⇒ U): U", "member" : "org.apache.spark.streaming.dstream.DStream.createRDDWithLocalProperties", "link" : "org\/apache\/spark\/streaming\/dstream\/DStream.html#createRDDWithLocalProperties[U](time:org.apache.spark.streaming.Time,displayInnerRDDOps:Boolean)(body:=>U):U", "kind" : "def"}, {"label" : "checkpoint", "tail" : "(interval: Duration): DStream[T]", "member" : "org.apache.spark.streaming.dstream.DStream.checkpoint", "link" : "org\/apache\/spark\/streaming\/dstream\/DStream.html#checkpoint(interval:org.apache.spark.streaming.Duration):org.apache.spark.streaming.dstream.DStream[T]", "kind" : "def"}, {"label" : "cache", "tail" : "(): DStream[T]", "member" : "org.apache.spark.streaming.dstream.DStream.cache", "link" : "org\/apache\/spark\/streaming\/dstream\/DStream.html#cache():org.apache.spark.streaming.dstream.DStream[T]", "kind" : "def"}, {"label" : "persist", "tail" : "(): DStream[T]", "member" : "org.apache.spark.streaming.dstream.DStream.persist", "link" : "org\/apache\/spark\/streaming\/dstream\/DStream.html#persist():org.apache.spark.streaming.dstream.DStream[T]", "kind" : "def"}, {"label" : "persist", "tail" : "(level: StorageLevel): DStream[T]", "member" : "org.apache.spark.streaming.dstream.DStream.persist", "link" : "org\/apache\/spark\/streaming\/dstream\/DStream.html#persist(level:org.apache.spark.storage.StorageLevel):org.apache.spark.streaming.dstream.DStream[T]", "kind" : "def"}, {"label" : "baseScope", "tail" : ": Option[String]", "member" : "org.apache.spark.streaming.dstream.DStream.baseScope", "link" : "org\/apache\/spark\/streaming\/dstream\/DStream.html#baseScope:Option[String]", "kind" : "val"}, {"label" : "context", "tail" : "(): StreamingContext", "member" : "org.apache.spark.streaming.dstream.DStream.context", "link" : "org\/apache\/spark\/streaming\/dstream\/DStream.html#context:org.apache.spark.streaming.StreamingContext", "kind" : "def"}, {"member" : "org.apache.spark.streaming.dstream.DStream#<init>", "error" : "unsupported entity"}, {"label" : "initializeLogIfNecessary", "tail" : "(isInterpreter: Boolean, silent: Boolean): Boolean", "member" : "org.apache.spark.internal.Logging.initializeLogIfNecessary", "link" : "org\/apache\/spark\/streaming\/dstream\/DStream.html#initializeLogIfNecessary(isInterpreter:Boolean,silent:Boolean):Boolean", "kind" : "def"}, {"label" : "initializeLogIfNecessary", "tail" : "(isInterpreter: Boolean): Unit", "member" : "org.apache.spark.internal.Logging.initializeLogIfNecessary", "link" : "org\/apache\/spark\/streaming\/dstream\/DStream.html#initializeLogIfNecessary(isInterpreter:Boolean):Unit", "kind" : "def"}, {"label" : "isTraceEnabled", "tail" : "(): Boolean", "member" : "org.apache.spark.internal.Logging.isTraceEnabled", "link" : "org\/apache\/spark\/streaming\/dstream\/DStream.html#isTraceEnabled():Boolean", "kind" : "def"}, {"label" : "logError", "tail" : "(msg: ⇒ String, throwable: Throwable): Unit", "member" : "org.apache.spark.internal.Logging.logError", "link" : "org\/apache\/spark\/streaming\/dstream\/DStream.html#logError(msg:=>String,throwable:Throwable):Unit", "kind" : "def"}, {"label" : "logWarning", "tail" : "(msg: ⇒ String, throwable: Throwable): Unit", "member" : "org.apache.spark.internal.Logging.logWarning", "link" : "org\/apache\/spark\/streaming\/dstream\/DStream.html#logWarning(msg:=>String,throwable:Throwable):Unit", "kind" : "def"}, {"label" : "logTrace", "tail" : "(msg: ⇒ String, throwable: Throwable): Unit", "member" : "org.apache.spark.internal.Logging.logTrace", "link" : "org\/apache\/spark\/streaming\/dstream\/DStream.html#logTrace(msg:=>String,throwable:Throwable):Unit", "kind" : "def"}, {"label" : "logDebug", "tail" : "(msg: ⇒ String, throwable: Throwable): Unit", "member" : "org.apache.spark.internal.Logging.logDebug", "link" : "org\/apache\/spark\/streaming\/dstream\/DStream.html#logDebug(msg:=>String,throwable:Throwable):Unit", "kind" : "def"}, {"label" : "logInfo", "tail" : "(msg: ⇒ String, throwable: Throwable): Unit", "member" : "org.apache.spark.internal.Logging.logInfo", "link" : "org\/apache\/spark\/streaming\/dstream\/DStream.html#logInfo(msg:=>String,throwable:Throwable):Unit", "kind" : "def"}, {"label" : "logError", "tail" : "(msg: ⇒ String): Unit", "member" : "org.apache.spark.internal.Logging.logError", "link" : "org\/apache\/spark\/streaming\/dstream\/DStream.html#logError(msg:=>String):Unit", "kind" : "def"}, {"label" : "logWarning", "tail" : "(msg: ⇒ String): Unit", "member" : "org.apache.spark.internal.Logging.logWarning", "link" : "org\/apache\/spark\/streaming\/dstream\/DStream.html#logWarning(msg:=>String):Unit", "kind" : "def"}, {"label" : "logTrace", "tail" : "(msg: ⇒ String): Unit", "member" : "org.apache.spark.internal.Logging.logTrace", "link" : "org\/apache\/spark\/streaming\/dstream\/DStream.html#logTrace(msg:=>String):Unit", "kind" : "def"}, {"label" : "logDebug", "tail" : "(msg: ⇒ String): Unit", "member" : "org.apache.spark.internal.Logging.logDebug", "link" : "org\/apache\/spark\/streaming\/dstream\/DStream.html#logDebug(msg:=>String):Unit", "kind" : "def"}, {"label" : "logInfo", "tail" : "(msg: ⇒ String): Unit", "member" : "org.apache.spark.internal.Logging.logInfo", "link" : "org\/apache\/spark\/streaming\/dstream\/DStream.html#logInfo(msg:=>String):Unit", "kind" : "def"}, {"label" : "log", "tail" : "(): Logger", "member" : "org.apache.spark.internal.Logging.log", "link" : "org\/apache\/spark\/streaming\/dstream\/DStream.html#log:org.slf4j.Logger", "kind" : "def"}, {"label" : "logName", "tail" : "(): String", "member" : "org.apache.spark.internal.Logging.logName", "link" : "org\/apache\/spark\/streaming\/dstream\/DStream.html#logName:String", "kind" : "def"}, {"label" : "synchronized", "tail" : "(arg0: ⇒ T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "org\/apache\/spark\/streaming\/dstream\/DStream.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "org\/apache\/spark\/streaming\/dstream\/DStream.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "org\/apache\/spark\/streaming\/dstream\/DStream.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "org\/apache\/spark\/streaming\/dstream\/DStream.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "org\/apache\/spark\/streaming\/dstream\/DStream.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "org\/apache\/spark\/streaming\/dstream\/DStream.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "org\/apache\/spark\/streaming\/dstream\/DStream.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "org\/apache\/spark\/streaming\/dstream\/DStream.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "org\/apache\/spark\/streaming\/dstream\/DStream.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "org\/apache\/spark\/streaming\/dstream\/DStream.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "org\/apache\/spark\/streaming\/dstream\/DStream.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "org\/apache\/spark\/streaming\/dstream\/DStream.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "org\/apache\/spark\/streaming\/dstream\/DStream.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "org\/apache\/spark\/streaming\/dstream\/DStream.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.equals", "link" : "org\/apache\/spark\/streaming\/dstream\/DStream.html#equals(x$1:Any):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "org\/apache\/spark\/streaming\/dstream\/DStream.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_]", "member" : "scala.AnyRef.getClass", "link" : "org\/apache\/spark\/streaming\/dstream\/DStream.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "org\/apache\/spark\/streaming\/dstream\/DStream.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "org\/apache\/spark\/streaming\/dstream\/DStream.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}, {"label" : "compute", "tail" : "(validTime: Time): Option[RDD[T]]", "member" : "org.apache.spark.streaming.dstream.DStream.compute", "link" : "org\/apache\/spark\/streaming\/dstream\/DStream.html#compute(validTime:org.apache.spark.streaming.Time):Option[org.apache.spark.rdd.RDD[T]]", "kind" : "abstract def"}, {"label" : "dependencies", "tail" : "(): List[DStream[_]]", "member" : "org.apache.spark.streaming.dstream.DStream.dependencies", "link" : "org\/apache\/spark\/streaming\/dstream\/DStream.html#dependencies:List[org.apache.spark.streaming.dstream.DStream[_]]", "kind" : "abstract def"}, {"label" : "slideDuration", "tail" : "(): Duration", "member" : "org.apache.spark.streaming.dstream.DStream.slideDuration", "link" : "org\/apache\/spark\/streaming\/dstream\/DStream.html#slideDuration:org.apache.spark.streaming.Duration", "kind" : "abstract def"}], "members_object" : [{"label" : "toPairDStreamFunctions", "tail" : "(stream: DStream[(K, V)])(kt: ClassTag[K], vt: ClassTag[V], ord: Ordering[K]): PairDStreamFunctions[K, V]", "member" : "org.apache.spark.streaming.dstream.DStream.toPairDStreamFunctions", "link" : "org\/apache\/spark\/streaming\/dstream\/DStream$.html#toPairDStreamFunctions[K,V](stream:org.apache.spark.streaming.dstream.DStream[(K,V)])(implicitkt:scala.reflect.ClassTag[K],implicitvt:scala.reflect.ClassTag[V],implicitord:Ordering[K]):org.apache.spark.streaming.dstream.PairDStreamFunctions[K,V]", "kind" : "implicit def"}, {"label" : "synchronized", "tail" : "(arg0: ⇒ T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "org\/apache\/spark\/streaming\/dstream\/DStream$.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "org\/apache\/spark\/streaming\/dstream\/DStream$.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "org\/apache\/spark\/streaming\/dstream\/DStream$.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "org\/apache\/spark\/streaming\/dstream\/DStream$.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "org\/apache\/spark\/streaming\/dstream\/DStream$.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "org\/apache\/spark\/streaming\/dstream\/DStream$.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "org\/apache\/spark\/streaming\/dstream\/DStream$.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "org\/apache\/spark\/streaming\/dstream\/DStream$.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "org\/apache\/spark\/streaming\/dstream\/DStream$.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "org\/apache\/spark\/streaming\/dstream\/DStream$.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "org\/apache\/spark\/streaming\/dstream\/DStream$.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "org\/apache\/spark\/streaming\/dstream\/DStream$.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "org\/apache\/spark\/streaming\/dstream\/DStream$.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "org\/apache\/spark\/streaming\/dstream\/DStream$.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.equals", "link" : "org\/apache\/spark\/streaming\/dstream\/DStream$.html#equals(x$1:Any):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "org\/apache\/spark\/streaming\/dstream\/DStream$.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_]", "member" : "scala.AnyRef.getClass", "link" : "org\/apache\/spark\/streaming\/dstream\/DStream$.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "org\/apache\/spark\/streaming\/dstream\/DStream$.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "org\/apache\/spark\/streaming\/dstream\/DStream$.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "class" : "org\/apache\/spark\/streaming\/dstream\/DStream.html", "kind" : "class"}, {"name" : "org.apache.spark.streaming.dstream.InputDStream", "shortDescription" : "This is the abstract base class for all input streams.", "members_class" : [{"label" : "slideDuration", "tail" : "(): Duration", "member" : "org.apache.spark.streaming.dstream.InputDStream.slideDuration", "link" : "org\/apache\/spark\/streaming\/dstream\/InputDStream.html#slideDuration:org.apache.spark.streaming.Duration", "kind" : "def"}, {"label" : "dependencies", "tail" : "(): List[DStream[_]]", "member" : "org.apache.spark.streaming.dstream.InputDStream.dependencies", "link" : "org\/apache\/spark\/streaming\/dstream\/InputDStream.html#dependencies:List[org.apache.spark.streaming.dstream.DStream[_]]", "kind" : "def"}, {"label" : "baseScope", "tail" : ": Option[String]", "member" : "org.apache.spark.streaming.dstream.InputDStream.baseScope", "link" : "org\/apache\/spark\/streaming\/dstream\/InputDStream.html#baseScope:Option[String]", "kind" : "val"}, {"label" : "rateController", "tail" : ": Option[RateController]", "member" : "org.apache.spark.streaming.dstream.InputDStream.rateController", "link" : "org\/apache\/spark\/streaming\/dstream\/InputDStream.html#rateController:Option[org.apache.spark.streaming.scheduler.RateController]", "kind" : "val"}, {"label" : "id", "tail" : ": Int", "member" : "org.apache.spark.streaming.dstream.InputDStream.id", "link" : "org\/apache\/spark\/streaming\/dstream\/InputDStream.html#id:Int", "kind" : "val"}, {"member" : "org.apache.spark.streaming.dstream.InputDStream#<init>", "error" : "unsupported entity"}, {"label" : "saveAsTextFiles", "tail" : "(prefix: String, suffix: String): Unit", "member" : "org.apache.spark.streaming.dstream.DStream.saveAsTextFiles", "link" : "org\/apache\/spark\/streaming\/dstream\/InputDStream.html#saveAsTextFiles(prefix:String,suffix:String):Unit", "kind" : "def"}, {"label" : "saveAsObjectFiles", "tail" : "(prefix: String, suffix: String): Unit", "member" : "org.apache.spark.streaming.dstream.DStream.saveAsObjectFiles", "link" : "org\/apache\/spark\/streaming\/dstream\/InputDStream.html#saveAsObjectFiles(prefix:String,suffix:String):Unit", "kind" : "def"}, {"label" : "slice", "tail" : "(fromTime: Time, toTime: Time): Seq[RDD[T]]", "member" : "org.apache.spark.streaming.dstream.DStream.slice", "link" : "org\/apache\/spark\/streaming\/dstream\/InputDStream.html#slice(fromTime:org.apache.spark.streaming.Time,toTime:org.apache.spark.streaming.Time):Seq[org.apache.spark.rdd.RDD[T]]", "kind" : "def"}, {"label" : "slice", "tail" : "(interval: Interval): Seq[RDD[T]]", "member" : "org.apache.spark.streaming.dstream.DStream.slice", "link" : "org\/apache\/spark\/streaming\/dstream\/InputDStream.html#slice(interval:org.apache.spark.streaming.Interval):Seq[org.apache.spark.rdd.RDD[T]]", "kind" : "def"}, {"label" : "union", "tail" : "(that: DStream[T]): DStream[T]", "member" : "org.apache.spark.streaming.dstream.DStream.union", "link" : "org\/apache\/spark\/streaming\/dstream\/InputDStream.html#union(that:org.apache.spark.streaming.dstream.DStream[T]):org.apache.spark.streaming.dstream.DStream[T]", "kind" : "def"}, {"label" : "countByValueAndWindow", "tail" : "(windowDuration: Duration, slideDuration: Duration, numPartitions: Int)(ord: Ordering[T]): DStream[(T, Long)]", "member" : "org.apache.spark.streaming.dstream.DStream.countByValueAndWindow", "link" : "org\/apache\/spark\/streaming\/dstream\/InputDStream.html#countByValueAndWindow(windowDuration:org.apache.spark.streaming.Duration,slideDuration:org.apache.spark.streaming.Duration,numPartitions:Int)(implicitord:Ordering[T]):org.apache.spark.streaming.dstream.DStream[(T,Long)]", "kind" : "def"}, {"label" : "countByWindow", "tail" : "(windowDuration: Duration, slideDuration: Duration): DStream[Long]", "member" : "org.apache.spark.streaming.dstream.DStream.countByWindow", "link" : "org\/apache\/spark\/streaming\/dstream\/InputDStream.html#countByWindow(windowDuration:org.apache.spark.streaming.Duration,slideDuration:org.apache.spark.streaming.Duration):org.apache.spark.streaming.dstream.DStream[Long]", "kind" : "def"}, {"label" : "reduceByWindow", "tail" : "(reduceFunc: (T, T) ⇒ T, invReduceFunc: (T, T) ⇒ T, windowDuration: Duration, slideDuration: Duration): DStream[T]", "member" : "org.apache.spark.streaming.dstream.DStream.reduceByWindow", "link" : "org\/apache\/spark\/streaming\/dstream\/InputDStream.html#reduceByWindow(reduceFunc:(T,T)=>T,invReduceFunc:(T,T)=>T,windowDuration:org.apache.spark.streaming.Duration,slideDuration:org.apache.spark.streaming.Duration):org.apache.spark.streaming.dstream.DStream[T]", "kind" : "def"}, {"label" : "reduceByWindow", "tail" : "(reduceFunc: (T, T) ⇒ T, windowDuration: Duration, slideDuration: Duration): DStream[T]", "member" : "org.apache.spark.streaming.dstream.DStream.reduceByWindow", "link" : "org\/apache\/spark\/streaming\/dstream\/InputDStream.html#reduceByWindow(reduceFunc:(T,T)=>T,windowDuration:org.apache.spark.streaming.Duration,slideDuration:org.apache.spark.streaming.Duration):org.apache.spark.streaming.dstream.DStream[T]", "kind" : "def"}, {"label" : "window", "tail" : "(windowDuration: Duration, slideDuration: Duration): DStream[T]", "member" : "org.apache.spark.streaming.dstream.DStream.window", "link" : "org\/apache\/spark\/streaming\/dstream\/InputDStream.html#window(windowDuration:org.apache.spark.streaming.Duration,slideDuration:org.apache.spark.streaming.Duration):org.apache.spark.streaming.dstream.DStream[T]", "kind" : "def"}, {"label" : "window", "tail" : "(windowDuration: Duration): DStream[T]", "member" : "org.apache.spark.streaming.dstream.DStream.window", "link" : "org\/apache\/spark\/streaming\/dstream\/InputDStream.html#window(windowDuration:org.apache.spark.streaming.Duration):org.apache.spark.streaming.dstream.DStream[T]", "kind" : "def"}, {"label" : "print", "tail" : "(num: Int): Unit", "member" : "org.apache.spark.streaming.dstream.DStream.print", "link" : "org\/apache\/spark\/streaming\/dstream\/InputDStream.html#print(num:Int):Unit", "kind" : "def"}, {"label" : "print", "tail" : "(): Unit", "member" : "org.apache.spark.streaming.dstream.DStream.print", "link" : "org\/apache\/spark\/streaming\/dstream\/InputDStream.html#print():Unit", "kind" : "def"}, {"label" : "transformWith", "tail" : "(other: DStream[U], transformFunc: (RDD[T], RDD[U], Time) ⇒ RDD[V])(arg0: ClassTag[U], arg1: ClassTag[V]): DStream[V]", "member" : "org.apache.spark.streaming.dstream.DStream.transformWith", "link" : "org\/apache\/spark\/streaming\/dstream\/InputDStream.html#transformWith[U,V](other:org.apache.spark.streaming.dstream.DStream[U],transformFunc:(org.apache.spark.rdd.RDD[T],org.apache.spark.rdd.RDD[U],org.apache.spark.streaming.Time)=>org.apache.spark.rdd.RDD[V])(implicitevidence$9:scala.reflect.ClassTag[U],implicitevidence$10:scala.reflect.ClassTag[V]):org.apache.spark.streaming.dstream.DStream[V]", "kind" : "def"}, {"label" : "transformWith", "tail" : "(other: DStream[U], transformFunc: (RDD[T], RDD[U]) ⇒ RDD[V])(arg0: ClassTag[U], arg1: ClassTag[V]): DStream[V]", "member" : "org.apache.spark.streaming.dstream.DStream.transformWith", "link" : "org\/apache\/spark\/streaming\/dstream\/InputDStream.html#transformWith[U,V](other:org.apache.spark.streaming.dstream.DStream[U],transformFunc:(org.apache.spark.rdd.RDD[T],org.apache.spark.rdd.RDD[U])=>org.apache.spark.rdd.RDD[V])(implicitevidence$7:scala.reflect.ClassTag[U],implicitevidence$8:scala.reflect.ClassTag[V]):org.apache.spark.streaming.dstream.DStream[V]", "kind" : "def"}, {"label" : "transform", "tail" : "(transformFunc: (RDD[T], Time) ⇒ RDD[U])(arg0: ClassTag[U]): DStream[U]", "member" : "org.apache.spark.streaming.dstream.DStream.transform", "link" : "org\/apache\/spark\/streaming\/dstream\/InputDStream.html#transform[U](transformFunc:(org.apache.spark.rdd.RDD[T],org.apache.spark.streaming.Time)=>org.apache.spark.rdd.RDD[U])(implicitevidence$6:scala.reflect.ClassTag[U]):org.apache.spark.streaming.dstream.DStream[U]", "kind" : "def"}, {"label" : "transform", "tail" : "(transformFunc: (RDD[T]) ⇒ RDD[U])(arg0: ClassTag[U]): DStream[U]", "member" : "org.apache.spark.streaming.dstream.DStream.transform", "link" : "org\/apache\/spark\/streaming\/dstream\/InputDStream.html#transform[U](transformFunc:org.apache.spark.rdd.RDD[T]=>org.apache.spark.rdd.RDD[U])(implicitevidence$5:scala.reflect.ClassTag[U]):org.apache.spark.streaming.dstream.DStream[U]", "kind" : "def"}, {"label" : "foreachRDD", "tail" : "(foreachFunc: (RDD[T], Time) ⇒ Unit): Unit", "member" : "org.apache.spark.streaming.dstream.DStream.foreachRDD", "link" : "org\/apache\/spark\/streaming\/dstream\/InputDStream.html#foreachRDD(foreachFunc:(org.apache.spark.rdd.RDD[T],org.apache.spark.streaming.Time)=>Unit):Unit", "kind" : "def"}, {"label" : "foreachRDD", "tail" : "(foreachFunc: (RDD[T]) ⇒ Unit): Unit", "member" : "org.apache.spark.streaming.dstream.DStream.foreachRDD", "link" : "org\/apache\/spark\/streaming\/dstream\/InputDStream.html#foreachRDD(foreachFunc:org.apache.spark.rdd.RDD[T]=>Unit):Unit", "kind" : "def"}, {"label" : "countByValue", "tail" : "(numPartitions: Int)(ord: Ordering[T]): DStream[(T, Long)]", "member" : "org.apache.spark.streaming.dstream.DStream.countByValue", "link" : "org\/apache\/spark\/streaming\/dstream\/InputDStream.html#countByValue(numPartitions:Int)(implicitord:Ordering[T]):org.apache.spark.streaming.dstream.DStream[(T,Long)]", "kind" : "def"}, {"label" : "count", "tail" : "(): DStream[Long]", "member" : "org.apache.spark.streaming.dstream.DStream.count", "link" : "org\/apache\/spark\/streaming\/dstream\/InputDStream.html#count():org.apache.spark.streaming.dstream.DStream[Long]", "kind" : "def"}, {"label" : "reduce", "tail" : "(reduceFunc: (T, T) ⇒ T): DStream[T]", "member" : "org.apache.spark.streaming.dstream.DStream.reduce", "link" : "org\/apache\/spark\/streaming\/dstream\/InputDStream.html#reduce(reduceFunc:(T,T)=>T):org.apache.spark.streaming.dstream.DStream[T]", "kind" : "def"}, {"label" : "mapPartitions", "tail" : "(mapPartFunc: (Iterator[T]) ⇒ Iterator[U], preservePartitioning: Boolean)(arg0: ClassTag[U]): DStream[U]", "member" : "org.apache.spark.streaming.dstream.DStream.mapPartitions", "link" : "org\/apache\/spark\/streaming\/dstream\/InputDStream.html#mapPartitions[U](mapPartFunc:Iterator[T]=>Iterator[U],preservePartitioning:Boolean)(implicitevidence$4:scala.reflect.ClassTag[U]):org.apache.spark.streaming.dstream.DStream[U]", "kind" : "def"}, {"label" : "repartition", "tail" : "(numPartitions: Int): DStream[T]", "member" : "org.apache.spark.streaming.dstream.DStream.repartition", "link" : "org\/apache\/spark\/streaming\/dstream\/InputDStream.html#repartition(numPartitions:Int):org.apache.spark.streaming.dstream.DStream[T]", "kind" : "def"}, {"label" : "glom", "tail" : "(): DStream[Array[T]]", "member" : "org.apache.spark.streaming.dstream.DStream.glom", "link" : "org\/apache\/spark\/streaming\/dstream\/InputDStream.html#glom():org.apache.spark.streaming.dstream.DStream[Array[T]]", "kind" : "def"}, {"label" : "filter", "tail" : "(filterFunc: (T) ⇒ Boolean): DStream[T]", "member" : "org.apache.spark.streaming.dstream.DStream.filter", "link" : "org\/apache\/spark\/streaming\/dstream\/InputDStream.html#filter(filterFunc:T=>Boolean):org.apache.spark.streaming.dstream.DStream[T]", "kind" : "def"}, {"label" : "flatMap", "tail" : "(flatMapFunc: (T) ⇒ TraversableOnce[U])(arg0: ClassTag[U]): DStream[U]", "member" : "org.apache.spark.streaming.dstream.DStream.flatMap", "link" : "org\/apache\/spark\/streaming\/dstream\/InputDStream.html#flatMap[U](flatMapFunc:T=>TraversableOnce[U])(implicitevidence$3:scala.reflect.ClassTag[U]):org.apache.spark.streaming.dstream.DStream[U]", "kind" : "def"}, {"label" : "map", "tail" : "(mapFunc: (T) ⇒ U)(arg0: ClassTag[U]): DStream[U]", "member" : "org.apache.spark.streaming.dstream.DStream.map", "link" : "org\/apache\/spark\/streaming\/dstream\/InputDStream.html#map[U](mapFunc:T=>U)(implicitevidence$2:scala.reflect.ClassTag[U]):org.apache.spark.streaming.dstream.DStream[U]", "kind" : "def"}, {"label" : "createRDDWithLocalProperties", "tail" : "(time: Time, displayInnerRDDOps: Boolean)(body: ⇒ U): U", "member" : "org.apache.spark.streaming.dstream.DStream.createRDDWithLocalProperties", "link" : "org\/apache\/spark\/streaming\/dstream\/InputDStream.html#createRDDWithLocalProperties[U](time:org.apache.spark.streaming.Time,displayInnerRDDOps:Boolean)(body:=>U):U", "kind" : "def"}, {"label" : "checkpoint", "tail" : "(interval: Duration): DStream[T]", "member" : "org.apache.spark.streaming.dstream.DStream.checkpoint", "link" : "org\/apache\/spark\/streaming\/dstream\/InputDStream.html#checkpoint(interval:org.apache.spark.streaming.Duration):org.apache.spark.streaming.dstream.DStream[T]", "kind" : "def"}, {"label" : "cache", "tail" : "(): DStream[T]", "member" : "org.apache.spark.streaming.dstream.DStream.cache", "link" : "org\/apache\/spark\/streaming\/dstream\/InputDStream.html#cache():org.apache.spark.streaming.dstream.DStream[T]", "kind" : "def"}, {"label" : "persist", "tail" : "(): DStream[T]", "member" : "org.apache.spark.streaming.dstream.DStream.persist", "link" : "org\/apache\/spark\/streaming\/dstream\/InputDStream.html#persist():org.apache.spark.streaming.dstream.DStream[T]", "kind" : "def"}, {"label" : "persist", "tail" : "(level: StorageLevel): DStream[T]", "member" : "org.apache.spark.streaming.dstream.DStream.persist", "link" : "org\/apache\/spark\/streaming\/dstream\/InputDStream.html#persist(level:org.apache.spark.storage.StorageLevel):org.apache.spark.streaming.dstream.DStream[T]", "kind" : "def"}, {"label" : "context", "tail" : "(): StreamingContext", "member" : "org.apache.spark.streaming.dstream.DStream.context", "link" : "org\/apache\/spark\/streaming\/dstream\/InputDStream.html#context:org.apache.spark.streaming.StreamingContext", "kind" : "def"}, {"label" : "initializeLogIfNecessary", "tail" : "(isInterpreter: Boolean, silent: Boolean): Boolean", "member" : "org.apache.spark.internal.Logging.initializeLogIfNecessary", "link" : "org\/apache\/spark\/streaming\/dstream\/InputDStream.html#initializeLogIfNecessary(isInterpreter:Boolean,silent:Boolean):Boolean", "kind" : "def"}, {"label" : "initializeLogIfNecessary", "tail" : "(isInterpreter: Boolean): Unit", "member" : "org.apache.spark.internal.Logging.initializeLogIfNecessary", "link" : "org\/apache\/spark\/streaming\/dstream\/InputDStream.html#initializeLogIfNecessary(isInterpreter:Boolean):Unit", "kind" : "def"}, {"label" : "isTraceEnabled", "tail" : "(): Boolean", "member" : "org.apache.spark.internal.Logging.isTraceEnabled", "link" : "org\/apache\/spark\/streaming\/dstream\/InputDStream.html#isTraceEnabled():Boolean", "kind" : "def"}, {"label" : "logError", "tail" : "(msg: ⇒ String, throwable: Throwable): Unit", "member" : "org.apache.spark.internal.Logging.logError", "link" : "org\/apache\/spark\/streaming\/dstream\/InputDStream.html#logError(msg:=>String,throwable:Throwable):Unit", "kind" : "def"}, {"label" : "logWarning", "tail" : "(msg: ⇒ String, throwable: Throwable): Unit", "member" : "org.apache.spark.internal.Logging.logWarning", "link" : "org\/apache\/spark\/streaming\/dstream\/InputDStream.html#logWarning(msg:=>String,throwable:Throwable):Unit", "kind" : "def"}, {"label" : "logTrace", "tail" : "(msg: ⇒ String, throwable: Throwable): Unit", "member" : "org.apache.spark.internal.Logging.logTrace", "link" : "org\/apache\/spark\/streaming\/dstream\/InputDStream.html#logTrace(msg:=>String,throwable:Throwable):Unit", "kind" : "def"}, {"label" : "logDebug", "tail" : "(msg: ⇒ String, throwable: Throwable): Unit", "member" : "org.apache.spark.internal.Logging.logDebug", "link" : "org\/apache\/spark\/streaming\/dstream\/InputDStream.html#logDebug(msg:=>String,throwable:Throwable):Unit", "kind" : "def"}, {"label" : "logInfo", "tail" : "(msg: ⇒ String, throwable: Throwable): Unit", "member" : "org.apache.spark.internal.Logging.logInfo", "link" : "org\/apache\/spark\/streaming\/dstream\/InputDStream.html#logInfo(msg:=>String,throwable:Throwable):Unit", "kind" : "def"}, {"label" : "logError", "tail" : "(msg: ⇒ String): Unit", "member" : "org.apache.spark.internal.Logging.logError", "link" : "org\/apache\/spark\/streaming\/dstream\/InputDStream.html#logError(msg:=>String):Unit", "kind" : "def"}, {"label" : "logWarning", "tail" : "(msg: ⇒ String): Unit", "member" : "org.apache.spark.internal.Logging.logWarning", "link" : "org\/apache\/spark\/streaming\/dstream\/InputDStream.html#logWarning(msg:=>String):Unit", "kind" : "def"}, {"label" : "logTrace", "tail" : "(msg: ⇒ String): Unit", "member" : "org.apache.spark.internal.Logging.logTrace", "link" : "org\/apache\/spark\/streaming\/dstream\/InputDStream.html#logTrace(msg:=>String):Unit", "kind" : "def"}, {"label" : "logDebug", "tail" : "(msg: ⇒ String): Unit", "member" : "org.apache.spark.internal.Logging.logDebug", "link" : "org\/apache\/spark\/streaming\/dstream\/InputDStream.html#logDebug(msg:=>String):Unit", "kind" : "def"}, {"label" : "logInfo", "tail" : "(msg: ⇒ String): Unit", "member" : "org.apache.spark.internal.Logging.logInfo", "link" : "org\/apache\/spark\/streaming\/dstream\/InputDStream.html#logInfo(msg:=>String):Unit", "kind" : "def"}, {"label" : "log", "tail" : "(): Logger", "member" : "org.apache.spark.internal.Logging.log", "link" : "org\/apache\/spark\/streaming\/dstream\/InputDStream.html#log:org.slf4j.Logger", "kind" : "def"}, {"label" : "logName", "tail" : "(): String", "member" : "org.apache.spark.internal.Logging.logName", "link" : "org\/apache\/spark\/streaming\/dstream\/InputDStream.html#logName:String", "kind" : "def"}, {"label" : "synchronized", "tail" : "(arg0: ⇒ T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "org\/apache\/spark\/streaming\/dstream\/InputDStream.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "org\/apache\/spark\/streaming\/dstream\/InputDStream.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "org\/apache\/spark\/streaming\/dstream\/InputDStream.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "org\/apache\/spark\/streaming\/dstream\/InputDStream.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "org\/apache\/spark\/streaming\/dstream\/InputDStream.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "org\/apache\/spark\/streaming\/dstream\/InputDStream.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "org\/apache\/spark\/streaming\/dstream\/InputDStream.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "org\/apache\/spark\/streaming\/dstream\/InputDStream.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "org\/apache\/spark\/streaming\/dstream\/InputDStream.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "org\/apache\/spark\/streaming\/dstream\/InputDStream.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "org\/apache\/spark\/streaming\/dstream\/InputDStream.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "org\/apache\/spark\/streaming\/dstream\/InputDStream.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "org\/apache\/spark\/streaming\/dstream\/InputDStream.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "org\/apache\/spark\/streaming\/dstream\/InputDStream.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.equals", "link" : "org\/apache\/spark\/streaming\/dstream\/InputDStream.html#equals(x$1:Any):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "org\/apache\/spark\/streaming\/dstream\/InputDStream.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_]", "member" : "scala.AnyRef.getClass", "link" : "org\/apache\/spark\/streaming\/dstream\/InputDStream.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "org\/apache\/spark\/streaming\/dstream\/InputDStream.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "org\/apache\/spark\/streaming\/dstream\/InputDStream.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}, {"label" : "stop", "tail" : "(): Unit", "member" : "org.apache.spark.streaming.dstream.InputDStream.stop", "link" : "org\/apache\/spark\/streaming\/dstream\/InputDStream.html#stop():Unit", "kind" : "abstract def"}, {"label" : "start", "tail" : "(): Unit", "member" : "org.apache.spark.streaming.dstream.InputDStream.start", "link" : "org\/apache\/spark\/streaming\/dstream\/InputDStream.html#start():Unit", "kind" : "abstract def"}, {"label" : "compute", "tail" : "(validTime: Time): Option[RDD[T]]", "member" : "org.apache.spark.streaming.dstream.DStream.compute", "link" : "org\/apache\/spark\/streaming\/dstream\/InputDStream.html#compute(validTime:org.apache.spark.streaming.Time):Option[org.apache.spark.rdd.RDD[T]]", "kind" : "abstract def"}], "class" : "org\/apache\/spark\/streaming\/dstream\/InputDStream.html", "kind" : "class"}, {"name" : "org.apache.spark.streaming.dstream.MapWithStateDStream", "shortDescription" : "DStream representing the stream of data generated by mapWithState operation on apair DStream.", "members_class" : [{"label" : "saveAsTextFiles", "tail" : "(prefix: String, suffix: String): Unit", "member" : "org.apache.spark.streaming.dstream.DStream.saveAsTextFiles", "link" : "org\/apache\/spark\/streaming\/dstream\/MapWithStateDStream.html#saveAsTextFiles(prefix:String,suffix:String):Unit", "kind" : "def"}, {"label" : "saveAsObjectFiles", "tail" : "(prefix: String, suffix: String): Unit", "member" : "org.apache.spark.streaming.dstream.DStream.saveAsObjectFiles", "link" : "org\/apache\/spark\/streaming\/dstream\/MapWithStateDStream.html#saveAsObjectFiles(prefix:String,suffix:String):Unit", "kind" : "def"}, {"label" : "slice", "tail" : "(fromTime: Time, toTime: Time): Seq[RDD[MappedType]]", "member" : "org.apache.spark.streaming.dstream.DStream.slice", "link" : "org\/apache\/spark\/streaming\/dstream\/MapWithStateDStream.html#slice(fromTime:org.apache.spark.streaming.Time,toTime:org.apache.spark.streaming.Time):Seq[org.apache.spark.rdd.RDD[T]]", "kind" : "def"}, {"label" : "slice", "tail" : "(interval: Interval): Seq[RDD[MappedType]]", "member" : "org.apache.spark.streaming.dstream.DStream.slice", "link" : "org\/apache\/spark\/streaming\/dstream\/MapWithStateDStream.html#slice(interval:org.apache.spark.streaming.Interval):Seq[org.apache.spark.rdd.RDD[T]]", "kind" : "def"}, {"label" : "union", "tail" : "(that: DStream[MappedType]): DStream[MappedType]", "member" : "org.apache.spark.streaming.dstream.DStream.union", "link" : "org\/apache\/spark\/streaming\/dstream\/MapWithStateDStream.html#union(that:org.apache.spark.streaming.dstream.DStream[T]):org.apache.spark.streaming.dstream.DStream[T]", "kind" : "def"}, {"label" : "countByValueAndWindow", "tail" : "(windowDuration: Duration, slideDuration: Duration, numPartitions: Int)(ord: Ordering[MappedType]): DStream[(MappedType, Long)]", "member" : "org.apache.spark.streaming.dstream.DStream.countByValueAndWindow", "link" : "org\/apache\/spark\/streaming\/dstream\/MapWithStateDStream.html#countByValueAndWindow(windowDuration:org.apache.spark.streaming.Duration,slideDuration:org.apache.spark.streaming.Duration,numPartitions:Int)(implicitord:Ordering[T]):org.apache.spark.streaming.dstream.DStream[(T,Long)]", "kind" : "def"}, {"label" : "countByWindow", "tail" : "(windowDuration: Duration, slideDuration: Duration): DStream[Long]", "member" : "org.apache.spark.streaming.dstream.DStream.countByWindow", "link" : "org\/apache\/spark\/streaming\/dstream\/MapWithStateDStream.html#countByWindow(windowDuration:org.apache.spark.streaming.Duration,slideDuration:org.apache.spark.streaming.Duration):org.apache.spark.streaming.dstream.DStream[Long]", "kind" : "def"}, {"label" : "reduceByWindow", "tail" : "(reduceFunc: (MappedType, MappedType) ⇒ MappedType, invReduceFunc: (MappedType, MappedType) ⇒ MappedType, windowDuration: Duration, slideDuration: Duration): DStream[MappedType]", "member" : "org.apache.spark.streaming.dstream.DStream.reduceByWindow", "link" : "org\/apache\/spark\/streaming\/dstream\/MapWithStateDStream.html#reduceByWindow(reduceFunc:(T,T)=>T,invReduceFunc:(T,T)=>T,windowDuration:org.apache.spark.streaming.Duration,slideDuration:org.apache.spark.streaming.Duration):org.apache.spark.streaming.dstream.DStream[T]", "kind" : "def"}, {"label" : "reduceByWindow", "tail" : "(reduceFunc: (MappedType, MappedType) ⇒ MappedType, windowDuration: Duration, slideDuration: Duration): DStream[MappedType]", "member" : "org.apache.spark.streaming.dstream.DStream.reduceByWindow", "link" : "org\/apache\/spark\/streaming\/dstream\/MapWithStateDStream.html#reduceByWindow(reduceFunc:(T,T)=>T,windowDuration:org.apache.spark.streaming.Duration,slideDuration:org.apache.spark.streaming.Duration):org.apache.spark.streaming.dstream.DStream[T]", "kind" : "def"}, {"label" : "window", "tail" : "(windowDuration: Duration, slideDuration: Duration): DStream[MappedType]", "member" : "org.apache.spark.streaming.dstream.DStream.window", "link" : "org\/apache\/spark\/streaming\/dstream\/MapWithStateDStream.html#window(windowDuration:org.apache.spark.streaming.Duration,slideDuration:org.apache.spark.streaming.Duration):org.apache.spark.streaming.dstream.DStream[T]", "kind" : "def"}, {"label" : "window", "tail" : "(windowDuration: Duration): DStream[MappedType]", "member" : "org.apache.spark.streaming.dstream.DStream.window", "link" : "org\/apache\/spark\/streaming\/dstream\/MapWithStateDStream.html#window(windowDuration:org.apache.spark.streaming.Duration):org.apache.spark.streaming.dstream.DStream[T]", "kind" : "def"}, {"label" : "print", "tail" : "(num: Int): Unit", "member" : "org.apache.spark.streaming.dstream.DStream.print", "link" : "org\/apache\/spark\/streaming\/dstream\/MapWithStateDStream.html#print(num:Int):Unit", "kind" : "def"}, {"label" : "print", "tail" : "(): Unit", "member" : "org.apache.spark.streaming.dstream.DStream.print", "link" : "org\/apache\/spark\/streaming\/dstream\/MapWithStateDStream.html#print():Unit", "kind" : "def"}, {"label" : "transformWith", "tail" : "(other: DStream[U], transformFunc: (RDD[MappedType], RDD[U], Time) ⇒ RDD[V])(arg0: ClassTag[U], arg1: ClassTag[V]): DStream[V]", "member" : "org.apache.spark.streaming.dstream.DStream.transformWith", "link" : "org\/apache\/spark\/streaming\/dstream\/MapWithStateDStream.html#transformWith[U,V](other:org.apache.spark.streaming.dstream.DStream[U],transformFunc:(org.apache.spark.rdd.RDD[T],org.apache.spark.rdd.RDD[U],org.apache.spark.streaming.Time)=>org.apache.spark.rdd.RDD[V])(implicitevidence$9:scala.reflect.ClassTag[U],implicitevidence$10:scala.reflect.ClassTag[V]):org.apache.spark.streaming.dstream.DStream[V]", "kind" : "def"}, {"label" : "transformWith", "tail" : "(other: DStream[U], transformFunc: (RDD[MappedType], RDD[U]) ⇒ RDD[V])(arg0: ClassTag[U], arg1: ClassTag[V]): DStream[V]", "member" : "org.apache.spark.streaming.dstream.DStream.transformWith", "link" : "org\/apache\/spark\/streaming\/dstream\/MapWithStateDStream.html#transformWith[U,V](other:org.apache.spark.streaming.dstream.DStream[U],transformFunc:(org.apache.spark.rdd.RDD[T],org.apache.spark.rdd.RDD[U])=>org.apache.spark.rdd.RDD[V])(implicitevidence$7:scala.reflect.ClassTag[U],implicitevidence$8:scala.reflect.ClassTag[V]):org.apache.spark.streaming.dstream.DStream[V]", "kind" : "def"}, {"label" : "transform", "tail" : "(transformFunc: (RDD[MappedType], Time) ⇒ RDD[U])(arg0: ClassTag[U]): DStream[U]", "member" : "org.apache.spark.streaming.dstream.DStream.transform", "link" : "org\/apache\/spark\/streaming\/dstream\/MapWithStateDStream.html#transform[U](transformFunc:(org.apache.spark.rdd.RDD[T],org.apache.spark.streaming.Time)=>org.apache.spark.rdd.RDD[U])(implicitevidence$6:scala.reflect.ClassTag[U]):org.apache.spark.streaming.dstream.DStream[U]", "kind" : "def"}, {"label" : "transform", "tail" : "(transformFunc: (RDD[MappedType]) ⇒ RDD[U])(arg0: ClassTag[U]): DStream[U]", "member" : "org.apache.spark.streaming.dstream.DStream.transform", "link" : "org\/apache\/spark\/streaming\/dstream\/MapWithStateDStream.html#transform[U](transformFunc:org.apache.spark.rdd.RDD[T]=>org.apache.spark.rdd.RDD[U])(implicitevidence$5:scala.reflect.ClassTag[U]):org.apache.spark.streaming.dstream.DStream[U]", "kind" : "def"}, {"label" : "foreachRDD", "tail" : "(foreachFunc: (RDD[MappedType], Time) ⇒ Unit): Unit", "member" : "org.apache.spark.streaming.dstream.DStream.foreachRDD", "link" : "org\/apache\/spark\/streaming\/dstream\/MapWithStateDStream.html#foreachRDD(foreachFunc:(org.apache.spark.rdd.RDD[T],org.apache.spark.streaming.Time)=>Unit):Unit", "kind" : "def"}, {"label" : "foreachRDD", "tail" : "(foreachFunc: (RDD[MappedType]) ⇒ Unit): Unit", "member" : "org.apache.spark.streaming.dstream.DStream.foreachRDD", "link" : "org\/apache\/spark\/streaming\/dstream\/MapWithStateDStream.html#foreachRDD(foreachFunc:org.apache.spark.rdd.RDD[T]=>Unit):Unit", "kind" : "def"}, {"label" : "countByValue", "tail" : "(numPartitions: Int)(ord: Ordering[MappedType]): DStream[(MappedType, Long)]", "member" : "org.apache.spark.streaming.dstream.DStream.countByValue", "link" : "org\/apache\/spark\/streaming\/dstream\/MapWithStateDStream.html#countByValue(numPartitions:Int)(implicitord:Ordering[T]):org.apache.spark.streaming.dstream.DStream[(T,Long)]", "kind" : "def"}, {"label" : "count", "tail" : "(): DStream[Long]", "member" : "org.apache.spark.streaming.dstream.DStream.count", "link" : "org\/apache\/spark\/streaming\/dstream\/MapWithStateDStream.html#count():org.apache.spark.streaming.dstream.DStream[Long]", "kind" : "def"}, {"label" : "reduce", "tail" : "(reduceFunc: (MappedType, MappedType) ⇒ MappedType): DStream[MappedType]", "member" : "org.apache.spark.streaming.dstream.DStream.reduce", "link" : "org\/apache\/spark\/streaming\/dstream\/MapWithStateDStream.html#reduce(reduceFunc:(T,T)=>T):org.apache.spark.streaming.dstream.DStream[T]", "kind" : "def"}, {"label" : "mapPartitions", "tail" : "(mapPartFunc: (Iterator[MappedType]) ⇒ Iterator[U], preservePartitioning: Boolean)(arg0: ClassTag[U]): DStream[U]", "member" : "org.apache.spark.streaming.dstream.DStream.mapPartitions", "link" : "org\/apache\/spark\/streaming\/dstream\/MapWithStateDStream.html#mapPartitions[U](mapPartFunc:Iterator[T]=>Iterator[U],preservePartitioning:Boolean)(implicitevidence$4:scala.reflect.ClassTag[U]):org.apache.spark.streaming.dstream.DStream[U]", "kind" : "def"}, {"label" : "repartition", "tail" : "(numPartitions: Int): DStream[MappedType]", "member" : "org.apache.spark.streaming.dstream.DStream.repartition", "link" : "org\/apache\/spark\/streaming\/dstream\/MapWithStateDStream.html#repartition(numPartitions:Int):org.apache.spark.streaming.dstream.DStream[T]", "kind" : "def"}, {"label" : "glom", "tail" : "(): DStream[Array[MappedType]]", "member" : "org.apache.spark.streaming.dstream.DStream.glom", "link" : "org\/apache\/spark\/streaming\/dstream\/MapWithStateDStream.html#glom():org.apache.spark.streaming.dstream.DStream[Array[T]]", "kind" : "def"}, {"label" : "filter", "tail" : "(filterFunc: (MappedType) ⇒ Boolean): DStream[MappedType]", "member" : "org.apache.spark.streaming.dstream.DStream.filter", "link" : "org\/apache\/spark\/streaming\/dstream\/MapWithStateDStream.html#filter(filterFunc:T=>Boolean):org.apache.spark.streaming.dstream.DStream[T]", "kind" : "def"}, {"label" : "flatMap", "tail" : "(flatMapFunc: (MappedType) ⇒ TraversableOnce[U])(arg0: ClassTag[U]): DStream[U]", "member" : "org.apache.spark.streaming.dstream.DStream.flatMap", "link" : "org\/apache\/spark\/streaming\/dstream\/MapWithStateDStream.html#flatMap[U](flatMapFunc:T=>TraversableOnce[U])(implicitevidence$3:scala.reflect.ClassTag[U]):org.apache.spark.streaming.dstream.DStream[U]", "kind" : "def"}, {"label" : "map", "tail" : "(mapFunc: (MappedType) ⇒ U)(arg0: ClassTag[U]): DStream[U]", "member" : "org.apache.spark.streaming.dstream.DStream.map", "link" : "org\/apache\/spark\/streaming\/dstream\/MapWithStateDStream.html#map[U](mapFunc:T=>U)(implicitevidence$2:scala.reflect.ClassTag[U]):org.apache.spark.streaming.dstream.DStream[U]", "kind" : "def"}, {"label" : "createRDDWithLocalProperties", "tail" : "(time: Time, displayInnerRDDOps: Boolean)(body: ⇒ U): U", "member" : "org.apache.spark.streaming.dstream.DStream.createRDDWithLocalProperties", "link" : "org\/apache\/spark\/streaming\/dstream\/MapWithStateDStream.html#createRDDWithLocalProperties[U](time:org.apache.spark.streaming.Time,displayInnerRDDOps:Boolean)(body:=>U):U", "kind" : "def"}, {"label" : "checkpoint", "tail" : "(interval: Duration): DStream[MappedType]", "member" : "org.apache.spark.streaming.dstream.DStream.checkpoint", "link" : "org\/apache\/spark\/streaming\/dstream\/MapWithStateDStream.html#checkpoint(interval:org.apache.spark.streaming.Duration):org.apache.spark.streaming.dstream.DStream[T]", "kind" : "def"}, {"label" : "cache", "tail" : "(): DStream[MappedType]", "member" : "org.apache.spark.streaming.dstream.DStream.cache", "link" : "org\/apache\/spark\/streaming\/dstream\/MapWithStateDStream.html#cache():org.apache.spark.streaming.dstream.DStream[T]", "kind" : "def"}, {"label" : "persist", "tail" : "(): DStream[MappedType]", "member" : "org.apache.spark.streaming.dstream.DStream.persist", "link" : "org\/apache\/spark\/streaming\/dstream\/MapWithStateDStream.html#persist():org.apache.spark.streaming.dstream.DStream[T]", "kind" : "def"}, {"label" : "persist", "tail" : "(level: StorageLevel): DStream[MappedType]", "member" : "org.apache.spark.streaming.dstream.DStream.persist", "link" : "org\/apache\/spark\/streaming\/dstream\/MapWithStateDStream.html#persist(level:org.apache.spark.storage.StorageLevel):org.apache.spark.streaming.dstream.DStream[T]", "kind" : "def"}, {"label" : "baseScope", "tail" : ": Option[String]", "member" : "org.apache.spark.streaming.dstream.DStream.baseScope", "link" : "org\/apache\/spark\/streaming\/dstream\/MapWithStateDStream.html#baseScope:Option[String]", "kind" : "val"}, {"label" : "context", "tail" : "(): StreamingContext", "member" : "org.apache.spark.streaming.dstream.DStream.context", "link" : "org\/apache\/spark\/streaming\/dstream\/MapWithStateDStream.html#context:org.apache.spark.streaming.StreamingContext", "kind" : "def"}, {"label" : "initializeLogIfNecessary", "tail" : "(isInterpreter: Boolean, silent: Boolean): Boolean", "member" : "org.apache.spark.internal.Logging.initializeLogIfNecessary", "link" : "org\/apache\/spark\/streaming\/dstream\/MapWithStateDStream.html#initializeLogIfNecessary(isInterpreter:Boolean,silent:Boolean):Boolean", "kind" : "def"}, {"label" : "initializeLogIfNecessary", "tail" : "(isInterpreter: Boolean): Unit", "member" : "org.apache.spark.internal.Logging.initializeLogIfNecessary", "link" : "org\/apache\/spark\/streaming\/dstream\/MapWithStateDStream.html#initializeLogIfNecessary(isInterpreter:Boolean):Unit", "kind" : "def"}, {"label" : "isTraceEnabled", "tail" : "(): Boolean", "member" : "org.apache.spark.internal.Logging.isTraceEnabled", "link" : "org\/apache\/spark\/streaming\/dstream\/MapWithStateDStream.html#isTraceEnabled():Boolean", "kind" : "def"}, {"label" : "logError", "tail" : "(msg: ⇒ String, throwable: Throwable): Unit", "member" : "org.apache.spark.internal.Logging.logError", "link" : "org\/apache\/spark\/streaming\/dstream\/MapWithStateDStream.html#logError(msg:=>String,throwable:Throwable):Unit", "kind" : "def"}, {"label" : "logWarning", "tail" : "(msg: ⇒ String, throwable: Throwable): Unit", "member" : "org.apache.spark.internal.Logging.logWarning", "link" : "org\/apache\/spark\/streaming\/dstream\/MapWithStateDStream.html#logWarning(msg:=>String,throwable:Throwable):Unit", "kind" : "def"}, {"label" : "logTrace", "tail" : "(msg: ⇒ String, throwable: Throwable): Unit", "member" : "org.apache.spark.internal.Logging.logTrace", "link" : "org\/apache\/spark\/streaming\/dstream\/MapWithStateDStream.html#logTrace(msg:=>String,throwable:Throwable):Unit", "kind" : "def"}, {"label" : "logDebug", "tail" : "(msg: ⇒ String, throwable: Throwable): Unit", "member" : "org.apache.spark.internal.Logging.logDebug", "link" : "org\/apache\/spark\/streaming\/dstream\/MapWithStateDStream.html#logDebug(msg:=>String,throwable:Throwable):Unit", "kind" : "def"}, {"label" : "logInfo", "tail" : "(msg: ⇒ String, throwable: Throwable): Unit", "member" : "org.apache.spark.internal.Logging.logInfo", "link" : "org\/apache\/spark\/streaming\/dstream\/MapWithStateDStream.html#logInfo(msg:=>String,throwable:Throwable):Unit", "kind" : "def"}, {"label" : "logError", "tail" : "(msg: ⇒ String): Unit", "member" : "org.apache.spark.internal.Logging.logError", "link" : "org\/apache\/spark\/streaming\/dstream\/MapWithStateDStream.html#logError(msg:=>String):Unit", "kind" : "def"}, {"label" : "logWarning", "tail" : "(msg: ⇒ String): Unit", "member" : "org.apache.spark.internal.Logging.logWarning", "link" : "org\/apache\/spark\/streaming\/dstream\/MapWithStateDStream.html#logWarning(msg:=>String):Unit", "kind" : "def"}, {"label" : "logTrace", "tail" : "(msg: ⇒ String): Unit", "member" : "org.apache.spark.internal.Logging.logTrace", "link" : "org\/apache\/spark\/streaming\/dstream\/MapWithStateDStream.html#logTrace(msg:=>String):Unit", "kind" : "def"}, {"label" : "logDebug", "tail" : "(msg: ⇒ String): Unit", "member" : "org.apache.spark.internal.Logging.logDebug", "link" : "org\/apache\/spark\/streaming\/dstream\/MapWithStateDStream.html#logDebug(msg:=>String):Unit", "kind" : "def"}, {"label" : "logInfo", "tail" : "(msg: ⇒ String): Unit", "member" : "org.apache.spark.internal.Logging.logInfo", "link" : "org\/apache\/spark\/streaming\/dstream\/MapWithStateDStream.html#logInfo(msg:=>String):Unit", "kind" : "def"}, {"label" : "log", "tail" : "(): Logger", "member" : "org.apache.spark.internal.Logging.log", "link" : "org\/apache\/spark\/streaming\/dstream\/MapWithStateDStream.html#log:org.slf4j.Logger", "kind" : "def"}, {"label" : "logName", "tail" : "(): String", "member" : "org.apache.spark.internal.Logging.logName", "link" : "org\/apache\/spark\/streaming\/dstream\/MapWithStateDStream.html#logName:String", "kind" : "def"}, {"label" : "synchronized", "tail" : "(arg0: ⇒ T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "org\/apache\/spark\/streaming\/dstream\/MapWithStateDStream.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "org\/apache\/spark\/streaming\/dstream\/MapWithStateDStream.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "org\/apache\/spark\/streaming\/dstream\/MapWithStateDStream.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "org\/apache\/spark\/streaming\/dstream\/MapWithStateDStream.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "org\/apache\/spark\/streaming\/dstream\/MapWithStateDStream.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "org\/apache\/spark\/streaming\/dstream\/MapWithStateDStream.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "org\/apache\/spark\/streaming\/dstream\/MapWithStateDStream.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "org\/apache\/spark\/streaming\/dstream\/MapWithStateDStream.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "org\/apache\/spark\/streaming\/dstream\/MapWithStateDStream.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "org\/apache\/spark\/streaming\/dstream\/MapWithStateDStream.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "org\/apache\/spark\/streaming\/dstream\/MapWithStateDStream.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "org\/apache\/spark\/streaming\/dstream\/MapWithStateDStream.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "org\/apache\/spark\/streaming\/dstream\/MapWithStateDStream.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "org\/apache\/spark\/streaming\/dstream\/MapWithStateDStream.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.equals", "link" : "org\/apache\/spark\/streaming\/dstream\/MapWithStateDStream.html#equals(x$1:Any):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "org\/apache\/spark\/streaming\/dstream\/MapWithStateDStream.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_]", "member" : "scala.AnyRef.getClass", "link" : "org\/apache\/spark\/streaming\/dstream\/MapWithStateDStream.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "org\/apache\/spark\/streaming\/dstream\/MapWithStateDStream.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "org\/apache\/spark\/streaming\/dstream\/MapWithStateDStream.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}, {"label" : "stateSnapshots", "tail" : "(): DStream[(KeyType, StateType)]", "member" : "org.apache.spark.streaming.dstream.MapWithStateDStream.stateSnapshots", "link" : "org\/apache\/spark\/streaming\/dstream\/MapWithStateDStream.html#stateSnapshots():org.apache.spark.streaming.dstream.DStream[(KeyType,StateType)]", "kind" : "abstract def"}, {"label" : "compute", "tail" : "(validTime: Time): Option[RDD[MappedType]]", "member" : "org.apache.spark.streaming.dstream.DStream.compute", "link" : "org\/apache\/spark\/streaming\/dstream\/MapWithStateDStream.html#compute(validTime:org.apache.spark.streaming.Time):Option[org.apache.spark.rdd.RDD[T]]", "kind" : "abstract def"}, {"label" : "dependencies", "tail" : "(): List[DStream[_]]", "member" : "org.apache.spark.streaming.dstream.DStream.dependencies", "link" : "org\/apache\/spark\/streaming\/dstream\/MapWithStateDStream.html#dependencies:List[org.apache.spark.streaming.dstream.DStream[_]]", "kind" : "abstract def"}, {"label" : "slideDuration", "tail" : "(): Duration", "member" : "org.apache.spark.streaming.dstream.DStream.slideDuration", "link" : "org\/apache\/spark\/streaming\/dstream\/MapWithStateDStream.html#slideDuration:org.apache.spark.streaming.Duration", "kind" : "abstract def"}], "class" : "org\/apache\/spark\/streaming\/dstream\/MapWithStateDStream.html", "kind" : "class"}, {"name" : "org.apache.spark.streaming.dstream.PairDStreamFunctions", "shortDescription" : "Extra functions available on DStream of (key, value) pairs through an implicit conversion.", "members_class" : [{"label" : "saveAsNewAPIHadoopFiles", "tail" : "(prefix: String, suffix: String, keyClass: Class[_], valueClass: Class[_], outputFormatClass: Class[_ <: OutputFormat[_, _]], conf: Configuration): Unit", "member" : "org.apache.spark.streaming.dstream.PairDStreamFunctions.saveAsNewAPIHadoopFiles", "link" : "org\/apache\/spark\/streaming\/dstream\/PairDStreamFunctions.html#saveAsNewAPIHadoopFiles(prefix:String,suffix:String,keyClass:Class[_],valueClass:Class[_],outputFormatClass:Class[_<:org.apache.hadoop.mapreduce.OutputFormat[_,_]],conf:org.apache.hadoop.conf.Configuration):Unit", "kind" : "def"}, {"label" : "saveAsNewAPIHadoopFiles", "tail" : "(prefix: String, suffix: String)(fm: ClassTag[F]): Unit", "member" : "org.apache.spark.streaming.dstream.PairDStreamFunctions.saveAsNewAPIHadoopFiles", "link" : "org\/apache\/spark\/streaming\/dstream\/PairDStreamFunctions.html#saveAsNewAPIHadoopFiles[F<:org.apache.hadoop.mapreduce.OutputFormat[K,V]](prefix:String,suffix:String)(implicitfm:scala.reflect.ClassTag[F]):Unit", "kind" : "def"}, {"label" : "saveAsHadoopFiles", "tail" : "(prefix: String, suffix: String, keyClass: Class[_], valueClass: Class[_], outputFormatClass: Class[_ <: OutputFormat[_, _]], conf: JobConf): Unit", "member" : "org.apache.spark.streaming.dstream.PairDStreamFunctions.saveAsHadoopFiles", "link" : "org\/apache\/spark\/streaming\/dstream\/PairDStreamFunctions.html#saveAsHadoopFiles(prefix:String,suffix:String,keyClass:Class[_],valueClass:Class[_],outputFormatClass:Class[_<:org.apache.hadoop.mapred.OutputFormat[_,_]],conf:org.apache.hadoop.mapred.JobConf):Unit", "kind" : "def"}, {"label" : "saveAsHadoopFiles", "tail" : "(prefix: String, suffix: String)(fm: ClassTag[F]): Unit", "member" : "org.apache.spark.streaming.dstream.PairDStreamFunctions.saveAsHadoopFiles", "link" : "org\/apache\/spark\/streaming\/dstream\/PairDStreamFunctions.html#saveAsHadoopFiles[F<:org.apache.hadoop.mapred.OutputFormat[K,V]](prefix:String,suffix:String)(implicitfm:scala.reflect.ClassTag[F]):Unit", "kind" : "def"}, {"label" : "fullOuterJoin", "tail" : "(other: DStream[(K, W)], partitioner: Partitioner)(arg0: ClassTag[W]): DStream[(K, (Option[V], Option[W]))]", "member" : "org.apache.spark.streaming.dstream.PairDStreamFunctions.fullOuterJoin", "link" : "org\/apache\/spark\/streaming\/dstream\/PairDStreamFunctions.html#fullOuterJoin[W](other:org.apache.spark.streaming.dstream.DStream[(K,W)],partitioner:org.apache.spark.Partitioner)(implicitevidence$27:scala.reflect.ClassTag[W]):org.apache.spark.streaming.dstream.DStream[(K,(Option[V],Option[W]))]", "kind" : "def"}, {"label" : "fullOuterJoin", "tail" : "(other: DStream[(K, W)], numPartitions: Int)(arg0: ClassTag[W]): DStream[(K, (Option[V], Option[W]))]", "member" : "org.apache.spark.streaming.dstream.PairDStreamFunctions.fullOuterJoin", "link" : "org\/apache\/spark\/streaming\/dstream\/PairDStreamFunctions.html#fullOuterJoin[W](other:org.apache.spark.streaming.dstream.DStream[(K,W)],numPartitions:Int)(implicitevidence$26:scala.reflect.ClassTag[W]):org.apache.spark.streaming.dstream.DStream[(K,(Option[V],Option[W]))]", "kind" : "def"}, {"label" : "fullOuterJoin", "tail" : "(other: DStream[(K, W)])(arg0: ClassTag[W]): DStream[(K, (Option[V], Option[W]))]", "member" : "org.apache.spark.streaming.dstream.PairDStreamFunctions.fullOuterJoin", "link" : "org\/apache\/spark\/streaming\/dstream\/PairDStreamFunctions.html#fullOuterJoin[W](other:org.apache.spark.streaming.dstream.DStream[(K,W)])(implicitevidence$25:scala.reflect.ClassTag[W]):org.apache.spark.streaming.dstream.DStream[(K,(Option[V],Option[W]))]", "kind" : "def"}, {"label" : "rightOuterJoin", "tail" : "(other: DStream[(K, W)], partitioner: Partitioner)(arg0: ClassTag[W]): DStream[(K, (Option[V], W))]", "member" : "org.apache.spark.streaming.dstream.PairDStreamFunctions.rightOuterJoin", "link" : "org\/apache\/spark\/streaming\/dstream\/PairDStreamFunctions.html#rightOuterJoin[W](other:org.apache.spark.streaming.dstream.DStream[(K,W)],partitioner:org.apache.spark.Partitioner)(implicitevidence$24:scala.reflect.ClassTag[W]):org.apache.spark.streaming.dstream.DStream[(K,(Option[V],W))]", "kind" : "def"}, {"label" : "rightOuterJoin", "tail" : "(other: DStream[(K, W)], numPartitions: Int)(arg0: ClassTag[W]): DStream[(K, (Option[V], W))]", "member" : "org.apache.spark.streaming.dstream.PairDStreamFunctions.rightOuterJoin", "link" : "org\/apache\/spark\/streaming\/dstream\/PairDStreamFunctions.html#rightOuterJoin[W](other:org.apache.spark.streaming.dstream.DStream[(K,W)],numPartitions:Int)(implicitevidence$23:scala.reflect.ClassTag[W]):org.apache.spark.streaming.dstream.DStream[(K,(Option[V],W))]", "kind" : "def"}, {"label" : "rightOuterJoin", "tail" : "(other: DStream[(K, W)])(arg0: ClassTag[W]): DStream[(K, (Option[V], W))]", "member" : "org.apache.spark.streaming.dstream.PairDStreamFunctions.rightOuterJoin", "link" : "org\/apache\/spark\/streaming\/dstream\/PairDStreamFunctions.html#rightOuterJoin[W](other:org.apache.spark.streaming.dstream.DStream[(K,W)])(implicitevidence$22:scala.reflect.ClassTag[W]):org.apache.spark.streaming.dstream.DStream[(K,(Option[V],W))]", "kind" : "def"}, {"label" : "leftOuterJoin", "tail" : "(other: DStream[(K, W)], partitioner: Partitioner)(arg0: ClassTag[W]): DStream[(K, (V, Option[W]))]", "member" : "org.apache.spark.streaming.dstream.PairDStreamFunctions.leftOuterJoin", "link" : "org\/apache\/spark\/streaming\/dstream\/PairDStreamFunctions.html#leftOuterJoin[W](other:org.apache.spark.streaming.dstream.DStream[(K,W)],partitioner:org.apache.spark.Partitioner)(implicitevidence$21:scala.reflect.ClassTag[W]):org.apache.spark.streaming.dstream.DStream[(K,(V,Option[W]))]", "kind" : "def"}, {"label" : "leftOuterJoin", "tail" : "(other: DStream[(K, W)], numPartitions: Int)(arg0: ClassTag[W]): DStream[(K, (V, Option[W]))]", "member" : "org.apache.spark.streaming.dstream.PairDStreamFunctions.leftOuterJoin", "link" : "org\/apache\/spark\/streaming\/dstream\/PairDStreamFunctions.html#leftOuterJoin[W](other:org.apache.spark.streaming.dstream.DStream[(K,W)],numPartitions:Int)(implicitevidence$20:scala.reflect.ClassTag[W]):org.apache.spark.streaming.dstream.DStream[(K,(V,Option[W]))]", "kind" : "def"}, {"label" : "leftOuterJoin", "tail" : "(other: DStream[(K, W)])(arg0: ClassTag[W]): DStream[(K, (V, Option[W]))]", "member" : "org.apache.spark.streaming.dstream.PairDStreamFunctions.leftOuterJoin", "link" : "org\/apache\/spark\/streaming\/dstream\/PairDStreamFunctions.html#leftOuterJoin[W](other:org.apache.spark.streaming.dstream.DStream[(K,W)])(implicitevidence$19:scala.reflect.ClassTag[W]):org.apache.spark.streaming.dstream.DStream[(K,(V,Option[W]))]", "kind" : "def"}, {"label" : "join", "tail" : "(other: DStream[(K, W)], partitioner: Partitioner)(arg0: ClassTag[W]): DStream[(K, (V, W))]", "member" : "org.apache.spark.streaming.dstream.PairDStreamFunctions.join", "link" : "org\/apache\/spark\/streaming\/dstream\/PairDStreamFunctions.html#join[W](other:org.apache.spark.streaming.dstream.DStream[(K,W)],partitioner:org.apache.spark.Partitioner)(implicitevidence$18:scala.reflect.ClassTag[W]):org.apache.spark.streaming.dstream.DStream[(K,(V,W))]", "kind" : "def"}, {"label" : "join", "tail" : "(other: DStream[(K, W)], numPartitions: Int)(arg0: ClassTag[W]): DStream[(K, (V, W))]", "member" : "org.apache.spark.streaming.dstream.PairDStreamFunctions.join", "link" : "org\/apache\/spark\/streaming\/dstream\/PairDStreamFunctions.html#join[W](other:org.apache.spark.streaming.dstream.DStream[(K,W)],numPartitions:Int)(implicitevidence$17:scala.reflect.ClassTag[W]):org.apache.spark.streaming.dstream.DStream[(K,(V,W))]", "kind" : "def"}, {"label" : "join", "tail" : "(other: DStream[(K, W)])(arg0: ClassTag[W]): DStream[(K, (V, W))]", "member" : "org.apache.spark.streaming.dstream.PairDStreamFunctions.join", "link" : "org\/apache\/spark\/streaming\/dstream\/PairDStreamFunctions.html#join[W](other:org.apache.spark.streaming.dstream.DStream[(K,W)])(implicitevidence$16:scala.reflect.ClassTag[W]):org.apache.spark.streaming.dstream.DStream[(K,(V,W))]", "kind" : "def"}, {"label" : "cogroup", "tail" : "(other: DStream[(K, W)], partitioner: Partitioner)(arg0: ClassTag[W]): DStream[(K, (Iterable[V], Iterable[W]))]", "member" : "org.apache.spark.streaming.dstream.PairDStreamFunctions.cogroup", "link" : "org\/apache\/spark\/streaming\/dstream\/PairDStreamFunctions.html#cogroup[W](other:org.apache.spark.streaming.dstream.DStream[(K,W)],partitioner:org.apache.spark.Partitioner)(implicitevidence$15:scala.reflect.ClassTag[W]):org.apache.spark.streaming.dstream.DStream[(K,(Iterable[V],Iterable[W]))]", "kind" : "def"}, {"label" : "cogroup", "tail" : "(other: DStream[(K, W)], numPartitions: Int)(arg0: ClassTag[W]): DStream[(K, (Iterable[V], Iterable[W]))]", "member" : "org.apache.spark.streaming.dstream.PairDStreamFunctions.cogroup", "link" : "org\/apache\/spark\/streaming\/dstream\/PairDStreamFunctions.html#cogroup[W](other:org.apache.spark.streaming.dstream.DStream[(K,W)],numPartitions:Int)(implicitevidence$14:scala.reflect.ClassTag[W]):org.apache.spark.streaming.dstream.DStream[(K,(Iterable[V],Iterable[W]))]", "kind" : "def"}, {"label" : "cogroup", "tail" : "(other: DStream[(K, W)])(arg0: ClassTag[W]): DStream[(K, (Iterable[V], Iterable[W]))]", "member" : "org.apache.spark.streaming.dstream.PairDStreamFunctions.cogroup", "link" : "org\/apache\/spark\/streaming\/dstream\/PairDStreamFunctions.html#cogroup[W](other:org.apache.spark.streaming.dstream.DStream[(K,W)])(implicitevidence$13:scala.reflect.ClassTag[W]):org.apache.spark.streaming.dstream.DStream[(K,(Iterable[V],Iterable[W]))]", "kind" : "def"}, {"label" : "flatMapValues", "tail" : "(flatMapValuesFunc: (V) ⇒ TraversableOnce[U])(arg0: ClassTag[U]): DStream[(K, U)]", "member" : "org.apache.spark.streaming.dstream.PairDStreamFunctions.flatMapValues", "link" : "org\/apache\/spark\/streaming\/dstream\/PairDStreamFunctions.html#flatMapValues[U](flatMapValuesFunc:V=>TraversableOnce[U])(implicitevidence$12:scala.reflect.ClassTag[U]):org.apache.spark.streaming.dstream.DStream[(K,U)]", "kind" : "def"}, {"label" : "mapValues", "tail" : "(mapValuesFunc: (V) ⇒ U)(arg0: ClassTag[U]): DStream[(K, U)]", "member" : "org.apache.spark.streaming.dstream.PairDStreamFunctions.mapValues", "link" : "org\/apache\/spark\/streaming\/dstream\/PairDStreamFunctions.html#mapValues[U](mapValuesFunc:V=>U)(implicitevidence$11:scala.reflect.ClassTag[U]):org.apache.spark.streaming.dstream.DStream[(K,U)]", "kind" : "def"}, {"label" : "updateStateByKey", "tail" : "(updateFunc: (Time, K, Seq[V], Option[S]) ⇒ Option[S], partitioner: Partitioner, rememberPartitioner: Boolean, initialRDD: Option[RDD[(K, S)]])(arg0: ClassTag[S]): DStream[(K, S)]", "member" : "org.apache.spark.streaming.dstream.PairDStreamFunctions.updateStateByKey", "link" : "org\/apache\/spark\/streaming\/dstream\/PairDStreamFunctions.html#updateStateByKey[S](updateFunc:(org.apache.spark.streaming.Time,K,Seq[V],Option[S])=>Option[S],partitioner:org.apache.spark.Partitioner,rememberPartitioner:Boolean,initialRDD:Option[org.apache.spark.rdd.RDD[(K,S)]])(implicitevidence$10:scala.reflect.ClassTag[S]):org.apache.spark.streaming.dstream.DStream[(K,S)]", "kind" : "def"}, {"label" : "updateStateByKey", "tail" : "(updateFunc: (Iterator[(K, Seq[V], Option[S])]) ⇒ Iterator[(K, S)], partitioner: Partitioner, rememberPartitioner: Boolean, initialRDD: RDD[(K, S)])(arg0: ClassTag[S]): DStream[(K, S)]", "member" : "org.apache.spark.streaming.dstream.PairDStreamFunctions.updateStateByKey", "link" : "org\/apache\/spark\/streaming\/dstream\/PairDStreamFunctions.html#updateStateByKey[S](updateFunc:Iterator[(K,Seq[V],Option[S])]=>Iterator[(K,S)],partitioner:org.apache.spark.Partitioner,rememberPartitioner:Boolean,initialRDD:org.apache.spark.rdd.RDD[(K,S)])(implicitevidence$9:scala.reflect.ClassTag[S]):org.apache.spark.streaming.dstream.DStream[(K,S)]", "kind" : "def"}, {"label" : "updateStateByKey", "tail" : "(updateFunc: (Seq[V], Option[S]) ⇒ Option[S], partitioner: Partitioner, initialRDD: RDD[(K, S)])(arg0: ClassTag[S]): DStream[(K, S)]", "member" : "org.apache.spark.streaming.dstream.PairDStreamFunctions.updateStateByKey", "link" : "org\/apache\/spark\/streaming\/dstream\/PairDStreamFunctions.html#updateStateByKey[S](updateFunc:(Seq[V],Option[S])=>Option[S],partitioner:org.apache.spark.Partitioner,initialRDD:org.apache.spark.rdd.RDD[(K,S)])(implicitevidence$8:scala.reflect.ClassTag[S]):org.apache.spark.streaming.dstream.DStream[(K,S)]", "kind" : "def"}, {"label" : "updateStateByKey", "tail" : "(updateFunc: (Iterator[(K, Seq[V], Option[S])]) ⇒ Iterator[(K, S)], partitioner: Partitioner, rememberPartitioner: Boolean)(arg0: ClassTag[S]): DStream[(K, S)]", "member" : "org.apache.spark.streaming.dstream.PairDStreamFunctions.updateStateByKey", "link" : "org\/apache\/spark\/streaming\/dstream\/PairDStreamFunctions.html#updateStateByKey[S](updateFunc:Iterator[(K,Seq[V],Option[S])]=>Iterator[(K,S)],partitioner:org.apache.spark.Partitioner,rememberPartitioner:Boolean)(implicitevidence$7:scala.reflect.ClassTag[S]):org.apache.spark.streaming.dstream.DStream[(K,S)]", "kind" : "def"}, {"label" : "updateStateByKey", "tail" : "(updateFunc: (Seq[V], Option[S]) ⇒ Option[S], partitioner: Partitioner)(arg0: ClassTag[S]): DStream[(K, S)]", "member" : "org.apache.spark.streaming.dstream.PairDStreamFunctions.updateStateByKey", "link" : "org\/apache\/spark\/streaming\/dstream\/PairDStreamFunctions.html#updateStateByKey[S](updateFunc:(Seq[V],Option[S])=>Option[S],partitioner:org.apache.spark.Partitioner)(implicitevidence$6:scala.reflect.ClassTag[S]):org.apache.spark.streaming.dstream.DStream[(K,S)]", "kind" : "def"}, {"label" : "updateStateByKey", "tail" : "(updateFunc: (Seq[V], Option[S]) ⇒ Option[S], numPartitions: Int)(arg0: ClassTag[S]): DStream[(K, S)]", "member" : "org.apache.spark.streaming.dstream.PairDStreamFunctions.updateStateByKey", "link" : "org\/apache\/spark\/streaming\/dstream\/PairDStreamFunctions.html#updateStateByKey[S](updateFunc:(Seq[V],Option[S])=>Option[S],numPartitions:Int)(implicitevidence$5:scala.reflect.ClassTag[S]):org.apache.spark.streaming.dstream.DStream[(K,S)]", "kind" : "def"}, {"label" : "updateStateByKey", "tail" : "(updateFunc: (Seq[V], Option[S]) ⇒ Option[S])(arg0: ClassTag[S]): DStream[(K, S)]", "member" : "org.apache.spark.streaming.dstream.PairDStreamFunctions.updateStateByKey", "link" : "org\/apache\/spark\/streaming\/dstream\/PairDStreamFunctions.html#updateStateByKey[S](updateFunc:(Seq[V],Option[S])=>Option[S])(implicitevidence$4:scala.reflect.ClassTag[S]):org.apache.spark.streaming.dstream.DStream[(K,S)]", "kind" : "def"}, {"label" : "mapWithState", "tail" : "(spec: StateSpec[K, V, StateType, MappedType])(arg0: ClassTag[StateType], arg1: ClassTag[MappedType]): MapWithStateDStream[K, V, StateType, MappedType]", "member" : "org.apache.spark.streaming.dstream.PairDStreamFunctions.mapWithState", "link" : "org\/apache\/spark\/streaming\/dstream\/PairDStreamFunctions.html#mapWithState[StateType,MappedType](spec:org.apache.spark.streaming.StateSpec[K,V,StateType,MappedType])(implicitevidence$2:scala.reflect.ClassTag[StateType],implicitevidence$3:scala.reflect.ClassTag[MappedType]):org.apache.spark.streaming.dstream.MapWithStateDStream[K,V,StateType,MappedType]", "kind" : "def"}, {"label" : "reduceByKeyAndWindow", "tail" : "(reduceFunc: (V, V) ⇒ V, invReduceFunc: (V, V) ⇒ V, windowDuration: Duration, slideDuration: Duration, partitioner: Partitioner, filterFunc: ((K, V)) ⇒ Boolean): DStream[(K, V)]", "member" : "org.apache.spark.streaming.dstream.PairDStreamFunctions.reduceByKeyAndWindow", "link" : "org\/apache\/spark\/streaming\/dstream\/PairDStreamFunctions.html#reduceByKeyAndWindow(reduceFunc:(V,V)=>V,invReduceFunc:(V,V)=>V,windowDuration:org.apache.spark.streaming.Duration,slideDuration:org.apache.spark.streaming.Duration,partitioner:org.apache.spark.Partitioner,filterFunc:((K,V))=>Boolean):org.apache.spark.streaming.dstream.DStream[(K,V)]", "kind" : "def"}, {"label" : "reduceByKeyAndWindow", "tail" : "(reduceFunc: (V, V) ⇒ V, invReduceFunc: (V, V) ⇒ V, windowDuration: Duration, slideDuration: Duration, numPartitions: Int, filterFunc: ((K, V)) ⇒ Boolean): DStream[(K, V)]", "member" : "org.apache.spark.streaming.dstream.PairDStreamFunctions.reduceByKeyAndWindow", "link" : "org\/apache\/spark\/streaming\/dstream\/PairDStreamFunctions.html#reduceByKeyAndWindow(reduceFunc:(V,V)=>V,invReduceFunc:(V,V)=>V,windowDuration:org.apache.spark.streaming.Duration,slideDuration:org.apache.spark.streaming.Duration,numPartitions:Int,filterFunc:((K,V))=>Boolean):org.apache.spark.streaming.dstream.DStream[(K,V)]", "kind" : "def"}, {"label" : "reduceByKeyAndWindow", "tail" : "(reduceFunc: (V, V) ⇒ V, windowDuration: Duration, slideDuration: Duration, partitioner: Partitioner): DStream[(K, V)]", "member" : "org.apache.spark.streaming.dstream.PairDStreamFunctions.reduceByKeyAndWindow", "link" : "org\/apache\/spark\/streaming\/dstream\/PairDStreamFunctions.html#reduceByKeyAndWindow(reduceFunc:(V,V)=>V,windowDuration:org.apache.spark.streaming.Duration,slideDuration:org.apache.spark.streaming.Duration,partitioner:org.apache.spark.Partitioner):org.apache.spark.streaming.dstream.DStream[(K,V)]", "kind" : "def"}, {"label" : "reduceByKeyAndWindow", "tail" : "(reduceFunc: (V, V) ⇒ V, windowDuration: Duration, slideDuration: Duration, numPartitions: Int): DStream[(K, V)]", "member" : "org.apache.spark.streaming.dstream.PairDStreamFunctions.reduceByKeyAndWindow", "link" : "org\/apache\/spark\/streaming\/dstream\/PairDStreamFunctions.html#reduceByKeyAndWindow(reduceFunc:(V,V)=>V,windowDuration:org.apache.spark.streaming.Duration,slideDuration:org.apache.spark.streaming.Duration,numPartitions:Int):org.apache.spark.streaming.dstream.DStream[(K,V)]", "kind" : "def"}, {"label" : "reduceByKeyAndWindow", "tail" : "(reduceFunc: (V, V) ⇒ V, windowDuration: Duration, slideDuration: Duration): DStream[(K, V)]", "member" : "org.apache.spark.streaming.dstream.PairDStreamFunctions.reduceByKeyAndWindow", "link" : "org\/apache\/spark\/streaming\/dstream\/PairDStreamFunctions.html#reduceByKeyAndWindow(reduceFunc:(V,V)=>V,windowDuration:org.apache.spark.streaming.Duration,slideDuration:org.apache.spark.streaming.Duration):org.apache.spark.streaming.dstream.DStream[(K,V)]", "kind" : "def"}, {"label" : "reduceByKeyAndWindow", "tail" : "(reduceFunc: (V, V) ⇒ V, windowDuration: Duration): DStream[(K, V)]", "member" : "org.apache.spark.streaming.dstream.PairDStreamFunctions.reduceByKeyAndWindow", "link" : "org\/apache\/spark\/streaming\/dstream\/PairDStreamFunctions.html#reduceByKeyAndWindow(reduceFunc:(V,V)=>V,windowDuration:org.apache.spark.streaming.Duration):org.apache.spark.streaming.dstream.DStream[(K,V)]", "kind" : "def"}, {"label" : "groupByKeyAndWindow", "tail" : "(windowDuration: Duration, slideDuration: Duration, partitioner: Partitioner): DStream[(K, Iterable[V])]", "member" : "org.apache.spark.streaming.dstream.PairDStreamFunctions.groupByKeyAndWindow", "link" : "org\/apache\/spark\/streaming\/dstream\/PairDStreamFunctions.html#groupByKeyAndWindow(windowDuration:org.apache.spark.streaming.Duration,slideDuration:org.apache.spark.streaming.Duration,partitioner:org.apache.spark.Partitioner):org.apache.spark.streaming.dstream.DStream[(K,Iterable[V])]", "kind" : "def"}, {"label" : "groupByKeyAndWindow", "tail" : "(windowDuration: Duration, slideDuration: Duration, numPartitions: Int): DStream[(K, Iterable[V])]", "member" : "org.apache.spark.streaming.dstream.PairDStreamFunctions.groupByKeyAndWindow", "link" : "org\/apache\/spark\/streaming\/dstream\/PairDStreamFunctions.html#groupByKeyAndWindow(windowDuration:org.apache.spark.streaming.Duration,slideDuration:org.apache.spark.streaming.Duration,numPartitions:Int):org.apache.spark.streaming.dstream.DStream[(K,Iterable[V])]", "kind" : "def"}, {"label" : "groupByKeyAndWindow", "tail" : "(windowDuration: Duration, slideDuration: Duration): DStream[(K, Iterable[V])]", "member" : "org.apache.spark.streaming.dstream.PairDStreamFunctions.groupByKeyAndWindow", "link" : "org\/apache\/spark\/streaming\/dstream\/PairDStreamFunctions.html#groupByKeyAndWindow(windowDuration:org.apache.spark.streaming.Duration,slideDuration:org.apache.spark.streaming.Duration):org.apache.spark.streaming.dstream.DStream[(K,Iterable[V])]", "kind" : "def"}, {"label" : "groupByKeyAndWindow", "tail" : "(windowDuration: Duration): DStream[(K, Iterable[V])]", "member" : "org.apache.spark.streaming.dstream.PairDStreamFunctions.groupByKeyAndWindow", "link" : "org\/apache\/spark\/streaming\/dstream\/PairDStreamFunctions.html#groupByKeyAndWindow(windowDuration:org.apache.spark.streaming.Duration):org.apache.spark.streaming.dstream.DStream[(K,Iterable[V])]", "kind" : "def"}, {"label" : "combineByKey", "tail" : "(createCombiner: (V) ⇒ C, mergeValue: (C, V) ⇒ C, mergeCombiner: (C, C) ⇒ C, partitioner: Partitioner, mapSideCombine: Boolean)(arg0: ClassTag[C]): DStream[(K, C)]", "member" : "org.apache.spark.streaming.dstream.PairDStreamFunctions.combineByKey", "link" : "org\/apache\/spark\/streaming\/dstream\/PairDStreamFunctions.html#combineByKey[C](createCombiner:V=>C,mergeValue:(C,V)=>C,mergeCombiner:(C,C)=>C,partitioner:org.apache.spark.Partitioner,mapSideCombine:Boolean)(implicitevidence$1:scala.reflect.ClassTag[C]):org.apache.spark.streaming.dstream.DStream[(K,C)]", "kind" : "def"}, {"label" : "reduceByKey", "tail" : "(reduceFunc: (V, V) ⇒ V, partitioner: Partitioner): DStream[(K, V)]", "member" : "org.apache.spark.streaming.dstream.PairDStreamFunctions.reduceByKey", "link" : "org\/apache\/spark\/streaming\/dstream\/PairDStreamFunctions.html#reduceByKey(reduceFunc:(V,V)=>V,partitioner:org.apache.spark.Partitioner):org.apache.spark.streaming.dstream.DStream[(K,V)]", "kind" : "def"}, {"label" : "reduceByKey", "tail" : "(reduceFunc: (V, V) ⇒ V, numPartitions: Int): DStream[(K, V)]", "member" : "org.apache.spark.streaming.dstream.PairDStreamFunctions.reduceByKey", "link" : "org\/apache\/spark\/streaming\/dstream\/PairDStreamFunctions.html#reduceByKey(reduceFunc:(V,V)=>V,numPartitions:Int):org.apache.spark.streaming.dstream.DStream[(K,V)]", "kind" : "def"}, {"label" : "reduceByKey", "tail" : "(reduceFunc: (V, V) ⇒ V): DStream[(K, V)]", "member" : "org.apache.spark.streaming.dstream.PairDStreamFunctions.reduceByKey", "link" : "org\/apache\/spark\/streaming\/dstream\/PairDStreamFunctions.html#reduceByKey(reduceFunc:(V,V)=>V):org.apache.spark.streaming.dstream.DStream[(K,V)]", "kind" : "def"}, {"label" : "groupByKey", "tail" : "(partitioner: Partitioner): DStream[(K, Iterable[V])]", "member" : "org.apache.spark.streaming.dstream.PairDStreamFunctions.groupByKey", "link" : "org\/apache\/spark\/streaming\/dstream\/PairDStreamFunctions.html#groupByKey(partitioner:org.apache.spark.Partitioner):org.apache.spark.streaming.dstream.DStream[(K,Iterable[V])]", "kind" : "def"}, {"label" : "groupByKey", "tail" : "(numPartitions: Int): DStream[(K, Iterable[V])]", "member" : "org.apache.spark.streaming.dstream.PairDStreamFunctions.groupByKey", "link" : "org\/apache\/spark\/streaming\/dstream\/PairDStreamFunctions.html#groupByKey(numPartitions:Int):org.apache.spark.streaming.dstream.DStream[(K,Iterable[V])]", "kind" : "def"}, {"label" : "groupByKey", "tail" : "(): DStream[(K, Iterable[V])]", "member" : "org.apache.spark.streaming.dstream.PairDStreamFunctions.groupByKey", "link" : "org\/apache\/spark\/streaming\/dstream\/PairDStreamFunctions.html#groupByKey():org.apache.spark.streaming.dstream.DStream[(K,Iterable[V])]", "kind" : "def"}, {"member" : "org.apache.spark.streaming.dstream.PairDStreamFunctions#<init>", "error" : "unsupported entity"}, {"label" : "synchronized", "tail" : "(arg0: ⇒ T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "org\/apache\/spark\/streaming\/dstream\/PairDStreamFunctions.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "org\/apache\/spark\/streaming\/dstream\/PairDStreamFunctions.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "org\/apache\/spark\/streaming\/dstream\/PairDStreamFunctions.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "org\/apache\/spark\/streaming\/dstream\/PairDStreamFunctions.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "org\/apache\/spark\/streaming\/dstream\/PairDStreamFunctions.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "org\/apache\/spark\/streaming\/dstream\/PairDStreamFunctions.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "org\/apache\/spark\/streaming\/dstream\/PairDStreamFunctions.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "org\/apache\/spark\/streaming\/dstream\/PairDStreamFunctions.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "org\/apache\/spark\/streaming\/dstream\/PairDStreamFunctions.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "org\/apache\/spark\/streaming\/dstream\/PairDStreamFunctions.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "org\/apache\/spark\/streaming\/dstream\/PairDStreamFunctions.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "org\/apache\/spark\/streaming\/dstream\/PairDStreamFunctions.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "org\/apache\/spark\/streaming\/dstream\/PairDStreamFunctions.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "org\/apache\/spark\/streaming\/dstream\/PairDStreamFunctions.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.equals", "link" : "org\/apache\/spark\/streaming\/dstream\/PairDStreamFunctions.html#equals(x$1:Any):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "org\/apache\/spark\/streaming\/dstream\/PairDStreamFunctions.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_]", "member" : "scala.AnyRef.getClass", "link" : "org\/apache\/spark\/streaming\/dstream\/PairDStreamFunctions.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "org\/apache\/spark\/streaming\/dstream\/PairDStreamFunctions.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "org\/apache\/spark\/streaming\/dstream\/PairDStreamFunctions.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "class" : "org\/apache\/spark\/streaming\/dstream\/PairDStreamFunctions.html", "kind" : "class"}, {"name" : "org.apache.spark.streaming.dstream.ReceiverInputDStream", "shortDescription" : "Abstract class for defining any org.apache.spark.streaming.dstream.InputDStreamthat has to start a receiver on worker nodes to receive external data.", "members_class" : [{"label" : "compute", "tail" : "(validTime: Time): Option[RDD[T]]", "member" : "org.apache.spark.streaming.dstream.ReceiverInputDStream.compute", "link" : "org\/apache\/spark\/streaming\/dstream\/ReceiverInputDStream.html#compute(validTime:org.apache.spark.streaming.Time):Option[org.apache.spark.rdd.RDD[T]]", "kind" : "def"}, {"label" : "stop", "tail" : "(): Unit", "member" : "org.apache.spark.streaming.dstream.ReceiverInputDStream.stop", "link" : "org\/apache\/spark\/streaming\/dstream\/ReceiverInputDStream.html#stop():Unit", "kind" : "def"}, {"label" : "start", "tail" : "(): Unit", "member" : "org.apache.spark.streaming.dstream.ReceiverInputDStream.start", "link" : "org\/apache\/spark\/streaming\/dstream\/ReceiverInputDStream.html#start():Unit", "kind" : "def"}, {"label" : "rateController", "tail" : ": Option[RateController]", "member" : "org.apache.spark.streaming.dstream.ReceiverInputDStream.rateController", "link" : "org\/apache\/spark\/streaming\/dstream\/ReceiverInputDStream.html#rateController:Option[org.apache.spark.streaming.scheduler.RateController]", "kind" : "val"}, {"member" : "org.apache.spark.streaming.dstream.ReceiverInputDStream#<init>", "error" : "unsupported entity"}, {"label" : "slideDuration", "tail" : "(): Duration", "member" : "org.apache.spark.streaming.dstream.InputDStream.slideDuration", "link" : "org\/apache\/spark\/streaming\/dstream\/ReceiverInputDStream.html#slideDuration:org.apache.spark.streaming.Duration", "kind" : "def"}, {"label" : "dependencies", "tail" : "(): List[DStream[_]]", "member" : "org.apache.spark.streaming.dstream.InputDStream.dependencies", "link" : "org\/apache\/spark\/streaming\/dstream\/ReceiverInputDStream.html#dependencies:List[org.apache.spark.streaming.dstream.DStream[_]]", "kind" : "def"}, {"label" : "baseScope", "tail" : ": Option[String]", "member" : "org.apache.spark.streaming.dstream.InputDStream.baseScope", "link" : "org\/apache\/spark\/streaming\/dstream\/ReceiverInputDStream.html#baseScope:Option[String]", "kind" : "val"}, {"label" : "id", "tail" : ": Int", "member" : "org.apache.spark.streaming.dstream.InputDStream.id", "link" : "org\/apache\/spark\/streaming\/dstream\/ReceiverInputDStream.html#id:Int", "kind" : "val"}, {"label" : "saveAsTextFiles", "tail" : "(prefix: String, suffix: String): Unit", "member" : "org.apache.spark.streaming.dstream.DStream.saveAsTextFiles", "link" : "org\/apache\/spark\/streaming\/dstream\/ReceiverInputDStream.html#saveAsTextFiles(prefix:String,suffix:String):Unit", "kind" : "def"}, {"label" : "saveAsObjectFiles", "tail" : "(prefix: String, suffix: String): Unit", "member" : "org.apache.spark.streaming.dstream.DStream.saveAsObjectFiles", "link" : "org\/apache\/spark\/streaming\/dstream\/ReceiverInputDStream.html#saveAsObjectFiles(prefix:String,suffix:String):Unit", "kind" : "def"}, {"label" : "slice", "tail" : "(fromTime: Time, toTime: Time): Seq[RDD[T]]", "member" : "org.apache.spark.streaming.dstream.DStream.slice", "link" : "org\/apache\/spark\/streaming\/dstream\/ReceiverInputDStream.html#slice(fromTime:org.apache.spark.streaming.Time,toTime:org.apache.spark.streaming.Time):Seq[org.apache.spark.rdd.RDD[T]]", "kind" : "def"}, {"label" : "slice", "tail" : "(interval: Interval): Seq[RDD[T]]", "member" : "org.apache.spark.streaming.dstream.DStream.slice", "link" : "org\/apache\/spark\/streaming\/dstream\/ReceiverInputDStream.html#slice(interval:org.apache.spark.streaming.Interval):Seq[org.apache.spark.rdd.RDD[T]]", "kind" : "def"}, {"label" : "union", "tail" : "(that: DStream[T]): DStream[T]", "member" : "org.apache.spark.streaming.dstream.DStream.union", "link" : "org\/apache\/spark\/streaming\/dstream\/ReceiverInputDStream.html#union(that:org.apache.spark.streaming.dstream.DStream[T]):org.apache.spark.streaming.dstream.DStream[T]", "kind" : "def"}, {"label" : "countByValueAndWindow", "tail" : "(windowDuration: Duration, slideDuration: Duration, numPartitions: Int)(ord: Ordering[T]): DStream[(T, Long)]", "member" : "org.apache.spark.streaming.dstream.DStream.countByValueAndWindow", "link" : "org\/apache\/spark\/streaming\/dstream\/ReceiverInputDStream.html#countByValueAndWindow(windowDuration:org.apache.spark.streaming.Duration,slideDuration:org.apache.spark.streaming.Duration,numPartitions:Int)(implicitord:Ordering[T]):org.apache.spark.streaming.dstream.DStream[(T,Long)]", "kind" : "def"}, {"label" : "countByWindow", "tail" : "(windowDuration: Duration, slideDuration: Duration): DStream[Long]", "member" : "org.apache.spark.streaming.dstream.DStream.countByWindow", "link" : "org\/apache\/spark\/streaming\/dstream\/ReceiverInputDStream.html#countByWindow(windowDuration:org.apache.spark.streaming.Duration,slideDuration:org.apache.spark.streaming.Duration):org.apache.spark.streaming.dstream.DStream[Long]", "kind" : "def"}, {"label" : "reduceByWindow", "tail" : "(reduceFunc: (T, T) ⇒ T, invReduceFunc: (T, T) ⇒ T, windowDuration: Duration, slideDuration: Duration): DStream[T]", "member" : "org.apache.spark.streaming.dstream.DStream.reduceByWindow", "link" : "org\/apache\/spark\/streaming\/dstream\/ReceiverInputDStream.html#reduceByWindow(reduceFunc:(T,T)=>T,invReduceFunc:(T,T)=>T,windowDuration:org.apache.spark.streaming.Duration,slideDuration:org.apache.spark.streaming.Duration):org.apache.spark.streaming.dstream.DStream[T]", "kind" : "def"}, {"label" : "reduceByWindow", "tail" : "(reduceFunc: (T, T) ⇒ T, windowDuration: Duration, slideDuration: Duration): DStream[T]", "member" : "org.apache.spark.streaming.dstream.DStream.reduceByWindow", "link" : "org\/apache\/spark\/streaming\/dstream\/ReceiverInputDStream.html#reduceByWindow(reduceFunc:(T,T)=>T,windowDuration:org.apache.spark.streaming.Duration,slideDuration:org.apache.spark.streaming.Duration):org.apache.spark.streaming.dstream.DStream[T]", "kind" : "def"}, {"label" : "window", "tail" : "(windowDuration: Duration, slideDuration: Duration): DStream[T]", "member" : "org.apache.spark.streaming.dstream.DStream.window", "link" : "org\/apache\/spark\/streaming\/dstream\/ReceiverInputDStream.html#window(windowDuration:org.apache.spark.streaming.Duration,slideDuration:org.apache.spark.streaming.Duration):org.apache.spark.streaming.dstream.DStream[T]", "kind" : "def"}, {"label" : "window", "tail" : "(windowDuration: Duration): DStream[T]", "member" : "org.apache.spark.streaming.dstream.DStream.window", "link" : "org\/apache\/spark\/streaming\/dstream\/ReceiverInputDStream.html#window(windowDuration:org.apache.spark.streaming.Duration):org.apache.spark.streaming.dstream.DStream[T]", "kind" : "def"}, {"label" : "print", "tail" : "(num: Int): Unit", "member" : "org.apache.spark.streaming.dstream.DStream.print", "link" : "org\/apache\/spark\/streaming\/dstream\/ReceiverInputDStream.html#print(num:Int):Unit", "kind" : "def"}, {"label" : "print", "tail" : "(): Unit", "member" : "org.apache.spark.streaming.dstream.DStream.print", "link" : "org\/apache\/spark\/streaming\/dstream\/ReceiverInputDStream.html#print():Unit", "kind" : "def"}, {"label" : "transformWith", "tail" : "(other: DStream[U], transformFunc: (RDD[T], RDD[U], Time) ⇒ RDD[V])(arg0: ClassTag[U], arg1: ClassTag[V]): DStream[V]", "member" : "org.apache.spark.streaming.dstream.DStream.transformWith", "link" : "org\/apache\/spark\/streaming\/dstream\/ReceiverInputDStream.html#transformWith[U,V](other:org.apache.spark.streaming.dstream.DStream[U],transformFunc:(org.apache.spark.rdd.RDD[T],org.apache.spark.rdd.RDD[U],org.apache.spark.streaming.Time)=>org.apache.spark.rdd.RDD[V])(implicitevidence$9:scala.reflect.ClassTag[U],implicitevidence$10:scala.reflect.ClassTag[V]):org.apache.spark.streaming.dstream.DStream[V]", "kind" : "def"}, {"label" : "transformWith", "tail" : "(other: DStream[U], transformFunc: (RDD[T], RDD[U]) ⇒ RDD[V])(arg0: ClassTag[U], arg1: ClassTag[V]): DStream[V]", "member" : "org.apache.spark.streaming.dstream.DStream.transformWith", "link" : "org\/apache\/spark\/streaming\/dstream\/ReceiverInputDStream.html#transformWith[U,V](other:org.apache.spark.streaming.dstream.DStream[U],transformFunc:(org.apache.spark.rdd.RDD[T],org.apache.spark.rdd.RDD[U])=>org.apache.spark.rdd.RDD[V])(implicitevidence$7:scala.reflect.ClassTag[U],implicitevidence$8:scala.reflect.ClassTag[V]):org.apache.spark.streaming.dstream.DStream[V]", "kind" : "def"}, {"label" : "transform", "tail" : "(transformFunc: (RDD[T], Time) ⇒ RDD[U])(arg0: ClassTag[U]): DStream[U]", "member" : "org.apache.spark.streaming.dstream.DStream.transform", "link" : "org\/apache\/spark\/streaming\/dstream\/ReceiverInputDStream.html#transform[U](transformFunc:(org.apache.spark.rdd.RDD[T],org.apache.spark.streaming.Time)=>org.apache.spark.rdd.RDD[U])(implicitevidence$6:scala.reflect.ClassTag[U]):org.apache.spark.streaming.dstream.DStream[U]", "kind" : "def"}, {"label" : "transform", "tail" : "(transformFunc: (RDD[T]) ⇒ RDD[U])(arg0: ClassTag[U]): DStream[U]", "member" : "org.apache.spark.streaming.dstream.DStream.transform", "link" : "org\/apache\/spark\/streaming\/dstream\/ReceiverInputDStream.html#transform[U](transformFunc:org.apache.spark.rdd.RDD[T]=>org.apache.spark.rdd.RDD[U])(implicitevidence$5:scala.reflect.ClassTag[U]):org.apache.spark.streaming.dstream.DStream[U]", "kind" : "def"}, {"label" : "foreachRDD", "tail" : "(foreachFunc: (RDD[T], Time) ⇒ Unit): Unit", "member" : "org.apache.spark.streaming.dstream.DStream.foreachRDD", "link" : "org\/apache\/spark\/streaming\/dstream\/ReceiverInputDStream.html#foreachRDD(foreachFunc:(org.apache.spark.rdd.RDD[T],org.apache.spark.streaming.Time)=>Unit):Unit", "kind" : "def"}, {"label" : "foreachRDD", "tail" : "(foreachFunc: (RDD[T]) ⇒ Unit): Unit", "member" : "org.apache.spark.streaming.dstream.DStream.foreachRDD", "link" : "org\/apache\/spark\/streaming\/dstream\/ReceiverInputDStream.html#foreachRDD(foreachFunc:org.apache.spark.rdd.RDD[T]=>Unit):Unit", "kind" : "def"}, {"label" : "countByValue", "tail" : "(numPartitions: Int)(ord: Ordering[T]): DStream[(T, Long)]", "member" : "org.apache.spark.streaming.dstream.DStream.countByValue", "link" : "org\/apache\/spark\/streaming\/dstream\/ReceiverInputDStream.html#countByValue(numPartitions:Int)(implicitord:Ordering[T]):org.apache.spark.streaming.dstream.DStream[(T,Long)]", "kind" : "def"}, {"label" : "count", "tail" : "(): DStream[Long]", "member" : "org.apache.spark.streaming.dstream.DStream.count", "link" : "org\/apache\/spark\/streaming\/dstream\/ReceiverInputDStream.html#count():org.apache.spark.streaming.dstream.DStream[Long]", "kind" : "def"}, {"label" : "reduce", "tail" : "(reduceFunc: (T, T) ⇒ T): DStream[T]", "member" : "org.apache.spark.streaming.dstream.DStream.reduce", "link" : "org\/apache\/spark\/streaming\/dstream\/ReceiverInputDStream.html#reduce(reduceFunc:(T,T)=>T):org.apache.spark.streaming.dstream.DStream[T]", "kind" : "def"}, {"label" : "mapPartitions", "tail" : "(mapPartFunc: (Iterator[T]) ⇒ Iterator[U], preservePartitioning: Boolean)(arg0: ClassTag[U]): DStream[U]", "member" : "org.apache.spark.streaming.dstream.DStream.mapPartitions", "link" : "org\/apache\/spark\/streaming\/dstream\/ReceiverInputDStream.html#mapPartitions[U](mapPartFunc:Iterator[T]=>Iterator[U],preservePartitioning:Boolean)(implicitevidence$4:scala.reflect.ClassTag[U]):org.apache.spark.streaming.dstream.DStream[U]", "kind" : "def"}, {"label" : "repartition", "tail" : "(numPartitions: Int): DStream[T]", "member" : "org.apache.spark.streaming.dstream.DStream.repartition", "link" : "org\/apache\/spark\/streaming\/dstream\/ReceiverInputDStream.html#repartition(numPartitions:Int):org.apache.spark.streaming.dstream.DStream[T]", "kind" : "def"}, {"label" : "glom", "tail" : "(): DStream[Array[T]]", "member" : "org.apache.spark.streaming.dstream.DStream.glom", "link" : "org\/apache\/spark\/streaming\/dstream\/ReceiverInputDStream.html#glom():org.apache.spark.streaming.dstream.DStream[Array[T]]", "kind" : "def"}, {"label" : "filter", "tail" : "(filterFunc: (T) ⇒ Boolean): DStream[T]", "member" : "org.apache.spark.streaming.dstream.DStream.filter", "link" : "org\/apache\/spark\/streaming\/dstream\/ReceiverInputDStream.html#filter(filterFunc:T=>Boolean):org.apache.spark.streaming.dstream.DStream[T]", "kind" : "def"}, {"label" : "flatMap", "tail" : "(flatMapFunc: (T) ⇒ TraversableOnce[U])(arg0: ClassTag[U]): DStream[U]", "member" : "org.apache.spark.streaming.dstream.DStream.flatMap", "link" : "org\/apache\/spark\/streaming\/dstream\/ReceiverInputDStream.html#flatMap[U](flatMapFunc:T=>TraversableOnce[U])(implicitevidence$3:scala.reflect.ClassTag[U]):org.apache.spark.streaming.dstream.DStream[U]", "kind" : "def"}, {"label" : "map", "tail" : "(mapFunc: (T) ⇒ U)(arg0: ClassTag[U]): DStream[U]", "member" : "org.apache.spark.streaming.dstream.DStream.map", "link" : "org\/apache\/spark\/streaming\/dstream\/ReceiverInputDStream.html#map[U](mapFunc:T=>U)(implicitevidence$2:scala.reflect.ClassTag[U]):org.apache.spark.streaming.dstream.DStream[U]", "kind" : "def"}, {"label" : "createRDDWithLocalProperties", "tail" : "(time: Time, displayInnerRDDOps: Boolean)(body: ⇒ U): U", "member" : "org.apache.spark.streaming.dstream.DStream.createRDDWithLocalProperties", "link" : "org\/apache\/spark\/streaming\/dstream\/ReceiverInputDStream.html#createRDDWithLocalProperties[U](time:org.apache.spark.streaming.Time,displayInnerRDDOps:Boolean)(body:=>U):U", "kind" : "def"}, {"label" : "checkpoint", "tail" : "(interval: Duration): DStream[T]", "member" : "org.apache.spark.streaming.dstream.DStream.checkpoint", "link" : "org\/apache\/spark\/streaming\/dstream\/ReceiverInputDStream.html#checkpoint(interval:org.apache.spark.streaming.Duration):org.apache.spark.streaming.dstream.DStream[T]", "kind" : "def"}, {"label" : "cache", "tail" : "(): DStream[T]", "member" : "org.apache.spark.streaming.dstream.DStream.cache", "link" : "org\/apache\/spark\/streaming\/dstream\/ReceiverInputDStream.html#cache():org.apache.spark.streaming.dstream.DStream[T]", "kind" : "def"}, {"label" : "persist", "tail" : "(): DStream[T]", "member" : "org.apache.spark.streaming.dstream.DStream.persist", "link" : "org\/apache\/spark\/streaming\/dstream\/ReceiverInputDStream.html#persist():org.apache.spark.streaming.dstream.DStream[T]", "kind" : "def"}, {"label" : "persist", "tail" : "(level: StorageLevel): DStream[T]", "member" : "org.apache.spark.streaming.dstream.DStream.persist", "link" : "org\/apache\/spark\/streaming\/dstream\/ReceiverInputDStream.html#persist(level:org.apache.spark.storage.StorageLevel):org.apache.spark.streaming.dstream.DStream[T]", "kind" : "def"}, {"label" : "context", "tail" : "(): StreamingContext", "member" : "org.apache.spark.streaming.dstream.DStream.context", "link" : "org\/apache\/spark\/streaming\/dstream\/ReceiverInputDStream.html#context:org.apache.spark.streaming.StreamingContext", "kind" : "def"}, {"label" : "initializeLogIfNecessary", "tail" : "(isInterpreter: Boolean, silent: Boolean): Boolean", "member" : "org.apache.spark.internal.Logging.initializeLogIfNecessary", "link" : "org\/apache\/spark\/streaming\/dstream\/ReceiverInputDStream.html#initializeLogIfNecessary(isInterpreter:Boolean,silent:Boolean):Boolean", "kind" : "def"}, {"label" : "initializeLogIfNecessary", "tail" : "(isInterpreter: Boolean): Unit", "member" : "org.apache.spark.internal.Logging.initializeLogIfNecessary", "link" : "org\/apache\/spark\/streaming\/dstream\/ReceiverInputDStream.html#initializeLogIfNecessary(isInterpreter:Boolean):Unit", "kind" : "def"}, {"label" : "isTraceEnabled", "tail" : "(): Boolean", "member" : "org.apache.spark.internal.Logging.isTraceEnabled", "link" : "org\/apache\/spark\/streaming\/dstream\/ReceiverInputDStream.html#isTraceEnabled():Boolean", "kind" : "def"}, {"label" : "logError", "tail" : "(msg: ⇒ String, throwable: Throwable): Unit", "member" : "org.apache.spark.internal.Logging.logError", "link" : "org\/apache\/spark\/streaming\/dstream\/ReceiverInputDStream.html#logError(msg:=>String,throwable:Throwable):Unit", "kind" : "def"}, {"label" : "logWarning", "tail" : "(msg: ⇒ String, throwable: Throwable): Unit", "member" : "org.apache.spark.internal.Logging.logWarning", "link" : "org\/apache\/spark\/streaming\/dstream\/ReceiverInputDStream.html#logWarning(msg:=>String,throwable:Throwable):Unit", "kind" : "def"}, {"label" : "logTrace", "tail" : "(msg: ⇒ String, throwable: Throwable): Unit", "member" : "org.apache.spark.internal.Logging.logTrace", "link" : "org\/apache\/spark\/streaming\/dstream\/ReceiverInputDStream.html#logTrace(msg:=>String,throwable:Throwable):Unit", "kind" : "def"}, {"label" : "logDebug", "tail" : "(msg: ⇒ String, throwable: Throwable): Unit", "member" : "org.apache.spark.internal.Logging.logDebug", "link" : "org\/apache\/spark\/streaming\/dstream\/ReceiverInputDStream.html#logDebug(msg:=>String,throwable:Throwable):Unit", "kind" : "def"}, {"label" : "logInfo", "tail" : "(msg: ⇒ String, throwable: Throwable): Unit", "member" : "org.apache.spark.internal.Logging.logInfo", "link" : "org\/apache\/spark\/streaming\/dstream\/ReceiverInputDStream.html#logInfo(msg:=>String,throwable:Throwable):Unit", "kind" : "def"}, {"label" : "logError", "tail" : "(msg: ⇒ String): Unit", "member" : "org.apache.spark.internal.Logging.logError", "link" : "org\/apache\/spark\/streaming\/dstream\/ReceiverInputDStream.html#logError(msg:=>String):Unit", "kind" : "def"}, {"label" : "logWarning", "tail" : "(msg: ⇒ String): Unit", "member" : "org.apache.spark.internal.Logging.logWarning", "link" : "org\/apache\/spark\/streaming\/dstream\/ReceiverInputDStream.html#logWarning(msg:=>String):Unit", "kind" : "def"}, {"label" : "logTrace", "tail" : "(msg: ⇒ String): Unit", "member" : "org.apache.spark.internal.Logging.logTrace", "link" : "org\/apache\/spark\/streaming\/dstream\/ReceiverInputDStream.html#logTrace(msg:=>String):Unit", "kind" : "def"}, {"label" : "logDebug", "tail" : "(msg: ⇒ String): Unit", "member" : "org.apache.spark.internal.Logging.logDebug", "link" : "org\/apache\/spark\/streaming\/dstream\/ReceiverInputDStream.html#logDebug(msg:=>String):Unit", "kind" : "def"}, {"label" : "logInfo", "tail" : "(msg: ⇒ String): Unit", "member" : "org.apache.spark.internal.Logging.logInfo", "link" : "org\/apache\/spark\/streaming\/dstream\/ReceiverInputDStream.html#logInfo(msg:=>String):Unit", "kind" : "def"}, {"label" : "log", "tail" : "(): Logger", "member" : "org.apache.spark.internal.Logging.log", "link" : "org\/apache\/spark\/streaming\/dstream\/ReceiverInputDStream.html#log:org.slf4j.Logger", "kind" : "def"}, {"label" : "logName", "tail" : "(): String", "member" : "org.apache.spark.internal.Logging.logName", "link" : "org\/apache\/spark\/streaming\/dstream\/ReceiverInputDStream.html#logName:String", "kind" : "def"}, {"label" : "synchronized", "tail" : "(arg0: ⇒ T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "org\/apache\/spark\/streaming\/dstream\/ReceiverInputDStream.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "org\/apache\/spark\/streaming\/dstream\/ReceiverInputDStream.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "org\/apache\/spark\/streaming\/dstream\/ReceiverInputDStream.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "org\/apache\/spark\/streaming\/dstream\/ReceiverInputDStream.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "org\/apache\/spark\/streaming\/dstream\/ReceiverInputDStream.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "org\/apache\/spark\/streaming\/dstream\/ReceiverInputDStream.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "org\/apache\/spark\/streaming\/dstream\/ReceiverInputDStream.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "org\/apache\/spark\/streaming\/dstream\/ReceiverInputDStream.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "org\/apache\/spark\/streaming\/dstream\/ReceiverInputDStream.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "org\/apache\/spark\/streaming\/dstream\/ReceiverInputDStream.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "org\/apache\/spark\/streaming\/dstream\/ReceiverInputDStream.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "org\/apache\/spark\/streaming\/dstream\/ReceiverInputDStream.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "org\/apache\/spark\/streaming\/dstream\/ReceiverInputDStream.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "org\/apache\/spark\/streaming\/dstream\/ReceiverInputDStream.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.equals", "link" : "org\/apache\/spark\/streaming\/dstream\/ReceiverInputDStream.html#equals(x$1:Any):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "org\/apache\/spark\/streaming\/dstream\/ReceiverInputDStream.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_]", "member" : "scala.AnyRef.getClass", "link" : "org\/apache\/spark\/streaming\/dstream\/ReceiverInputDStream.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "org\/apache\/spark\/streaming\/dstream\/ReceiverInputDStream.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "org\/apache\/spark\/streaming\/dstream\/ReceiverInputDStream.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}, {"label" : "getReceiver", "tail" : "(): Receiver[T]", "member" : "org.apache.spark.streaming.dstream.ReceiverInputDStream.getReceiver", "link" : "org\/apache\/spark\/streaming\/dstream\/ReceiverInputDStream.html#getReceiver():org.apache.spark.streaming.receiver.Receiver[T]", "kind" : "abstract def"}], "class" : "org\/apache\/spark\/streaming\/dstream\/ReceiverInputDStream.html", "kind" : "class"}], "org.apache.spark.streaming.receiver" : [{"name" : "org.apache.spark.streaming.receiver.Receiver", "shortDescription" : ":: DeveloperApi ::Abstract class of a receiver that can be run on worker nodes to receive external data.", "members_class" : [{"label" : "streamId", "tail" : "(): Int", "member" : "org.apache.spark.streaming.receiver.Receiver.streamId", "link" : "org\/apache\/spark\/streaming\/receiver\/Receiver.html#streamId:Int", "kind" : "def"}, {"label" : "isStopped", "tail" : "(): Boolean", "member" : "org.apache.spark.streaming.receiver.Receiver.isStopped", "link" : "org\/apache\/spark\/streaming\/receiver\/Receiver.html#isStopped():Boolean", "kind" : "def"}, {"label" : "isStarted", "tail" : "(): Boolean", "member" : "org.apache.spark.streaming.receiver.Receiver.isStarted", "link" : "org\/apache\/spark\/streaming\/receiver\/Receiver.html#isStarted():Boolean", "kind" : "def"}, {"label" : "stop", "tail" : "(message: String, error: Throwable): Unit", "member" : "org.apache.spark.streaming.receiver.Receiver.stop", "link" : "org\/apache\/spark\/streaming\/receiver\/Receiver.html#stop(message:String,error:Throwable):Unit", "kind" : "def"}, {"label" : "stop", "tail" : "(message: String): Unit", "member" : "org.apache.spark.streaming.receiver.Receiver.stop", "link" : "org\/apache\/spark\/streaming\/receiver\/Receiver.html#stop(message:String):Unit", "kind" : "def"}, {"label" : "restart", "tail" : "(message: String, error: Throwable, millisecond: Int): Unit", "member" : "org.apache.spark.streaming.receiver.Receiver.restart", "link" : "org\/apache\/spark\/streaming\/receiver\/Receiver.html#restart(message:String,error:Throwable,millisecond:Int):Unit", "kind" : "def"}, {"label" : "restart", "tail" : "(message: String, error: Throwable): Unit", "member" : "org.apache.spark.streaming.receiver.Receiver.restart", "link" : "org\/apache\/spark\/streaming\/receiver\/Receiver.html#restart(message:String,error:Throwable):Unit", "kind" : "def"}, {"label" : "restart", "tail" : "(message: String): Unit", "member" : "org.apache.spark.streaming.receiver.Receiver.restart", "link" : "org\/apache\/spark\/streaming\/receiver\/Receiver.html#restart(message:String):Unit", "kind" : "def"}, {"label" : "reportError", "tail" : "(message: String, throwable: Throwable): Unit", "member" : "org.apache.spark.streaming.receiver.Receiver.reportError", "link" : "org\/apache\/spark\/streaming\/receiver\/Receiver.html#reportError(message:String,throwable:Throwable):Unit", "kind" : "def"}, {"label" : "store", "tail" : "(bytes: ByteBuffer, metadata: Any): Unit", "member" : "org.apache.spark.streaming.receiver.Receiver.store", "link" : "org\/apache\/spark\/streaming\/receiver\/Receiver.html#store(bytes:java.nio.ByteBuffer,metadata:Any):Unit", "kind" : "def"}, {"label" : "store", "tail" : "(bytes: ByteBuffer): Unit", "member" : "org.apache.spark.streaming.receiver.Receiver.store", "link" : "org\/apache\/spark\/streaming\/receiver\/Receiver.html#store(bytes:java.nio.ByteBuffer):Unit", "kind" : "def"}, {"label" : "store", "tail" : "(dataIterator: Iterator[T], metadata: Any): Unit", "member" : "org.apache.spark.streaming.receiver.Receiver.store", "link" : "org\/apache\/spark\/streaming\/receiver\/Receiver.html#store(dataIterator:Iterator[T],metadata:Any):Unit", "kind" : "def"}, {"label" : "store", "tail" : "(dataIterator: Iterator[T]): Unit", "member" : "org.apache.spark.streaming.receiver.Receiver.store", "link" : "org\/apache\/spark\/streaming\/receiver\/Receiver.html#store(dataIterator:java.util.Iterator[T]):Unit", "kind" : "def"}, {"label" : "store", "tail" : "(dataIterator: Iterator[T], metadata: Any): Unit", "member" : "org.apache.spark.streaming.receiver.Receiver.store", "link" : "org\/apache\/spark\/streaming\/receiver\/Receiver.html#store(dataIterator:java.util.Iterator[T],metadata:Any):Unit", "kind" : "def"}, {"label" : "store", "tail" : "(dataIterator: Iterator[T]): Unit", "member" : "org.apache.spark.streaming.receiver.Receiver.store", "link" : "org\/apache\/spark\/streaming\/receiver\/Receiver.html#store(dataIterator:Iterator[T]):Unit", "kind" : "def"}, {"label" : "store", "tail" : "(dataBuffer: ArrayBuffer[T], metadata: Any): Unit", "member" : "org.apache.spark.streaming.receiver.Receiver.store", "link" : "org\/apache\/spark\/streaming\/receiver\/Receiver.html#store(dataBuffer:scala.collection.mutable.ArrayBuffer[T],metadata:Any):Unit", "kind" : "def"}, {"label" : "store", "tail" : "(dataBuffer: ArrayBuffer[T]): Unit", "member" : "org.apache.spark.streaming.receiver.Receiver.store", "link" : "org\/apache\/spark\/streaming\/receiver\/Receiver.html#store(dataBuffer:scala.collection.mutable.ArrayBuffer[T]):Unit", "kind" : "def"}, {"label" : "store", "tail" : "(dataItem: T): Unit", "member" : "org.apache.spark.streaming.receiver.Receiver.store", "link" : "org\/apache\/spark\/streaming\/receiver\/Receiver.html#store(dataItem:T):Unit", "kind" : "def"}, {"label" : "preferredLocation", "tail" : "(): Option[String]", "member" : "org.apache.spark.streaming.receiver.Receiver.preferredLocation", "link" : "org\/apache\/spark\/streaming\/receiver\/Receiver.html#preferredLocation:Option[String]", "kind" : "def"}, {"member" : "org.apache.spark.streaming.receiver.Receiver#<init>", "error" : "unsupported entity"}, {"label" : "storageLevel", "tail" : ": StorageLevel", "member" : "org.apache.spark.streaming.receiver.Receiver.storageLevel", "link" : "org\/apache\/spark\/streaming\/receiver\/Receiver.html#storageLevel:org.apache.spark.storage.StorageLevel", "kind" : "val"}, {"label" : "synchronized", "tail" : "(arg0: ⇒ T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "org\/apache\/spark\/streaming\/receiver\/Receiver.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "org\/apache\/spark\/streaming\/receiver\/Receiver.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "org\/apache\/spark\/streaming\/receiver\/Receiver.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "org\/apache\/spark\/streaming\/receiver\/Receiver.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "org\/apache\/spark\/streaming\/receiver\/Receiver.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "org\/apache\/spark\/streaming\/receiver\/Receiver.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "org\/apache\/spark\/streaming\/receiver\/Receiver.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "org\/apache\/spark\/streaming\/receiver\/Receiver.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "org\/apache\/spark\/streaming\/receiver\/Receiver.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "org\/apache\/spark\/streaming\/receiver\/Receiver.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "org\/apache\/spark\/streaming\/receiver\/Receiver.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "org\/apache\/spark\/streaming\/receiver\/Receiver.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "org\/apache\/spark\/streaming\/receiver\/Receiver.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "org\/apache\/spark\/streaming\/receiver\/Receiver.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.equals", "link" : "org\/apache\/spark\/streaming\/receiver\/Receiver.html#equals(x$1:Any):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "org\/apache\/spark\/streaming\/receiver\/Receiver.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_]", "member" : "scala.AnyRef.getClass", "link" : "org\/apache\/spark\/streaming\/receiver\/Receiver.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "org\/apache\/spark\/streaming\/receiver\/Receiver.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "org\/apache\/spark\/streaming\/receiver\/Receiver.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}, {"label" : "onStop", "tail" : "(): Unit", "member" : "org.apache.spark.streaming.receiver.Receiver.onStop", "link" : "org\/apache\/spark\/streaming\/receiver\/Receiver.html#onStop():Unit", "kind" : "abstract def"}, {"label" : "onStart", "tail" : "(): Unit", "member" : "org.apache.spark.streaming.receiver.Receiver.onStart", "link" : "org\/apache\/spark\/streaming\/receiver\/Receiver.html#onStart():Unit", "kind" : "abstract def"}], "class" : "org\/apache\/spark\/streaming\/receiver\/Receiver.html", "kind" : "class"}], "org.apache.spark.status" : [], "org.apache.spark.status.api.v1.streaming" : [{"name" : "org.apache.spark.status.api.v1.streaming.BatchInfo", "shortDescription" : "", "members_class" : [{"label" : "firstFailureReason", "tail" : ": Option[String]", "member" : "org.apache.spark.status.api.v1.streaming.BatchInfo.firstFailureReason", "link" : "org\/apache\/spark\/status\/api\/v1\/streaming\/BatchInfo.html#firstFailureReason:Option[String]", "kind" : "val"}, {"label" : "numTotalOutputOps", "tail" : ": Int", "member" : "org.apache.spark.status.api.v1.streaming.BatchInfo.numTotalOutputOps", "link" : "org\/apache\/spark\/status\/api\/v1\/streaming\/BatchInfo.html#numTotalOutputOps:Int", "kind" : "val"}, {"label" : "numFailedOutputOps", "tail" : ": Int", "member" : "org.apache.spark.status.api.v1.streaming.BatchInfo.numFailedOutputOps", "link" : "org\/apache\/spark\/status\/api\/v1\/streaming\/BatchInfo.html#numFailedOutputOps:Int", "kind" : "val"}, {"label" : "numCompletedOutputOps", "tail" : ": Int", "member" : "org.apache.spark.status.api.v1.streaming.BatchInfo.numCompletedOutputOps", "link" : "org\/apache\/spark\/status\/api\/v1\/streaming\/BatchInfo.html#numCompletedOutputOps:Int", "kind" : "val"}, {"label" : "numActiveOutputOps", "tail" : ": Int", "member" : "org.apache.spark.status.api.v1.streaming.BatchInfo.numActiveOutputOps", "link" : "org\/apache\/spark\/status\/api\/v1\/streaming\/BatchInfo.html#numActiveOutputOps:Int", "kind" : "val"}, {"label" : "totalDelay", "tail" : ": Option[Long]", "member" : "org.apache.spark.status.api.v1.streaming.BatchInfo.totalDelay", "link" : "org\/apache\/spark\/status\/api\/v1\/streaming\/BatchInfo.html#totalDelay:Option[Long]", "kind" : "val"}, {"label" : "processingTime", "tail" : ": Option[Long]", "member" : "org.apache.spark.status.api.v1.streaming.BatchInfo.processingTime", "link" : "org\/apache\/spark\/status\/api\/v1\/streaming\/BatchInfo.html#processingTime:Option[Long]", "kind" : "val"}, {"label" : "schedulingDelay", "tail" : ": Option[Long]", "member" : "org.apache.spark.status.api.v1.streaming.BatchInfo.schedulingDelay", "link" : "org\/apache\/spark\/status\/api\/v1\/streaming\/BatchInfo.html#schedulingDelay:Option[Long]", "kind" : "val"}, {"label" : "inputSize", "tail" : ": Long", "member" : "org.apache.spark.status.api.v1.streaming.BatchInfo.inputSize", "link" : "org\/apache\/spark\/status\/api\/v1\/streaming\/BatchInfo.html#inputSize:Long", "kind" : "val"}, {"label" : "batchDuration", "tail" : ": Long", "member" : "org.apache.spark.status.api.v1.streaming.BatchInfo.batchDuration", "link" : "org\/apache\/spark\/status\/api\/v1\/streaming\/BatchInfo.html#batchDuration:Long", "kind" : "val"}, {"label" : "status", "tail" : ": String", "member" : "org.apache.spark.status.api.v1.streaming.BatchInfo.status", "link" : "org\/apache\/spark\/status\/api\/v1\/streaming\/BatchInfo.html#status:String", "kind" : "val"}, {"label" : "batchTime", "tail" : ": Date", "member" : "org.apache.spark.status.api.v1.streaming.BatchInfo.batchTime", "link" : "org\/apache\/spark\/status\/api\/v1\/streaming\/BatchInfo.html#batchTime:java.util.Date", "kind" : "val"}, {"label" : "batchId", "tail" : ": Long", "member" : "org.apache.spark.status.api.v1.streaming.BatchInfo.batchId", "link" : "org\/apache\/spark\/status\/api\/v1\/streaming\/BatchInfo.html#batchId:Long", "kind" : "val"}, {"label" : "synchronized", "tail" : "(arg0: ⇒ T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "org\/apache\/spark\/status\/api\/v1\/streaming\/BatchInfo.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "org\/apache\/spark\/status\/api\/v1\/streaming\/BatchInfo.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "org\/apache\/spark\/status\/api\/v1\/streaming\/BatchInfo.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "org\/apache\/spark\/status\/api\/v1\/streaming\/BatchInfo.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "org\/apache\/spark\/status\/api\/v1\/streaming\/BatchInfo.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "org\/apache\/spark\/status\/api\/v1\/streaming\/BatchInfo.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "org\/apache\/spark\/status\/api\/v1\/streaming\/BatchInfo.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "org\/apache\/spark\/status\/api\/v1\/streaming\/BatchInfo.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "org\/apache\/spark\/status\/api\/v1\/streaming\/BatchInfo.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "org\/apache\/spark\/status\/api\/v1\/streaming\/BatchInfo.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "org\/apache\/spark\/status\/api\/v1\/streaming\/BatchInfo.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "org\/apache\/spark\/status\/api\/v1\/streaming\/BatchInfo.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "org\/apache\/spark\/status\/api\/v1\/streaming\/BatchInfo.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "org\/apache\/spark\/status\/api\/v1\/streaming\/BatchInfo.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.equals", "link" : "org\/apache\/spark\/status\/api\/v1\/streaming\/BatchInfo.html#equals(x$1:Any):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "org\/apache\/spark\/status\/api\/v1\/streaming\/BatchInfo.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_]", "member" : "scala.AnyRef.getClass", "link" : "org\/apache\/spark\/status\/api\/v1\/streaming\/BatchInfo.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "org\/apache\/spark\/status\/api\/v1\/streaming\/BatchInfo.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "org\/apache\/spark\/status\/api\/v1\/streaming\/BatchInfo.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "class" : "org\/apache\/spark\/status\/api\/v1\/streaming\/BatchInfo.html", "kind" : "class"}, {"name" : "org.apache.spark.status.api.v1.streaming.BatchStatus", "shortDescription" : "", "members_class" : [{"label" : "finalize", "tail" : "(): Unit", "member" : "java.lang.Enum.finalize", "link" : "org\/apache\/spark\/status\/api\/v1\/streaming\/BatchStatus.html#finalize():Unit", "kind" : "final def"}, {"label" : "getDeclaringClass", "tail" : "(): Class[BatchStatus]", "member" : "java.lang.Enum.getDeclaringClass", "link" : "org\/apache\/spark\/status\/api\/v1\/streaming\/BatchStatus.html#getDeclaringClass():Class[E]", "kind" : "final def"}, {"label" : "compareTo", "tail" : "(arg0: BatchStatus): Int", "member" : "java.lang.Enum.compareTo", "link" : "org\/apache\/spark\/status\/api\/v1\/streaming\/BatchStatus.html#compareTo(x$1:E):Int", "kind" : "final def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "java.lang.Enum.clone", "link" : "org\/apache\/spark\/status\/api\/v1\/streaming\/BatchStatus.html#clone():Object", "kind" : "final def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "java.lang.Enum.hashCode", "link" : "org\/apache\/spark\/status\/api\/v1\/streaming\/BatchStatus.html#hashCode():Int", "kind" : "final def"}, {"label" : "equals", "tail" : "(arg0: Any): Boolean", "member" : "java.lang.Enum.equals", "link" : "org\/apache\/spark\/status\/api\/v1\/streaming\/BatchStatus.html#equals(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "java.lang.Enum.toString", "link" : "org\/apache\/spark\/status\/api\/v1\/streaming\/BatchStatus.html#toString():String", "kind" : "def"}, {"label" : "ordinal", "tail" : "(): Int", "member" : "java.lang.Enum.ordinal", "link" : "org\/apache\/spark\/status\/api\/v1\/streaming\/BatchStatus.html#ordinal():Int", "kind" : "final def"}, {"label" : "name", "tail" : "(): String", "member" : "java.lang.Enum.name", "link" : "org\/apache\/spark\/status\/api\/v1\/streaming\/BatchStatus.html#name():String", "kind" : "final def"}, {"label" : "synchronized", "tail" : "(arg0: ⇒ T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "org\/apache\/spark\/status\/api\/v1\/streaming\/BatchStatus.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "org\/apache\/spark\/status\/api\/v1\/streaming\/BatchStatus.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "org\/apache\/spark\/status\/api\/v1\/streaming\/BatchStatus.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "org\/apache\/spark\/status\/api\/v1\/streaming\/BatchStatus.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "org\/apache\/spark\/status\/api\/v1\/streaming\/BatchStatus.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "org\/apache\/spark\/status\/api\/v1\/streaming\/BatchStatus.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "org\/apache\/spark\/status\/api\/v1\/streaming\/BatchStatus.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "org\/apache\/spark\/status\/api\/v1\/streaming\/BatchStatus.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "org\/apache\/spark\/status\/api\/v1\/streaming\/BatchStatus.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "org\/apache\/spark\/status\/api\/v1\/streaming\/BatchStatus.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "org\/apache\/spark\/status\/api\/v1\/streaming\/BatchStatus.html#notify():Unit", "kind" : "final def"}, {"label" : "getClass", "tail" : "(): Class[_]", "member" : "scala.AnyRef.getClass", "link" : "org\/apache\/spark\/status\/api\/v1\/streaming\/BatchStatus.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "org\/apache\/spark\/status\/api\/v1\/streaming\/BatchStatus.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "org\/apache\/spark\/status\/api\/v1\/streaming\/BatchStatus.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "class" : "org\/apache\/spark\/status\/api\/v1\/streaming\/BatchStatus.html", "kind" : "class"}, {"name" : "org.apache.spark.status.api.v1.streaming.OutputOperationInfo", "shortDescription" : "", "members_class" : [{"label" : "jobIds", "tail" : ": Seq[SparkJobId]", "member" : "org.apache.spark.status.api.v1.streaming.OutputOperationInfo.jobIds", "link" : "org\/apache\/spark\/status\/api\/v1\/streaming\/OutputOperationInfo.html#jobIds:Seq[org.apache.spark.streaming.ui.StreamingJobProgressListener.SparkJobId]", "kind" : "val"}, {"label" : "failureReason", "tail" : ": Option[String]", "member" : "org.apache.spark.status.api.v1.streaming.OutputOperationInfo.failureReason", "link" : "org\/apache\/spark\/status\/api\/v1\/streaming\/OutputOperationInfo.html#failureReason:Option[String]", "kind" : "val"}, {"label" : "duration", "tail" : ": Option[Long]", "member" : "org.apache.spark.status.api.v1.streaming.OutputOperationInfo.duration", "link" : "org\/apache\/spark\/status\/api\/v1\/streaming\/OutputOperationInfo.html#duration:Option[Long]", "kind" : "val"}, {"label" : "endTime", "tail" : ": Option[Date]", "member" : "org.apache.spark.status.api.v1.streaming.OutputOperationInfo.endTime", "link" : "org\/apache\/spark\/status\/api\/v1\/streaming\/OutputOperationInfo.html#endTime:Option[java.util.Date]", "kind" : "val"}, {"label" : "startTime", "tail" : ": Option[Date]", "member" : "org.apache.spark.status.api.v1.streaming.OutputOperationInfo.startTime", "link" : "org\/apache\/spark\/status\/api\/v1\/streaming\/OutputOperationInfo.html#startTime:Option[java.util.Date]", "kind" : "val"}, {"label" : "description", "tail" : ": String", "member" : "org.apache.spark.status.api.v1.streaming.OutputOperationInfo.description", "link" : "org\/apache\/spark\/status\/api\/v1\/streaming\/OutputOperationInfo.html#description:String", "kind" : "val"}, {"label" : "name", "tail" : ": String", "member" : "org.apache.spark.status.api.v1.streaming.OutputOperationInfo.name", "link" : "org\/apache\/spark\/status\/api\/v1\/streaming\/OutputOperationInfo.html#name:String", "kind" : "val"}, {"label" : "outputOpId", "tail" : ": OutputOpId", "member" : "org.apache.spark.status.api.v1.streaming.OutputOperationInfo.outputOpId", "link" : "org\/apache\/spark\/status\/api\/v1\/streaming\/OutputOperationInfo.html#outputOpId:org.apache.spark.streaming.ui.StreamingJobProgressListener.OutputOpId", "kind" : "val"}, {"label" : "synchronized", "tail" : "(arg0: ⇒ T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "org\/apache\/spark\/status\/api\/v1\/streaming\/OutputOperationInfo.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "org\/apache\/spark\/status\/api\/v1\/streaming\/OutputOperationInfo.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "org\/apache\/spark\/status\/api\/v1\/streaming\/OutputOperationInfo.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "org\/apache\/spark\/status\/api\/v1\/streaming\/OutputOperationInfo.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "org\/apache\/spark\/status\/api\/v1\/streaming\/OutputOperationInfo.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "org\/apache\/spark\/status\/api\/v1\/streaming\/OutputOperationInfo.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "org\/apache\/spark\/status\/api\/v1\/streaming\/OutputOperationInfo.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "org\/apache\/spark\/status\/api\/v1\/streaming\/OutputOperationInfo.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "org\/apache\/spark\/status\/api\/v1\/streaming\/OutputOperationInfo.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "org\/apache\/spark\/status\/api\/v1\/streaming\/OutputOperationInfo.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "org\/apache\/spark\/status\/api\/v1\/streaming\/OutputOperationInfo.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "org\/apache\/spark\/status\/api\/v1\/streaming\/OutputOperationInfo.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "org\/apache\/spark\/status\/api\/v1\/streaming\/OutputOperationInfo.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "org\/apache\/spark\/status\/api\/v1\/streaming\/OutputOperationInfo.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.equals", "link" : "org\/apache\/spark\/status\/api\/v1\/streaming\/OutputOperationInfo.html#equals(x$1:Any):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "org\/apache\/spark\/status\/api\/v1\/streaming\/OutputOperationInfo.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_]", "member" : "scala.AnyRef.getClass", "link" : "org\/apache\/spark\/status\/api\/v1\/streaming\/OutputOperationInfo.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "org\/apache\/spark\/status\/api\/v1\/streaming\/OutputOperationInfo.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "org\/apache\/spark\/status\/api\/v1\/streaming\/OutputOperationInfo.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "class" : "org\/apache\/spark\/status\/api\/v1\/streaming\/OutputOperationInfo.html", "kind" : "class"}, {"name" : "org.apache.spark.status.api.v1.streaming.ReceiverInfo", "shortDescription" : "", "members_class" : [{"label" : "eventRates", "tail" : ": Seq[(Long, Double)]", "member" : "org.apache.spark.status.api.v1.streaming.ReceiverInfo.eventRates", "link" : "org\/apache\/spark\/status\/api\/v1\/streaming\/ReceiverInfo.html#eventRates:Seq[(Long,Double)]", "kind" : "val"}, {"label" : "avgEventRate", "tail" : ": Option[Double]", "member" : "org.apache.spark.status.api.v1.streaming.ReceiverInfo.avgEventRate", "link" : "org\/apache\/spark\/status\/api\/v1\/streaming\/ReceiverInfo.html#avgEventRate:Option[Double]", "kind" : "val"}, {"label" : "lastError", "tail" : ": Option[String]", "member" : "org.apache.spark.status.api.v1.streaming.ReceiverInfo.lastError", "link" : "org\/apache\/spark\/status\/api\/v1\/streaming\/ReceiverInfo.html#lastError:Option[String]", "kind" : "val"}, {"label" : "lastErrorMessage", "tail" : ": Option[String]", "member" : "org.apache.spark.status.api.v1.streaming.ReceiverInfo.lastErrorMessage", "link" : "org\/apache\/spark\/status\/api\/v1\/streaming\/ReceiverInfo.html#lastErrorMessage:Option[String]", "kind" : "val"}, {"label" : "lastErrorTime", "tail" : ": Option[Date]", "member" : "org.apache.spark.status.api.v1.streaming.ReceiverInfo.lastErrorTime", "link" : "org\/apache\/spark\/status\/api\/v1\/streaming\/ReceiverInfo.html#lastErrorTime:Option[java.util.Date]", "kind" : "val"}, {"label" : "executorHost", "tail" : ": Option[String]", "member" : "org.apache.spark.status.api.v1.streaming.ReceiverInfo.executorHost", "link" : "org\/apache\/spark\/status\/api\/v1\/streaming\/ReceiverInfo.html#executorHost:Option[String]", "kind" : "val"}, {"label" : "executorId", "tail" : ": Option[String]", "member" : "org.apache.spark.status.api.v1.streaming.ReceiverInfo.executorId", "link" : "org\/apache\/spark\/status\/api\/v1\/streaming\/ReceiverInfo.html#executorId:Option[String]", "kind" : "val"}, {"label" : "isActive", "tail" : ": Option[Boolean]", "member" : "org.apache.spark.status.api.v1.streaming.ReceiverInfo.isActive", "link" : "org\/apache\/spark\/status\/api\/v1\/streaming\/ReceiverInfo.html#isActive:Option[Boolean]", "kind" : "val"}, {"label" : "streamName", "tail" : ": String", "member" : "org.apache.spark.status.api.v1.streaming.ReceiverInfo.streamName", "link" : "org\/apache\/spark\/status\/api\/v1\/streaming\/ReceiverInfo.html#streamName:String", "kind" : "val"}, {"label" : "streamId", "tail" : ": Int", "member" : "org.apache.spark.status.api.v1.streaming.ReceiverInfo.streamId", "link" : "org\/apache\/spark\/status\/api\/v1\/streaming\/ReceiverInfo.html#streamId:Int", "kind" : "val"}, {"label" : "synchronized", "tail" : "(arg0: ⇒ T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "org\/apache\/spark\/status\/api\/v1\/streaming\/ReceiverInfo.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "org\/apache\/spark\/status\/api\/v1\/streaming\/ReceiverInfo.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "org\/apache\/spark\/status\/api\/v1\/streaming\/ReceiverInfo.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "org\/apache\/spark\/status\/api\/v1\/streaming\/ReceiverInfo.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "org\/apache\/spark\/status\/api\/v1\/streaming\/ReceiverInfo.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "org\/apache\/spark\/status\/api\/v1\/streaming\/ReceiverInfo.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "org\/apache\/spark\/status\/api\/v1\/streaming\/ReceiverInfo.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "org\/apache\/spark\/status\/api\/v1\/streaming\/ReceiverInfo.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "org\/apache\/spark\/status\/api\/v1\/streaming\/ReceiverInfo.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "org\/apache\/spark\/status\/api\/v1\/streaming\/ReceiverInfo.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "org\/apache\/spark\/status\/api\/v1\/streaming\/ReceiverInfo.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "org\/apache\/spark\/status\/api\/v1\/streaming\/ReceiverInfo.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "org\/apache\/spark\/status\/api\/v1\/streaming\/ReceiverInfo.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "org\/apache\/spark\/status\/api\/v1\/streaming\/ReceiverInfo.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.equals", "link" : "org\/apache\/spark\/status\/api\/v1\/streaming\/ReceiverInfo.html#equals(x$1:Any):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "org\/apache\/spark\/status\/api\/v1\/streaming\/ReceiverInfo.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_]", "member" : "scala.AnyRef.getClass", "link" : "org\/apache\/spark\/status\/api\/v1\/streaming\/ReceiverInfo.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "org\/apache\/spark\/status\/api\/v1\/streaming\/ReceiverInfo.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "org\/apache\/spark\/status\/api\/v1\/streaming\/ReceiverInfo.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "class" : "org\/apache\/spark\/status\/api\/v1\/streaming\/ReceiverInfo.html", "kind" : "class"}, {"name" : "org.apache.spark.status.api.v1.streaming.StreamingStatistics", "shortDescription" : "", "members_class" : [{"label" : "avgTotalDelay", "tail" : ": Option[Long]", "member" : "org.apache.spark.status.api.v1.streaming.StreamingStatistics.avgTotalDelay", "link" : "org\/apache\/spark\/status\/api\/v1\/streaming\/StreamingStatistics.html#avgTotalDelay:Option[Long]", "kind" : "val"}, {"label" : "avgProcessingTime", "tail" : ": Option[Long]", "member" : "org.apache.spark.status.api.v1.streaming.StreamingStatistics.avgProcessingTime", "link" : "org\/apache\/spark\/status\/api\/v1\/streaming\/StreamingStatistics.html#avgProcessingTime:Option[Long]", "kind" : "val"}, {"label" : "avgSchedulingDelay", "tail" : ": Option[Long]", "member" : "org.apache.spark.status.api.v1.streaming.StreamingStatistics.avgSchedulingDelay", "link" : "org\/apache\/spark\/status\/api\/v1\/streaming\/StreamingStatistics.html#avgSchedulingDelay:Option[Long]", "kind" : "val"}, {"label" : "avgInputRate", "tail" : ": Option[Double]", "member" : "org.apache.spark.status.api.v1.streaming.StreamingStatistics.avgInputRate", "link" : "org\/apache\/spark\/status\/api\/v1\/streaming\/StreamingStatistics.html#avgInputRate:Option[Double]", "kind" : "val"}, {"label" : "numReceivedRecords", "tail" : ": Long", "member" : "org.apache.spark.status.api.v1.streaming.StreamingStatistics.numReceivedRecords", "link" : "org\/apache\/spark\/status\/api\/v1\/streaming\/StreamingStatistics.html#numReceivedRecords:Long", "kind" : "val"}, {"label" : "numProcessedRecords", "tail" : ": Long", "member" : "org.apache.spark.status.api.v1.streaming.StreamingStatistics.numProcessedRecords", "link" : "org\/apache\/spark\/status\/api\/v1\/streaming\/StreamingStatistics.html#numProcessedRecords:Long", "kind" : "val"}, {"label" : "numActiveBatches", "tail" : ": Long", "member" : "org.apache.spark.status.api.v1.streaming.StreamingStatistics.numActiveBatches", "link" : "org\/apache\/spark\/status\/api\/v1\/streaming\/StreamingStatistics.html#numActiveBatches:Long", "kind" : "val"}, {"label" : "numRetainedCompletedBatches", "tail" : ": Long", "member" : "org.apache.spark.status.api.v1.streaming.StreamingStatistics.numRetainedCompletedBatches", "link" : "org\/apache\/spark\/status\/api\/v1\/streaming\/StreamingStatistics.html#numRetainedCompletedBatches:Long", "kind" : "val"}, {"label" : "numTotalCompletedBatches", "tail" : ": Long", "member" : "org.apache.spark.status.api.v1.streaming.StreamingStatistics.numTotalCompletedBatches", "link" : "org\/apache\/spark\/status\/api\/v1\/streaming\/StreamingStatistics.html#numTotalCompletedBatches:Long", "kind" : "val"}, {"label" : "numInactiveReceivers", "tail" : ": Int", "member" : "org.apache.spark.status.api.v1.streaming.StreamingStatistics.numInactiveReceivers", "link" : "org\/apache\/spark\/status\/api\/v1\/streaming\/StreamingStatistics.html#numInactiveReceivers:Int", "kind" : "val"}, {"label" : "numActiveReceivers", "tail" : ": Int", "member" : "org.apache.spark.status.api.v1.streaming.StreamingStatistics.numActiveReceivers", "link" : "org\/apache\/spark\/status\/api\/v1\/streaming\/StreamingStatistics.html#numActiveReceivers:Int", "kind" : "val"}, {"label" : "numReceivers", "tail" : ": Int", "member" : "org.apache.spark.status.api.v1.streaming.StreamingStatistics.numReceivers", "link" : "org\/apache\/spark\/status\/api\/v1\/streaming\/StreamingStatistics.html#numReceivers:Int", "kind" : "val"}, {"label" : "batchDuration", "tail" : ": Long", "member" : "org.apache.spark.status.api.v1.streaming.StreamingStatistics.batchDuration", "link" : "org\/apache\/spark\/status\/api\/v1\/streaming\/StreamingStatistics.html#batchDuration:Long", "kind" : "val"}, {"label" : "startTime", "tail" : ": Date", "member" : "org.apache.spark.status.api.v1.streaming.StreamingStatistics.startTime", "link" : "org\/apache\/spark\/status\/api\/v1\/streaming\/StreamingStatistics.html#startTime:java.util.Date", "kind" : "val"}, {"label" : "synchronized", "tail" : "(arg0: ⇒ T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "org\/apache\/spark\/status\/api\/v1\/streaming\/StreamingStatistics.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "org\/apache\/spark\/status\/api\/v1\/streaming\/StreamingStatistics.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "org\/apache\/spark\/status\/api\/v1\/streaming\/StreamingStatistics.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "org\/apache\/spark\/status\/api\/v1\/streaming\/StreamingStatistics.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "org\/apache\/spark\/status\/api\/v1\/streaming\/StreamingStatistics.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "org\/apache\/spark\/status\/api\/v1\/streaming\/StreamingStatistics.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "org\/apache\/spark\/status\/api\/v1\/streaming\/StreamingStatistics.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "org\/apache\/spark\/status\/api\/v1\/streaming\/StreamingStatistics.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "org\/apache\/spark\/status\/api\/v1\/streaming\/StreamingStatistics.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "org\/apache\/spark\/status\/api\/v1\/streaming\/StreamingStatistics.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "org\/apache\/spark\/status\/api\/v1\/streaming\/StreamingStatistics.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "org\/apache\/spark\/status\/api\/v1\/streaming\/StreamingStatistics.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "org\/apache\/spark\/status\/api\/v1\/streaming\/StreamingStatistics.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "org\/apache\/spark\/status\/api\/v1\/streaming\/StreamingStatistics.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.equals", "link" : "org\/apache\/spark\/status\/api\/v1\/streaming\/StreamingStatistics.html#equals(x$1:Any):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "org\/apache\/spark\/status\/api\/v1\/streaming\/StreamingStatistics.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_]", "member" : "scala.AnyRef.getClass", "link" : "org\/apache\/spark\/status\/api\/v1\/streaming\/StreamingStatistics.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "org\/apache\/spark\/status\/api\/v1\/streaming\/StreamingStatistics.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "org\/apache\/spark\/status\/api\/v1\/streaming\/StreamingStatistics.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "class" : "org\/apache\/spark\/status\/api\/v1\/streaming\/StreamingStatistics.html", "kind" : "class"}], "org.apache.spark.streaming.api.java" : [{"name" : "org.apache.spark.streaming.api.java.JavaDStream", "shortDescription" : "A Java-friendly interface to org.apache.spark.streaming.dstream.DStream, the basicabstraction in Spark Streaming that represents a continuous stream of data.", "object" : "org\/apache\/spark\/streaming\/api\/java\/JavaDStream$.html", "members_class" : [{"label" : "repartition", "tail" : "(numPartitions: Int): JavaDStream[T]", "member" : "org.apache.spark.streaming.api.java.JavaDStream.repartition", "link" : "org\/apache\/spark\/streaming\/api\/java\/JavaDStream.html#repartition(numPartitions:Int):org.apache.spark.streaming.api.java.JavaDStream[T]", "kind" : "def"}, {"label" : "union", "tail" : "(that: JavaDStream[T]): JavaDStream[T]", "member" : "org.apache.spark.streaming.api.java.JavaDStream.union", "link" : "org\/apache\/spark\/streaming\/api\/java\/JavaDStream.html#union(that:org.apache.spark.streaming.api.java.JavaDStream[T]):org.apache.spark.streaming.api.java.JavaDStream[T]", "kind" : "def"}, {"label" : "window", "tail" : "(windowDuration: Duration, slideDuration: Duration): JavaDStream[T]", "member" : "org.apache.spark.streaming.api.java.JavaDStream.window", "link" : "org\/apache\/spark\/streaming\/api\/java\/JavaDStream.html#window(windowDuration:org.apache.spark.streaming.Duration,slideDuration:org.apache.spark.streaming.Duration):org.apache.spark.streaming.api.java.JavaDStream[T]", "kind" : "def"}, {"label" : "window", "tail" : "(windowDuration: Duration): JavaDStream[T]", "member" : "org.apache.spark.streaming.api.java.JavaDStream.window", "link" : "org\/apache\/spark\/streaming\/api\/java\/JavaDStream.html#window(windowDuration:org.apache.spark.streaming.Duration):org.apache.spark.streaming.api.java.JavaDStream[T]", "kind" : "def"}, {"label" : "compute", "tail" : "(validTime: Time): JavaRDD[T]", "member" : "org.apache.spark.streaming.api.java.JavaDStream.compute", "link" : "org\/apache\/spark\/streaming\/api\/java\/JavaDStream.html#compute(validTime:org.apache.spark.streaming.Time):org.apache.spark.api.java.JavaRDD[T]", "kind" : "def"}, {"label" : "persist", "tail" : "(storageLevel: StorageLevel): JavaDStream[T]", "member" : "org.apache.spark.streaming.api.java.JavaDStream.persist", "link" : "org\/apache\/spark\/streaming\/api\/java\/JavaDStream.html#persist(storageLevel:org.apache.spark.storage.StorageLevel):org.apache.spark.streaming.api.java.JavaDStream[T]", "kind" : "def"}, {"label" : "persist", "tail" : "(): JavaDStream[T]", "member" : "org.apache.spark.streaming.api.java.JavaDStream.persist", "link" : "org\/apache\/spark\/streaming\/api\/java\/JavaDStream.html#persist():org.apache.spark.streaming.api.java.JavaDStream[T]", "kind" : "def"}, {"label" : "cache", "tail" : "(): JavaDStream[T]", "member" : "org.apache.spark.streaming.api.java.JavaDStream.cache", "link" : "org\/apache\/spark\/streaming\/api\/java\/JavaDStream.html#cache():org.apache.spark.streaming.api.java.JavaDStream[T]", "kind" : "def"}, {"label" : "filter", "tail" : "(f: Function[T, Boolean]): JavaDStream[T]", "member" : "org.apache.spark.streaming.api.java.JavaDStream.filter", "link" : "org\/apache\/spark\/streaming\/api\/java\/JavaDStream.html#filter(f:org.apache.spark.api.java.function.Function[T,Boolean]):org.apache.spark.streaming.api.java.JavaDStream[T]", "kind" : "def"}, {"label" : "wrapRDD", "tail" : "(rdd: RDD[T]): JavaRDD[T]", "member" : "org.apache.spark.streaming.api.java.JavaDStream.wrapRDD", "link" : "org\/apache\/spark\/streaming\/api\/java\/JavaDStream.html#wrapRDD(rdd:org.apache.spark.rdd.RDD[T]):org.apache.spark.api.java.JavaRDD[T]", "kind" : "def"}, {"member" : "org.apache.spark.streaming.api.java.JavaDStream#<init>", "error" : "unsupported entity"}, {"label" : "classTag", "tail" : ": ClassTag[T]", "member" : "org.apache.spark.streaming.api.java.JavaDStream.classTag", "link" : "org\/apache\/spark\/streaming\/api\/java\/JavaDStream.html#classTag:scala.reflect.ClassTag[T]", "kind" : "implicit val"}, {"label" : "dstream", "tail" : ": DStream[T]", "member" : "org.apache.spark.streaming.api.java.JavaDStream.dstream", "link" : "org\/apache\/spark\/streaming\/api\/java\/JavaDStream.html#dstream:org.apache.spark.streaming.dstream.DStream[T]", "kind" : "val"}, {"label" : "checkpoint", "tail" : "(interval: Duration): DStream[T]", "member" : "org.apache.spark.streaming.api.java.JavaDStreamLike.checkpoint", "link" : "org\/apache\/spark\/streaming\/api\/java\/JavaDStream.html#checkpoint(interval:org.apache.spark.streaming.Duration):org.apache.spark.streaming.dstream.DStream[T]", "kind" : "def"}, {"label" : "transformWithToPair", "tail" : "(other: JavaPairDStream[K2, V2], transformFunc: Function3[JavaRDD[T], JavaPairRDD[K2, V2], Time, JavaPairRDD[K3, V3]]): JavaPairDStream[K3, V3]", "member" : "org.apache.spark.streaming.api.java.JavaDStreamLike.transformWithToPair", "link" : "org\/apache\/spark\/streaming\/api\/java\/JavaDStream.html#transformWithToPair[K2,V2,K3,V3](other:org.apache.spark.streaming.api.java.JavaPairDStream[K2,V2],transformFunc:org.apache.spark.api.java.function.Function3[R,org.apache.spark.api.java.JavaPairRDD[K2,V2],org.apache.spark.streaming.Time,org.apache.spark.api.java.JavaPairRDD[K3,V3]]):org.apache.spark.streaming.api.java.JavaPairDStream[K3,V3]", "kind" : "def"}, {"label" : "transformWith", "tail" : "(other: JavaPairDStream[K2, V2], transformFunc: Function3[JavaRDD[T], JavaPairRDD[K2, V2], Time, JavaRDD[W]]): JavaDStream[W]", "member" : "org.apache.spark.streaming.api.java.JavaDStreamLike.transformWith", "link" : "org\/apache\/spark\/streaming\/api\/java\/JavaDStream.html#transformWith[K2,V2,W](other:org.apache.spark.streaming.api.java.JavaPairDStream[K2,V2],transformFunc:org.apache.spark.api.java.function.Function3[R,org.apache.spark.api.java.JavaPairRDD[K2,V2],org.apache.spark.streaming.Time,org.apache.spark.api.java.JavaRDD[W]]):org.apache.spark.streaming.api.java.JavaDStream[W]", "kind" : "def"}, {"label" : "transformWithToPair", "tail" : "(other: JavaDStream[U], transformFunc: Function3[JavaRDD[T], JavaRDD[U], Time, JavaPairRDD[K2, V2]]): JavaPairDStream[K2, V2]", "member" : "org.apache.spark.streaming.api.java.JavaDStreamLike.transformWithToPair", "link" : "org\/apache\/spark\/streaming\/api\/java\/JavaDStream.html#transformWithToPair[U,K2,V2](other:org.apache.spark.streaming.api.java.JavaDStream[U],transformFunc:org.apache.spark.api.java.function.Function3[R,org.apache.spark.api.java.JavaRDD[U],org.apache.spark.streaming.Time,org.apache.spark.api.java.JavaPairRDD[K2,V2]]):org.apache.spark.streaming.api.java.JavaPairDStream[K2,V2]", "kind" : "def"}, {"label" : "transformWith", "tail" : "(other: JavaDStream[U], transformFunc: Function3[JavaRDD[T], JavaRDD[U], Time, JavaRDD[W]]): JavaDStream[W]", "member" : "org.apache.spark.streaming.api.java.JavaDStreamLike.transformWith", "link" : "org\/apache\/spark\/streaming\/api\/java\/JavaDStream.html#transformWith[U,W](other:org.apache.spark.streaming.api.java.JavaDStream[U],transformFunc:org.apache.spark.api.java.function.Function3[R,org.apache.spark.api.java.JavaRDD[U],org.apache.spark.streaming.Time,org.apache.spark.api.java.JavaRDD[W]]):org.apache.spark.streaming.api.java.JavaDStream[W]", "kind" : "def"}, {"label" : "transformToPair", "tail" : "(transformFunc: Function2[JavaRDD[T], Time, JavaPairRDD[K2, V2]]): JavaPairDStream[K2, V2]", "member" : "org.apache.spark.streaming.api.java.JavaDStreamLike.transformToPair", "link" : "org\/apache\/spark\/streaming\/api\/java\/JavaDStream.html#transformToPair[K2,V2](transformFunc:org.apache.spark.api.java.function.Function2[R,org.apache.spark.streaming.Time,org.apache.spark.api.java.JavaPairRDD[K2,V2]]):org.apache.spark.streaming.api.java.JavaPairDStream[K2,V2]", "kind" : "def"}, {"label" : "transformToPair", "tail" : "(transformFunc: Function[JavaRDD[T], JavaPairRDD[K2, V2]]): JavaPairDStream[K2, V2]", "member" : "org.apache.spark.streaming.api.java.JavaDStreamLike.transformToPair", "link" : "org\/apache\/spark\/streaming\/api\/java\/JavaDStream.html#transformToPair[K2,V2](transformFunc:org.apache.spark.api.java.function.Function[R,org.apache.spark.api.java.JavaPairRDD[K2,V2]]):org.apache.spark.streaming.api.java.JavaPairDStream[K2,V2]", "kind" : "def"}, {"label" : "transform", "tail" : "(transformFunc: Function2[JavaRDD[T], Time, JavaRDD[U]]): JavaDStream[U]", "member" : "org.apache.spark.streaming.api.java.JavaDStreamLike.transform", "link" : "org\/apache\/spark\/streaming\/api\/java\/JavaDStream.html#transform[U](transformFunc:org.apache.spark.api.java.function.Function2[R,org.apache.spark.streaming.Time,org.apache.spark.api.java.JavaRDD[U]]):org.apache.spark.streaming.api.java.JavaDStream[U]", "kind" : "def"}, {"label" : "transform", "tail" : "(transformFunc: Function[JavaRDD[T], JavaRDD[U]]): JavaDStream[U]", "member" : "org.apache.spark.streaming.api.java.JavaDStreamLike.transform", "link" : "org\/apache\/spark\/streaming\/api\/java\/JavaDStream.html#transform[U](transformFunc:org.apache.spark.api.java.function.Function[R,org.apache.spark.api.java.JavaRDD[U]]):org.apache.spark.streaming.api.java.JavaDStream[U]", "kind" : "def"}, {"label" : "foreachRDD", "tail" : "(foreachFunc: VoidFunction2[JavaRDD[T], Time]): Unit", "member" : "org.apache.spark.streaming.api.java.JavaDStreamLike.foreachRDD", "link" : "org\/apache\/spark\/streaming\/api\/java\/JavaDStream.html#foreachRDD(foreachFunc:org.apache.spark.api.java.function.VoidFunction2[R,org.apache.spark.streaming.Time]):Unit", "kind" : "def"}, {"label" : "foreachRDD", "tail" : "(foreachFunc: VoidFunction[JavaRDD[T]]): Unit", "member" : "org.apache.spark.streaming.api.java.JavaDStreamLike.foreachRDD", "link" : "org\/apache\/spark\/streaming\/api\/java\/JavaDStream.html#foreachRDD(foreachFunc:org.apache.spark.api.java.function.VoidFunction[R]):Unit", "kind" : "def"}, {"label" : "slice", "tail" : "(fromTime: Time, toTime: Time): List[JavaRDD[T]]", "member" : "org.apache.spark.streaming.api.java.JavaDStreamLike.slice", "link" : "org\/apache\/spark\/streaming\/api\/java\/JavaDStream.html#slice(fromTime:org.apache.spark.streaming.Time,toTime:org.apache.spark.streaming.Time):java.util.List[R]", "kind" : "def"}, {"label" : "reduceByWindow", "tail" : "(reduceFunc: Function2[T, T, T], invReduceFunc: Function2[T, T, T], windowDuration: Duration, slideDuration: Duration): JavaDStream[T]", "member" : "org.apache.spark.streaming.api.java.JavaDStreamLike.reduceByWindow", "link" : "org\/apache\/spark\/streaming\/api\/java\/JavaDStream.html#reduceByWindow(reduceFunc:org.apache.spark.api.java.function.Function2[T,T,T],invReduceFunc:org.apache.spark.api.java.function.Function2[T,T,T],windowDuration:org.apache.spark.streaming.Duration,slideDuration:org.apache.spark.streaming.Duration):org.apache.spark.streaming.api.java.JavaDStream[T]", "kind" : "def"}, {"label" : "reduceByWindow", "tail" : "(reduceFunc: Function2[T, T, T], windowDuration: Duration, slideDuration: Duration): JavaDStream[T]", "member" : "org.apache.spark.streaming.api.java.JavaDStreamLike.reduceByWindow", "link" : "org\/apache\/spark\/streaming\/api\/java\/JavaDStream.html#reduceByWindow(reduceFunc:org.apache.spark.api.java.function.Function2[T,T,T],windowDuration:org.apache.spark.streaming.Duration,slideDuration:org.apache.spark.streaming.Duration):org.apache.spark.streaming.api.java.JavaDStream[T]", "kind" : "def"}, {"label" : "reduce", "tail" : "(f: Function2[T, T, T]): JavaDStream[T]", "member" : "org.apache.spark.streaming.api.java.JavaDStreamLike.reduce", "link" : "org\/apache\/spark\/streaming\/api\/java\/JavaDStream.html#reduce(f:org.apache.spark.api.java.function.Function2[T,T,T]):org.apache.spark.streaming.api.java.JavaDStream[T]", "kind" : "def"}, {"label" : "mapPartitionsToPair", "tail" : "(f: PairFlatMapFunction[Iterator[T], K2, V2]): JavaPairDStream[K2, V2]", "member" : "org.apache.spark.streaming.api.java.JavaDStreamLike.mapPartitionsToPair", "link" : "org\/apache\/spark\/streaming\/api\/java\/JavaDStream.html#mapPartitionsToPair[K2,V2](f:org.apache.spark.api.java.function.PairFlatMapFunction[java.util.Iterator[T],K2,V2]):org.apache.spark.streaming.api.java.JavaPairDStream[K2,V2]", "kind" : "def"}, {"label" : "mapPartitions", "tail" : "(f: FlatMapFunction[Iterator[T], U]): JavaDStream[U]", "member" : "org.apache.spark.streaming.api.java.JavaDStreamLike.mapPartitions", "link" : "org\/apache\/spark\/streaming\/api\/java\/JavaDStream.html#mapPartitions[U](f:org.apache.spark.api.java.function.FlatMapFunction[java.util.Iterator[T],U]):org.apache.spark.streaming.api.java.JavaDStream[U]", "kind" : "def"}, {"label" : "flatMapToPair", "tail" : "(f: PairFlatMapFunction[T, K2, V2]): JavaPairDStream[K2, V2]", "member" : "org.apache.spark.streaming.api.java.JavaDStreamLike.flatMapToPair", "link" : "org\/apache\/spark\/streaming\/api\/java\/JavaDStream.html#flatMapToPair[K2,V2](f:org.apache.spark.api.java.function.PairFlatMapFunction[T,K2,V2]):org.apache.spark.streaming.api.java.JavaPairDStream[K2,V2]", "kind" : "def"}, {"label" : "flatMap", "tail" : "(f: FlatMapFunction[T, U]): JavaDStream[U]", "member" : "org.apache.spark.streaming.api.java.JavaDStreamLike.flatMap", "link" : "org\/apache\/spark\/streaming\/api\/java\/JavaDStream.html#flatMap[U](f:org.apache.spark.api.java.function.FlatMapFunction[T,U]):org.apache.spark.streaming.api.java.JavaDStream[U]", "kind" : "def"}, {"label" : "mapToPair", "tail" : "(f: PairFunction[T, K2, V2]): JavaPairDStream[K2, V2]", "member" : "org.apache.spark.streaming.api.java.JavaDStreamLike.mapToPair", "link" : "org\/apache\/spark\/streaming\/api\/java\/JavaDStream.html#mapToPair[K2,V2](f:org.apache.spark.api.java.function.PairFunction[T,K2,V2]):org.apache.spark.streaming.api.java.JavaPairDStream[K2,V2]", "kind" : "def"}, {"label" : "map", "tail" : "(f: Function[T, U]): JavaDStream[U]", "member" : "org.apache.spark.streaming.api.java.JavaDStreamLike.map", "link" : "org\/apache\/spark\/streaming\/api\/java\/JavaDStream.html#map[U](f:org.apache.spark.api.java.function.Function[T,U]):org.apache.spark.streaming.api.java.JavaDStream[U]", "kind" : "def"}, {"label" : "context", "tail" : "(): StreamingContext", "member" : "org.apache.spark.streaming.api.java.JavaDStreamLike.context", "link" : "org\/apache\/spark\/streaming\/api\/java\/JavaDStream.html#context():org.apache.spark.streaming.StreamingContext", "kind" : "def"}, {"label" : "glom", "tail" : "(): JavaDStream[List[T]]", "member" : "org.apache.spark.streaming.api.java.JavaDStreamLike.glom", "link" : "org\/apache\/spark\/streaming\/api\/java\/JavaDStream.html#glom():org.apache.spark.streaming.api.java.JavaDStream[java.util.List[T]]", "kind" : "def"}, {"label" : "countByValueAndWindow", "tail" : "(windowDuration: Duration, slideDuration: Duration, numPartitions: Int): JavaPairDStream[T, Long]", "member" : "org.apache.spark.streaming.api.java.JavaDStreamLike.countByValueAndWindow", "link" : "org\/apache\/spark\/streaming\/api\/java\/JavaDStream.html#countByValueAndWindow(windowDuration:org.apache.spark.streaming.Duration,slideDuration:org.apache.spark.streaming.Duration,numPartitions:Int):org.apache.spark.streaming.api.java.JavaPairDStream[T,Long]", "kind" : "def"}, {"label" : "countByValueAndWindow", "tail" : "(windowDuration: Duration, slideDuration: Duration): JavaPairDStream[T, Long]", "member" : "org.apache.spark.streaming.api.java.JavaDStreamLike.countByValueAndWindow", "link" : "org\/apache\/spark\/streaming\/api\/java\/JavaDStream.html#countByValueAndWindow(windowDuration:org.apache.spark.streaming.Duration,slideDuration:org.apache.spark.streaming.Duration):org.apache.spark.streaming.api.java.JavaPairDStream[T,Long]", "kind" : "def"}, {"label" : "countByWindow", "tail" : "(windowDuration: Duration, slideDuration: Duration): JavaDStream[Long]", "member" : "org.apache.spark.streaming.api.java.JavaDStreamLike.countByWindow", "link" : "org\/apache\/spark\/streaming\/api\/java\/JavaDStream.html#countByWindow(windowDuration:org.apache.spark.streaming.Duration,slideDuration:org.apache.spark.streaming.Duration):org.apache.spark.streaming.api.java.JavaDStream[Long]", "kind" : "def"}, {"label" : "countByValue", "tail" : "(numPartitions: Int): JavaPairDStream[T, Long]", "member" : "org.apache.spark.streaming.api.java.JavaDStreamLike.countByValue", "link" : "org\/apache\/spark\/streaming\/api\/java\/JavaDStream.html#countByValue(numPartitions:Int):org.apache.spark.streaming.api.java.JavaPairDStream[T,Long]", "kind" : "def"}, {"label" : "countByValue", "tail" : "(): JavaPairDStream[T, Long]", "member" : "org.apache.spark.streaming.api.java.JavaDStreamLike.countByValue", "link" : "org\/apache\/spark\/streaming\/api\/java\/JavaDStream.html#countByValue():org.apache.spark.streaming.api.java.JavaPairDStream[T,Long]", "kind" : "def"}, {"label" : "count", "tail" : "(): JavaDStream[Long]", "member" : "org.apache.spark.streaming.api.java.JavaDStreamLike.count", "link" : "org\/apache\/spark\/streaming\/api\/java\/JavaDStream.html#count():org.apache.spark.streaming.api.java.JavaDStream[Long]", "kind" : "def"}, {"label" : "print", "tail" : "(num: Int): Unit", "member" : "org.apache.spark.streaming.api.java.JavaDStreamLike.print", "link" : "org\/apache\/spark\/streaming\/api\/java\/JavaDStream.html#print(num:Int):Unit", "kind" : "def"}, {"label" : "print", "tail" : "(): Unit", "member" : "org.apache.spark.streaming.api.java.JavaDStreamLike.print", "link" : "org\/apache\/spark\/streaming\/api\/java\/JavaDStream.html#print():Unit", "kind" : "def"}, {"label" : "scalaIntToJavaLong", "tail" : "(in: DStream[Long]): JavaDStream[Long]", "member" : "org.apache.spark.streaming.api.java.JavaDStreamLike.scalaIntToJavaLong", "link" : "org\/apache\/spark\/streaming\/api\/java\/JavaDStream.html#scalaIntToJavaLong(in:org.apache.spark.streaming.dstream.DStream[Long]):org.apache.spark.streaming.api.java.JavaDStream[Long]", "kind" : "implicit def"}, {"label" : "synchronized", "tail" : "(arg0: ⇒ T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "org\/apache\/spark\/streaming\/api\/java\/JavaDStream.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "org\/apache\/spark\/streaming\/api\/java\/JavaDStream.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "org\/apache\/spark\/streaming\/api\/java\/JavaDStream.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "org\/apache\/spark\/streaming\/api\/java\/JavaDStream.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "org\/apache\/spark\/streaming\/api\/java\/JavaDStream.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "org\/apache\/spark\/streaming\/api\/java\/JavaDStream.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "org\/apache\/spark\/streaming\/api\/java\/JavaDStream.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "org\/apache\/spark\/streaming\/api\/java\/JavaDStream.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "org\/apache\/spark\/streaming\/api\/java\/JavaDStream.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "org\/apache\/spark\/streaming\/api\/java\/JavaDStream.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "org\/apache\/spark\/streaming\/api\/java\/JavaDStream.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "org\/apache\/spark\/streaming\/api\/java\/JavaDStream.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "org\/apache\/spark\/streaming\/api\/java\/JavaDStream.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "org\/apache\/spark\/streaming\/api\/java\/JavaDStream.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.equals", "link" : "org\/apache\/spark\/streaming\/api\/java\/JavaDStream.html#equals(x$1:Any):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "org\/apache\/spark\/streaming\/api\/java\/JavaDStream.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_]", "member" : "scala.AnyRef.getClass", "link" : "org\/apache\/spark\/streaming\/api\/java\/JavaDStream.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "org\/apache\/spark\/streaming\/api\/java\/JavaDStream.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "org\/apache\/spark\/streaming\/api\/java\/JavaDStream.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "members_object" : [{"label" : "fromDStream", "tail" : "(dstream: DStream[T])(arg0: ClassTag[T]): JavaDStream[T]", "member" : "org.apache.spark.streaming.api.java.JavaDStream.fromDStream", "link" : "org\/apache\/spark\/streaming\/api\/java\/JavaDStream$.html#fromDStream[T](dstream:org.apache.spark.streaming.dstream.DStream[T])(implicitevidence$1:scala.reflect.ClassTag[T]):org.apache.spark.streaming.api.java.JavaDStream[T]", "kind" : "implicit def"}, {"label" : "synchronized", "tail" : "(arg0: ⇒ T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "org\/apache\/spark\/streaming\/api\/java\/JavaDStream$.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "org\/apache\/spark\/streaming\/api\/java\/JavaDStream$.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "org\/apache\/spark\/streaming\/api\/java\/JavaDStream$.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "org\/apache\/spark\/streaming\/api\/java\/JavaDStream$.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "org\/apache\/spark\/streaming\/api\/java\/JavaDStream$.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "org\/apache\/spark\/streaming\/api\/java\/JavaDStream$.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "org\/apache\/spark\/streaming\/api\/java\/JavaDStream$.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "org\/apache\/spark\/streaming\/api\/java\/JavaDStream$.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "org\/apache\/spark\/streaming\/api\/java\/JavaDStream$.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "org\/apache\/spark\/streaming\/api\/java\/JavaDStream$.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "org\/apache\/spark\/streaming\/api\/java\/JavaDStream$.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "org\/apache\/spark\/streaming\/api\/java\/JavaDStream$.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "org\/apache\/spark\/streaming\/api\/java\/JavaDStream$.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "org\/apache\/spark\/streaming\/api\/java\/JavaDStream$.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.equals", "link" : "org\/apache\/spark\/streaming\/api\/java\/JavaDStream$.html#equals(x$1:Any):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "org\/apache\/spark\/streaming\/api\/java\/JavaDStream$.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_]", "member" : "scala.AnyRef.getClass", "link" : "org\/apache\/spark\/streaming\/api\/java\/JavaDStream$.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "org\/apache\/spark\/streaming\/api\/java\/JavaDStream$.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "org\/apache\/spark\/streaming\/api\/java\/JavaDStream$.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "class" : "org\/apache\/spark\/streaming\/api\/java\/JavaDStream.html", "kind" : "class"}, {"name" : "org.apache.spark.streaming.api.java.JavaDStreamLike", "members_trait" : [{"label" : "checkpoint", "tail" : "(interval: Duration): DStream[T]", "member" : "org.apache.spark.streaming.api.java.JavaDStreamLike.checkpoint", "link" : "org\/apache\/spark\/streaming\/api\/java\/JavaDStreamLike.html#checkpoint(interval:org.apache.spark.streaming.Duration):org.apache.spark.streaming.dstream.DStream[T]", "kind" : "def"}, {"label" : "transformWithToPair", "tail" : "(other: JavaPairDStream[K2, V2], transformFunc: Function3[R, JavaPairRDD[K2, V2], Time, JavaPairRDD[K3, V3]]): JavaPairDStream[K3, V3]", "member" : "org.apache.spark.streaming.api.java.JavaDStreamLike.transformWithToPair", "link" : "org\/apache\/spark\/streaming\/api\/java\/JavaDStreamLike.html#transformWithToPair[K2,V2,K3,V3](other:org.apache.spark.streaming.api.java.JavaPairDStream[K2,V2],transformFunc:org.apache.spark.api.java.function.Function3[R,org.apache.spark.api.java.JavaPairRDD[K2,V2],org.apache.spark.streaming.Time,org.apache.spark.api.java.JavaPairRDD[K3,V3]]):org.apache.spark.streaming.api.java.JavaPairDStream[K3,V3]", "kind" : "def"}, {"label" : "transformWith", "tail" : "(other: JavaPairDStream[K2, V2], transformFunc: Function3[R, JavaPairRDD[K2, V2], Time, JavaRDD[W]]): JavaDStream[W]", "member" : "org.apache.spark.streaming.api.java.JavaDStreamLike.transformWith", "link" : "org\/apache\/spark\/streaming\/api\/java\/JavaDStreamLike.html#transformWith[K2,V2,W](other:org.apache.spark.streaming.api.java.JavaPairDStream[K2,V2],transformFunc:org.apache.spark.api.java.function.Function3[R,org.apache.spark.api.java.JavaPairRDD[K2,V2],org.apache.spark.streaming.Time,org.apache.spark.api.java.JavaRDD[W]]):org.apache.spark.streaming.api.java.JavaDStream[W]", "kind" : "def"}, {"label" : "transformWithToPair", "tail" : "(other: JavaDStream[U], transformFunc: Function3[R, JavaRDD[U], Time, JavaPairRDD[K2, V2]]): JavaPairDStream[K2, V2]", "member" : "org.apache.spark.streaming.api.java.JavaDStreamLike.transformWithToPair", "link" : "org\/apache\/spark\/streaming\/api\/java\/JavaDStreamLike.html#transformWithToPair[U,K2,V2](other:org.apache.spark.streaming.api.java.JavaDStream[U],transformFunc:org.apache.spark.api.java.function.Function3[R,org.apache.spark.api.java.JavaRDD[U],org.apache.spark.streaming.Time,org.apache.spark.api.java.JavaPairRDD[K2,V2]]):org.apache.spark.streaming.api.java.JavaPairDStream[K2,V2]", "kind" : "def"}, {"label" : "transformWith", "tail" : "(other: JavaDStream[U], transformFunc: Function3[R, JavaRDD[U], Time, JavaRDD[W]]): JavaDStream[W]", "member" : "org.apache.spark.streaming.api.java.JavaDStreamLike.transformWith", "link" : "org\/apache\/spark\/streaming\/api\/java\/JavaDStreamLike.html#transformWith[U,W](other:org.apache.spark.streaming.api.java.JavaDStream[U],transformFunc:org.apache.spark.api.java.function.Function3[R,org.apache.spark.api.java.JavaRDD[U],org.apache.spark.streaming.Time,org.apache.spark.api.java.JavaRDD[W]]):org.apache.spark.streaming.api.java.JavaDStream[W]", "kind" : "def"}, {"label" : "transformToPair", "tail" : "(transformFunc: Function2[R, Time, JavaPairRDD[K2, V2]]): JavaPairDStream[K2, V2]", "member" : "org.apache.spark.streaming.api.java.JavaDStreamLike.transformToPair", "link" : "org\/apache\/spark\/streaming\/api\/java\/JavaDStreamLike.html#transformToPair[K2,V2](transformFunc:org.apache.spark.api.java.function.Function2[R,org.apache.spark.streaming.Time,org.apache.spark.api.java.JavaPairRDD[K2,V2]]):org.apache.spark.streaming.api.java.JavaPairDStream[K2,V2]", "kind" : "def"}, {"label" : "transformToPair", "tail" : "(transformFunc: Function[R, JavaPairRDD[K2, V2]]): JavaPairDStream[K2, V2]", "member" : "org.apache.spark.streaming.api.java.JavaDStreamLike.transformToPair", "link" : "org\/apache\/spark\/streaming\/api\/java\/JavaDStreamLike.html#transformToPair[K2,V2](transformFunc:org.apache.spark.api.java.function.Function[R,org.apache.spark.api.java.JavaPairRDD[K2,V2]]):org.apache.spark.streaming.api.java.JavaPairDStream[K2,V2]", "kind" : "def"}, {"label" : "transform", "tail" : "(transformFunc: Function2[R, Time, JavaRDD[U]]): JavaDStream[U]", "member" : "org.apache.spark.streaming.api.java.JavaDStreamLike.transform", "link" : "org\/apache\/spark\/streaming\/api\/java\/JavaDStreamLike.html#transform[U](transformFunc:org.apache.spark.api.java.function.Function2[R,org.apache.spark.streaming.Time,org.apache.spark.api.java.JavaRDD[U]]):org.apache.spark.streaming.api.java.JavaDStream[U]", "kind" : "def"}, {"label" : "transform", "tail" : "(transformFunc: Function[R, JavaRDD[U]]): JavaDStream[U]", "member" : "org.apache.spark.streaming.api.java.JavaDStreamLike.transform", "link" : "org\/apache\/spark\/streaming\/api\/java\/JavaDStreamLike.html#transform[U](transformFunc:org.apache.spark.api.java.function.Function[R,org.apache.spark.api.java.JavaRDD[U]]):org.apache.spark.streaming.api.java.JavaDStream[U]", "kind" : "def"}, {"label" : "foreachRDD", "tail" : "(foreachFunc: VoidFunction2[R, Time]): Unit", "member" : "org.apache.spark.streaming.api.java.JavaDStreamLike.foreachRDD", "link" : "org\/apache\/spark\/streaming\/api\/java\/JavaDStreamLike.html#foreachRDD(foreachFunc:org.apache.spark.api.java.function.VoidFunction2[R,org.apache.spark.streaming.Time]):Unit", "kind" : "def"}, {"label" : "foreachRDD", "tail" : "(foreachFunc: VoidFunction[R]): Unit", "member" : "org.apache.spark.streaming.api.java.JavaDStreamLike.foreachRDD", "link" : "org\/apache\/spark\/streaming\/api\/java\/JavaDStreamLike.html#foreachRDD(foreachFunc:org.apache.spark.api.java.function.VoidFunction[R]):Unit", "kind" : "def"}, {"label" : "slice", "tail" : "(fromTime: Time, toTime: Time): List[R]", "member" : "org.apache.spark.streaming.api.java.JavaDStreamLike.slice", "link" : "org\/apache\/spark\/streaming\/api\/java\/JavaDStreamLike.html#slice(fromTime:org.apache.spark.streaming.Time,toTime:org.apache.spark.streaming.Time):java.util.List[R]", "kind" : "def"}, {"label" : "reduceByWindow", "tail" : "(reduceFunc: Function2[T, T, T], invReduceFunc: Function2[T, T, T], windowDuration: Duration, slideDuration: Duration): JavaDStream[T]", "member" : "org.apache.spark.streaming.api.java.JavaDStreamLike.reduceByWindow", "link" : "org\/apache\/spark\/streaming\/api\/java\/JavaDStreamLike.html#reduceByWindow(reduceFunc:org.apache.spark.api.java.function.Function2[T,T,T],invReduceFunc:org.apache.spark.api.java.function.Function2[T,T,T],windowDuration:org.apache.spark.streaming.Duration,slideDuration:org.apache.spark.streaming.Duration):org.apache.spark.streaming.api.java.JavaDStream[T]", "kind" : "def"}, {"label" : "reduceByWindow", "tail" : "(reduceFunc: Function2[T, T, T], windowDuration: Duration, slideDuration: Duration): JavaDStream[T]", "member" : "org.apache.spark.streaming.api.java.JavaDStreamLike.reduceByWindow", "link" : "org\/apache\/spark\/streaming\/api\/java\/JavaDStreamLike.html#reduceByWindow(reduceFunc:org.apache.spark.api.java.function.Function2[T,T,T],windowDuration:org.apache.spark.streaming.Duration,slideDuration:org.apache.spark.streaming.Duration):org.apache.spark.streaming.api.java.JavaDStream[T]", "kind" : "def"}, {"label" : "reduce", "tail" : "(f: Function2[T, T, T]): JavaDStream[T]", "member" : "org.apache.spark.streaming.api.java.JavaDStreamLike.reduce", "link" : "org\/apache\/spark\/streaming\/api\/java\/JavaDStreamLike.html#reduce(f:org.apache.spark.api.java.function.Function2[T,T,T]):org.apache.spark.streaming.api.java.JavaDStream[T]", "kind" : "def"}, {"label" : "mapPartitionsToPair", "tail" : "(f: PairFlatMapFunction[Iterator[T], K2, V2]): JavaPairDStream[K2, V2]", "member" : "org.apache.spark.streaming.api.java.JavaDStreamLike.mapPartitionsToPair", "link" : "org\/apache\/spark\/streaming\/api\/java\/JavaDStreamLike.html#mapPartitionsToPair[K2,V2](f:org.apache.spark.api.java.function.PairFlatMapFunction[java.util.Iterator[T],K2,V2]):org.apache.spark.streaming.api.java.JavaPairDStream[K2,V2]", "kind" : "def"}, {"label" : "mapPartitions", "tail" : "(f: FlatMapFunction[Iterator[T], U]): JavaDStream[U]", "member" : "org.apache.spark.streaming.api.java.JavaDStreamLike.mapPartitions", "link" : "org\/apache\/spark\/streaming\/api\/java\/JavaDStreamLike.html#mapPartitions[U](f:org.apache.spark.api.java.function.FlatMapFunction[java.util.Iterator[T],U]):org.apache.spark.streaming.api.java.JavaDStream[U]", "kind" : "def"}, {"label" : "flatMapToPair", "tail" : "(f: PairFlatMapFunction[T, K2, V2]): JavaPairDStream[K2, V2]", "member" : "org.apache.spark.streaming.api.java.JavaDStreamLike.flatMapToPair", "link" : "org\/apache\/spark\/streaming\/api\/java\/JavaDStreamLike.html#flatMapToPair[K2,V2](f:org.apache.spark.api.java.function.PairFlatMapFunction[T,K2,V2]):org.apache.spark.streaming.api.java.JavaPairDStream[K2,V2]", "kind" : "def"}, {"label" : "flatMap", "tail" : "(f: FlatMapFunction[T, U]): JavaDStream[U]", "member" : "org.apache.spark.streaming.api.java.JavaDStreamLike.flatMap", "link" : "org\/apache\/spark\/streaming\/api\/java\/JavaDStreamLike.html#flatMap[U](f:org.apache.spark.api.java.function.FlatMapFunction[T,U]):org.apache.spark.streaming.api.java.JavaDStream[U]", "kind" : "def"}, {"label" : "mapToPair", "tail" : "(f: PairFunction[T, K2, V2]): JavaPairDStream[K2, V2]", "member" : "org.apache.spark.streaming.api.java.JavaDStreamLike.mapToPair", "link" : "org\/apache\/spark\/streaming\/api\/java\/JavaDStreamLike.html#mapToPair[K2,V2](f:org.apache.spark.api.java.function.PairFunction[T,K2,V2]):org.apache.spark.streaming.api.java.JavaPairDStream[K2,V2]", "kind" : "def"}, {"label" : "map", "tail" : "(f: Function[T, U]): JavaDStream[U]", "member" : "org.apache.spark.streaming.api.java.JavaDStreamLike.map", "link" : "org\/apache\/spark\/streaming\/api\/java\/JavaDStreamLike.html#map[U](f:org.apache.spark.api.java.function.Function[T,U]):org.apache.spark.streaming.api.java.JavaDStream[U]", "kind" : "def"}, {"label" : "context", "tail" : "(): StreamingContext", "member" : "org.apache.spark.streaming.api.java.JavaDStreamLike.context", "link" : "org\/apache\/spark\/streaming\/api\/java\/JavaDStreamLike.html#context():org.apache.spark.streaming.StreamingContext", "kind" : "def"}, {"label" : "glom", "tail" : "(): JavaDStream[List[T]]", "member" : "org.apache.spark.streaming.api.java.JavaDStreamLike.glom", "link" : "org\/apache\/spark\/streaming\/api\/java\/JavaDStreamLike.html#glom():org.apache.spark.streaming.api.java.JavaDStream[java.util.List[T]]", "kind" : "def"}, {"label" : "countByValueAndWindow", "tail" : "(windowDuration: Duration, slideDuration: Duration, numPartitions: Int): JavaPairDStream[T, Long]", "member" : "org.apache.spark.streaming.api.java.JavaDStreamLike.countByValueAndWindow", "link" : "org\/apache\/spark\/streaming\/api\/java\/JavaDStreamLike.html#countByValueAndWindow(windowDuration:org.apache.spark.streaming.Duration,slideDuration:org.apache.spark.streaming.Duration,numPartitions:Int):org.apache.spark.streaming.api.java.JavaPairDStream[T,Long]", "kind" : "def"}, {"label" : "countByValueAndWindow", "tail" : "(windowDuration: Duration, slideDuration: Duration): JavaPairDStream[T, Long]", "member" : "org.apache.spark.streaming.api.java.JavaDStreamLike.countByValueAndWindow", "link" : "org\/apache\/spark\/streaming\/api\/java\/JavaDStreamLike.html#countByValueAndWindow(windowDuration:org.apache.spark.streaming.Duration,slideDuration:org.apache.spark.streaming.Duration):org.apache.spark.streaming.api.java.JavaPairDStream[T,Long]", "kind" : "def"}, {"label" : "countByWindow", "tail" : "(windowDuration: Duration, slideDuration: Duration): JavaDStream[Long]", "member" : "org.apache.spark.streaming.api.java.JavaDStreamLike.countByWindow", "link" : "org\/apache\/spark\/streaming\/api\/java\/JavaDStreamLike.html#countByWindow(windowDuration:org.apache.spark.streaming.Duration,slideDuration:org.apache.spark.streaming.Duration):org.apache.spark.streaming.api.java.JavaDStream[Long]", "kind" : "def"}, {"label" : "countByValue", "tail" : "(numPartitions: Int): JavaPairDStream[T, Long]", "member" : "org.apache.spark.streaming.api.java.JavaDStreamLike.countByValue", "link" : "org\/apache\/spark\/streaming\/api\/java\/JavaDStreamLike.html#countByValue(numPartitions:Int):org.apache.spark.streaming.api.java.JavaPairDStream[T,Long]", "kind" : "def"}, {"label" : "countByValue", "tail" : "(): JavaPairDStream[T, Long]", "member" : "org.apache.spark.streaming.api.java.JavaDStreamLike.countByValue", "link" : "org\/apache\/spark\/streaming\/api\/java\/JavaDStreamLike.html#countByValue():org.apache.spark.streaming.api.java.JavaPairDStream[T,Long]", "kind" : "def"}, {"label" : "count", "tail" : "(): JavaDStream[Long]", "member" : "org.apache.spark.streaming.api.java.JavaDStreamLike.count", "link" : "org\/apache\/spark\/streaming\/api\/java\/JavaDStreamLike.html#count():org.apache.spark.streaming.api.java.JavaDStream[Long]", "kind" : "def"}, {"label" : "print", "tail" : "(num: Int): Unit", "member" : "org.apache.spark.streaming.api.java.JavaDStreamLike.print", "link" : "org\/apache\/spark\/streaming\/api\/java\/JavaDStreamLike.html#print(num:Int):Unit", "kind" : "def"}, {"label" : "print", "tail" : "(): Unit", "member" : "org.apache.spark.streaming.api.java.JavaDStreamLike.print", "link" : "org\/apache\/spark\/streaming\/api\/java\/JavaDStreamLike.html#print():Unit", "kind" : "def"}, {"label" : "scalaIntToJavaLong", "tail" : "(in: DStream[Long]): JavaDStream[Long]", "member" : "org.apache.spark.streaming.api.java.JavaDStreamLike.scalaIntToJavaLong", "link" : "org\/apache\/spark\/streaming\/api\/java\/JavaDStreamLike.html#scalaIntToJavaLong(in:org.apache.spark.streaming.dstream.DStream[Long]):org.apache.spark.streaming.api.java.JavaDStream[Long]", "kind" : "implicit def"}, {"label" : "synchronized", "tail" : "(arg0: ⇒ T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "org\/apache\/spark\/streaming\/api\/java\/JavaDStreamLike.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "org\/apache\/spark\/streaming\/api\/java\/JavaDStreamLike.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "org\/apache\/spark\/streaming\/api\/java\/JavaDStreamLike.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "org\/apache\/spark\/streaming\/api\/java\/JavaDStreamLike.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "org\/apache\/spark\/streaming\/api\/java\/JavaDStreamLike.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "org\/apache\/spark\/streaming\/api\/java\/JavaDStreamLike.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "org\/apache\/spark\/streaming\/api\/java\/JavaDStreamLike.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "org\/apache\/spark\/streaming\/api\/java\/JavaDStreamLike.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "org\/apache\/spark\/streaming\/api\/java\/JavaDStreamLike.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "org\/apache\/spark\/streaming\/api\/java\/JavaDStreamLike.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "org\/apache\/spark\/streaming\/api\/java\/JavaDStreamLike.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "org\/apache\/spark\/streaming\/api\/java\/JavaDStreamLike.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "org\/apache\/spark\/streaming\/api\/java\/JavaDStreamLike.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "org\/apache\/spark\/streaming\/api\/java\/JavaDStreamLike.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.equals", "link" : "org\/apache\/spark\/streaming\/api\/java\/JavaDStreamLike.html#equals(x$1:Any):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "org\/apache\/spark\/streaming\/api\/java\/JavaDStreamLike.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_]", "member" : "scala.AnyRef.getClass", "link" : "org\/apache\/spark\/streaming\/api\/java\/JavaDStreamLike.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "org\/apache\/spark\/streaming\/api\/java\/JavaDStreamLike.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "org\/apache\/spark\/streaming\/api\/java\/JavaDStreamLike.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}, {"label" : "wrapRDD", "tail" : "(in: RDD[T]): R", "member" : "org.apache.spark.streaming.api.java.JavaDStreamLike.wrapRDD", "link" : "org\/apache\/spark\/streaming\/api\/java\/JavaDStreamLike.html#wrapRDD(in:org.apache.spark.rdd.RDD[T]):R", "kind" : "abstract def"}, {"label" : "dstream", "tail" : "(): DStream[T]", "member" : "org.apache.spark.streaming.api.java.JavaDStreamLike.dstream", "link" : "org\/apache\/spark\/streaming\/api\/java\/JavaDStreamLike.html#dstream:org.apache.spark.streaming.dstream.DStream[T]", "kind" : "abstract def"}, {"label" : "classTag", "tail" : ": ClassTag[T]", "member" : "org.apache.spark.streaming.api.java.JavaDStreamLike.classTag", "link" : "org\/apache\/spark\/streaming\/api\/java\/JavaDStreamLike.html#classTag:scala.reflect.ClassTag[T]", "kind" : "implicit abstract val"}], "shortDescription" : "", "trait" : "org\/apache\/spark\/streaming\/api\/java\/JavaDStreamLike.html", "kind" : "trait"}, {"name" : "org.apache.spark.streaming.api.java.JavaInputDStream", "shortDescription" : "A Java-friendly interface to org.apache.spark.streaming.dstream.InputDStream.", "object" : "org\/apache\/spark\/streaming\/api\/java\/JavaInputDStream$.html", "members_class" : [{"member" : "org.apache.spark.streaming.api.java.JavaInputDStream#<init>", "error" : "unsupported entity"}, {"label" : "classTag", "tail" : ": ClassTag[T]", "member" : "org.apache.spark.streaming.api.java.JavaInputDStream.classTag", "link" : "org\/apache\/spark\/streaming\/api\/java\/JavaInputDStream.html#classTag:scala.reflect.ClassTag[T]", "kind" : "implicit val"}, {"label" : "inputDStream", "tail" : ": InputDStream[T]", "member" : "org.apache.spark.streaming.api.java.JavaInputDStream.inputDStream", "link" : "org\/apache\/spark\/streaming\/api\/java\/JavaInputDStream.html#inputDStream:org.apache.spark.streaming.dstream.InputDStream[T]", "kind" : "val"}, {"label" : "repartition", "tail" : "(numPartitions: Int): JavaDStream[T]", "member" : "org.apache.spark.streaming.api.java.JavaDStream.repartition", "link" : "org\/apache\/spark\/streaming\/api\/java\/JavaInputDStream.html#repartition(numPartitions:Int):org.apache.spark.streaming.api.java.JavaDStream[T]", "kind" : "def"}, {"label" : "union", "tail" : "(that: JavaDStream[T]): JavaDStream[T]", "member" : "org.apache.spark.streaming.api.java.JavaDStream.union", "link" : "org\/apache\/spark\/streaming\/api\/java\/JavaInputDStream.html#union(that:org.apache.spark.streaming.api.java.JavaDStream[T]):org.apache.spark.streaming.api.java.JavaDStream[T]", "kind" : "def"}, {"label" : "window", "tail" : "(windowDuration: Duration, slideDuration: Duration): JavaDStream[T]", "member" : "org.apache.spark.streaming.api.java.JavaDStream.window", "link" : "org\/apache\/spark\/streaming\/api\/java\/JavaInputDStream.html#window(windowDuration:org.apache.spark.streaming.Duration,slideDuration:org.apache.spark.streaming.Duration):org.apache.spark.streaming.api.java.JavaDStream[T]", "kind" : "def"}, {"label" : "window", "tail" : "(windowDuration: Duration): JavaDStream[T]", "member" : "org.apache.spark.streaming.api.java.JavaDStream.window", "link" : "org\/apache\/spark\/streaming\/api\/java\/JavaInputDStream.html#window(windowDuration:org.apache.spark.streaming.Duration):org.apache.spark.streaming.api.java.JavaDStream[T]", "kind" : "def"}, {"label" : "compute", "tail" : "(validTime: Time): JavaRDD[T]", "member" : "org.apache.spark.streaming.api.java.JavaDStream.compute", "link" : "org\/apache\/spark\/streaming\/api\/java\/JavaInputDStream.html#compute(validTime:org.apache.spark.streaming.Time):org.apache.spark.api.java.JavaRDD[T]", "kind" : "def"}, {"label" : "persist", "tail" : "(storageLevel: StorageLevel): JavaDStream[T]", "member" : "org.apache.spark.streaming.api.java.JavaDStream.persist", "link" : "org\/apache\/spark\/streaming\/api\/java\/JavaInputDStream.html#persist(storageLevel:org.apache.spark.storage.StorageLevel):org.apache.spark.streaming.api.java.JavaDStream[T]", "kind" : "def"}, {"label" : "persist", "tail" : "(): JavaDStream[T]", "member" : "org.apache.spark.streaming.api.java.JavaDStream.persist", "link" : "org\/apache\/spark\/streaming\/api\/java\/JavaInputDStream.html#persist():org.apache.spark.streaming.api.java.JavaDStream[T]", "kind" : "def"}, {"label" : "cache", "tail" : "(): JavaDStream[T]", "member" : "org.apache.spark.streaming.api.java.JavaDStream.cache", "link" : "org\/apache\/spark\/streaming\/api\/java\/JavaInputDStream.html#cache():org.apache.spark.streaming.api.java.JavaDStream[T]", "kind" : "def"}, {"label" : "filter", "tail" : "(f: Function[T, Boolean]): JavaDStream[T]", "member" : "org.apache.spark.streaming.api.java.JavaDStream.filter", "link" : "org\/apache\/spark\/streaming\/api\/java\/JavaInputDStream.html#filter(f:org.apache.spark.api.java.function.Function[T,Boolean]):org.apache.spark.streaming.api.java.JavaDStream[T]", "kind" : "def"}, {"label" : "wrapRDD", "tail" : "(rdd: RDD[T]): JavaRDD[T]", "member" : "org.apache.spark.streaming.api.java.JavaDStream.wrapRDD", "link" : "org\/apache\/spark\/streaming\/api\/java\/JavaInputDStream.html#wrapRDD(rdd:org.apache.spark.rdd.RDD[T]):org.apache.spark.api.java.JavaRDD[T]", "kind" : "def"}, {"label" : "dstream", "tail" : ": DStream[T]", "member" : "org.apache.spark.streaming.api.java.JavaDStream.dstream", "link" : "org\/apache\/spark\/streaming\/api\/java\/JavaInputDStream.html#dstream:org.apache.spark.streaming.dstream.DStream[T]", "kind" : "val"}, {"label" : "checkpoint", "tail" : "(interval: Duration): DStream[T]", "member" : "org.apache.spark.streaming.api.java.JavaDStreamLike.checkpoint", "link" : "org\/apache\/spark\/streaming\/api\/java\/JavaInputDStream.html#checkpoint(interval:org.apache.spark.streaming.Duration):org.apache.spark.streaming.dstream.DStream[T]", "kind" : "def"}, {"label" : "transformWithToPair", "tail" : "(other: JavaPairDStream[K2, V2], transformFunc: Function3[JavaRDD[T], JavaPairRDD[K2, V2], Time, JavaPairRDD[K3, V3]]): JavaPairDStream[K3, V3]", "member" : "org.apache.spark.streaming.api.java.JavaDStreamLike.transformWithToPair", "link" : "org\/apache\/spark\/streaming\/api\/java\/JavaInputDStream.html#transformWithToPair[K2,V2,K3,V3](other:org.apache.spark.streaming.api.java.JavaPairDStream[K2,V2],transformFunc:org.apache.spark.api.java.function.Function3[R,org.apache.spark.api.java.JavaPairRDD[K2,V2],org.apache.spark.streaming.Time,org.apache.spark.api.java.JavaPairRDD[K3,V3]]):org.apache.spark.streaming.api.java.JavaPairDStream[K3,V3]", "kind" : "def"}, {"label" : "transformWith", "tail" : "(other: JavaPairDStream[K2, V2], transformFunc: Function3[JavaRDD[T], JavaPairRDD[K2, V2], Time, JavaRDD[W]]): JavaDStream[W]", "member" : "org.apache.spark.streaming.api.java.JavaDStreamLike.transformWith", "link" : "org\/apache\/spark\/streaming\/api\/java\/JavaInputDStream.html#transformWith[K2,V2,W](other:org.apache.spark.streaming.api.java.JavaPairDStream[K2,V2],transformFunc:org.apache.spark.api.java.function.Function3[R,org.apache.spark.api.java.JavaPairRDD[K2,V2],org.apache.spark.streaming.Time,org.apache.spark.api.java.JavaRDD[W]]):org.apache.spark.streaming.api.java.JavaDStream[W]", "kind" : "def"}, {"label" : "transformWithToPair", "tail" : "(other: JavaDStream[U], transformFunc: Function3[JavaRDD[T], JavaRDD[U], Time, JavaPairRDD[K2, V2]]): JavaPairDStream[K2, V2]", "member" : "org.apache.spark.streaming.api.java.JavaDStreamLike.transformWithToPair", "link" : "org\/apache\/spark\/streaming\/api\/java\/JavaInputDStream.html#transformWithToPair[U,K2,V2](other:org.apache.spark.streaming.api.java.JavaDStream[U],transformFunc:org.apache.spark.api.java.function.Function3[R,org.apache.spark.api.java.JavaRDD[U],org.apache.spark.streaming.Time,org.apache.spark.api.java.JavaPairRDD[K2,V2]]):org.apache.spark.streaming.api.java.JavaPairDStream[K2,V2]", "kind" : "def"}, {"label" : "transformWith", "tail" : "(other: JavaDStream[U], transformFunc: Function3[JavaRDD[T], JavaRDD[U], Time, JavaRDD[W]]): JavaDStream[W]", "member" : "org.apache.spark.streaming.api.java.JavaDStreamLike.transformWith", "link" : "org\/apache\/spark\/streaming\/api\/java\/JavaInputDStream.html#transformWith[U,W](other:org.apache.spark.streaming.api.java.JavaDStream[U],transformFunc:org.apache.spark.api.java.function.Function3[R,org.apache.spark.api.java.JavaRDD[U],org.apache.spark.streaming.Time,org.apache.spark.api.java.JavaRDD[W]]):org.apache.spark.streaming.api.java.JavaDStream[W]", "kind" : "def"}, {"label" : "transformToPair", "tail" : "(transformFunc: Function2[JavaRDD[T], Time, JavaPairRDD[K2, V2]]): JavaPairDStream[K2, V2]", "member" : "org.apache.spark.streaming.api.java.JavaDStreamLike.transformToPair", "link" : "org\/apache\/spark\/streaming\/api\/java\/JavaInputDStream.html#transformToPair[K2,V2](transformFunc:org.apache.spark.api.java.function.Function2[R,org.apache.spark.streaming.Time,org.apache.spark.api.java.JavaPairRDD[K2,V2]]):org.apache.spark.streaming.api.java.JavaPairDStream[K2,V2]", "kind" : "def"}, {"label" : "transformToPair", "tail" : "(transformFunc: Function[JavaRDD[T], JavaPairRDD[K2, V2]]): JavaPairDStream[K2, V2]", "member" : "org.apache.spark.streaming.api.java.JavaDStreamLike.transformToPair", "link" : "org\/apache\/spark\/streaming\/api\/java\/JavaInputDStream.html#transformToPair[K2,V2](transformFunc:org.apache.spark.api.java.function.Function[R,org.apache.spark.api.java.JavaPairRDD[K2,V2]]):org.apache.spark.streaming.api.java.JavaPairDStream[K2,V2]", "kind" : "def"}, {"label" : "transform", "tail" : "(transformFunc: Function2[JavaRDD[T], Time, JavaRDD[U]]): JavaDStream[U]", "member" : "org.apache.spark.streaming.api.java.JavaDStreamLike.transform", "link" : "org\/apache\/spark\/streaming\/api\/java\/JavaInputDStream.html#transform[U](transformFunc:org.apache.spark.api.java.function.Function2[R,org.apache.spark.streaming.Time,org.apache.spark.api.java.JavaRDD[U]]):org.apache.spark.streaming.api.java.JavaDStream[U]", "kind" : "def"}, {"label" : "transform", "tail" : "(transformFunc: Function[JavaRDD[T], JavaRDD[U]]): JavaDStream[U]", "member" : "org.apache.spark.streaming.api.java.JavaDStreamLike.transform", "link" : "org\/apache\/spark\/streaming\/api\/java\/JavaInputDStream.html#transform[U](transformFunc:org.apache.spark.api.java.function.Function[R,org.apache.spark.api.java.JavaRDD[U]]):org.apache.spark.streaming.api.java.JavaDStream[U]", "kind" : "def"}, {"label" : "foreachRDD", "tail" : "(foreachFunc: VoidFunction2[JavaRDD[T], Time]): Unit", "member" : "org.apache.spark.streaming.api.java.JavaDStreamLike.foreachRDD", "link" : "org\/apache\/spark\/streaming\/api\/java\/JavaInputDStream.html#foreachRDD(foreachFunc:org.apache.spark.api.java.function.VoidFunction2[R,org.apache.spark.streaming.Time]):Unit", "kind" : "def"}, {"label" : "foreachRDD", "tail" : "(foreachFunc: VoidFunction[JavaRDD[T]]): Unit", "member" : "org.apache.spark.streaming.api.java.JavaDStreamLike.foreachRDD", "link" : "org\/apache\/spark\/streaming\/api\/java\/JavaInputDStream.html#foreachRDD(foreachFunc:org.apache.spark.api.java.function.VoidFunction[R]):Unit", "kind" : "def"}, {"label" : "slice", "tail" : "(fromTime: Time, toTime: Time): List[JavaRDD[T]]", "member" : "org.apache.spark.streaming.api.java.JavaDStreamLike.slice", "link" : "org\/apache\/spark\/streaming\/api\/java\/JavaInputDStream.html#slice(fromTime:org.apache.spark.streaming.Time,toTime:org.apache.spark.streaming.Time):java.util.List[R]", "kind" : "def"}, {"label" : "reduceByWindow", "tail" : "(reduceFunc: Function2[T, T, T], invReduceFunc: Function2[T, T, T], windowDuration: Duration, slideDuration: Duration): JavaDStream[T]", "member" : "org.apache.spark.streaming.api.java.JavaDStreamLike.reduceByWindow", "link" : "org\/apache\/spark\/streaming\/api\/java\/JavaInputDStream.html#reduceByWindow(reduceFunc:org.apache.spark.api.java.function.Function2[T,T,T],invReduceFunc:org.apache.spark.api.java.function.Function2[T,T,T],windowDuration:org.apache.spark.streaming.Duration,slideDuration:org.apache.spark.streaming.Duration):org.apache.spark.streaming.api.java.JavaDStream[T]", "kind" : "def"}, {"label" : "reduceByWindow", "tail" : "(reduceFunc: Function2[T, T, T], windowDuration: Duration, slideDuration: Duration): JavaDStream[T]", "member" : "org.apache.spark.streaming.api.java.JavaDStreamLike.reduceByWindow", "link" : "org\/apache\/spark\/streaming\/api\/java\/JavaInputDStream.html#reduceByWindow(reduceFunc:org.apache.spark.api.java.function.Function2[T,T,T],windowDuration:org.apache.spark.streaming.Duration,slideDuration:org.apache.spark.streaming.Duration):org.apache.spark.streaming.api.java.JavaDStream[T]", "kind" : "def"}, {"label" : "reduce", "tail" : "(f: Function2[T, T, T]): JavaDStream[T]", "member" : "org.apache.spark.streaming.api.java.JavaDStreamLike.reduce", "link" : "org\/apache\/spark\/streaming\/api\/java\/JavaInputDStream.html#reduce(f:org.apache.spark.api.java.function.Function2[T,T,T]):org.apache.spark.streaming.api.java.JavaDStream[T]", "kind" : "def"}, {"label" : "mapPartitionsToPair", "tail" : "(f: PairFlatMapFunction[Iterator[T], K2, V2]): JavaPairDStream[K2, V2]", "member" : "org.apache.spark.streaming.api.java.JavaDStreamLike.mapPartitionsToPair", "link" : "org\/apache\/spark\/streaming\/api\/java\/JavaInputDStream.html#mapPartitionsToPair[K2,V2](f:org.apache.spark.api.java.function.PairFlatMapFunction[java.util.Iterator[T],K2,V2]):org.apache.spark.streaming.api.java.JavaPairDStream[K2,V2]", "kind" : "def"}, {"label" : "mapPartitions", "tail" : "(f: FlatMapFunction[Iterator[T], U]): JavaDStream[U]", "member" : "org.apache.spark.streaming.api.java.JavaDStreamLike.mapPartitions", "link" : "org\/apache\/spark\/streaming\/api\/java\/JavaInputDStream.html#mapPartitions[U](f:org.apache.spark.api.java.function.FlatMapFunction[java.util.Iterator[T],U]):org.apache.spark.streaming.api.java.JavaDStream[U]", "kind" : "def"}, {"label" : "flatMapToPair", "tail" : "(f: PairFlatMapFunction[T, K2, V2]): JavaPairDStream[K2, V2]", "member" : "org.apache.spark.streaming.api.java.JavaDStreamLike.flatMapToPair", "link" : "org\/apache\/spark\/streaming\/api\/java\/JavaInputDStream.html#flatMapToPair[K2,V2](f:org.apache.spark.api.java.function.PairFlatMapFunction[T,K2,V2]):org.apache.spark.streaming.api.java.JavaPairDStream[K2,V2]", "kind" : "def"}, {"label" : "flatMap", "tail" : "(f: FlatMapFunction[T, U]): JavaDStream[U]", "member" : "org.apache.spark.streaming.api.java.JavaDStreamLike.flatMap", "link" : "org\/apache\/spark\/streaming\/api\/java\/JavaInputDStream.html#flatMap[U](f:org.apache.spark.api.java.function.FlatMapFunction[T,U]):org.apache.spark.streaming.api.java.JavaDStream[U]", "kind" : "def"}, {"label" : "mapToPair", "tail" : "(f: PairFunction[T, K2, V2]): JavaPairDStream[K2, V2]", "member" : "org.apache.spark.streaming.api.java.JavaDStreamLike.mapToPair", "link" : "org\/apache\/spark\/streaming\/api\/java\/JavaInputDStream.html#mapToPair[K2,V2](f:org.apache.spark.api.java.function.PairFunction[T,K2,V2]):org.apache.spark.streaming.api.java.JavaPairDStream[K2,V2]", "kind" : "def"}, {"label" : "map", "tail" : "(f: Function[T, U]): JavaDStream[U]", "member" : "org.apache.spark.streaming.api.java.JavaDStreamLike.map", "link" : "org\/apache\/spark\/streaming\/api\/java\/JavaInputDStream.html#map[U](f:org.apache.spark.api.java.function.Function[T,U]):org.apache.spark.streaming.api.java.JavaDStream[U]", "kind" : "def"}, {"label" : "context", "tail" : "(): StreamingContext", "member" : "org.apache.spark.streaming.api.java.JavaDStreamLike.context", "link" : "org\/apache\/spark\/streaming\/api\/java\/JavaInputDStream.html#context():org.apache.spark.streaming.StreamingContext", "kind" : "def"}, {"label" : "glom", "tail" : "(): JavaDStream[List[T]]", "member" : "org.apache.spark.streaming.api.java.JavaDStreamLike.glom", "link" : "org\/apache\/spark\/streaming\/api\/java\/JavaInputDStream.html#glom():org.apache.spark.streaming.api.java.JavaDStream[java.util.List[T]]", "kind" : "def"}, {"label" : "countByValueAndWindow", "tail" : "(windowDuration: Duration, slideDuration: Duration, numPartitions: Int): JavaPairDStream[T, Long]", "member" : "org.apache.spark.streaming.api.java.JavaDStreamLike.countByValueAndWindow", "link" : "org\/apache\/spark\/streaming\/api\/java\/JavaInputDStream.html#countByValueAndWindow(windowDuration:org.apache.spark.streaming.Duration,slideDuration:org.apache.spark.streaming.Duration,numPartitions:Int):org.apache.spark.streaming.api.java.JavaPairDStream[T,Long]", "kind" : "def"}, {"label" : "countByValueAndWindow", "tail" : "(windowDuration: Duration, slideDuration: Duration): JavaPairDStream[T, Long]", "member" : "org.apache.spark.streaming.api.java.JavaDStreamLike.countByValueAndWindow", "link" : "org\/apache\/spark\/streaming\/api\/java\/JavaInputDStream.html#countByValueAndWindow(windowDuration:org.apache.spark.streaming.Duration,slideDuration:org.apache.spark.streaming.Duration):org.apache.spark.streaming.api.java.JavaPairDStream[T,Long]", "kind" : "def"}, {"label" : "countByWindow", "tail" : "(windowDuration: Duration, slideDuration: Duration): JavaDStream[Long]", "member" : "org.apache.spark.streaming.api.java.JavaDStreamLike.countByWindow", "link" : "org\/apache\/spark\/streaming\/api\/java\/JavaInputDStream.html#countByWindow(windowDuration:org.apache.spark.streaming.Duration,slideDuration:org.apache.spark.streaming.Duration):org.apache.spark.streaming.api.java.JavaDStream[Long]", "kind" : "def"}, {"label" : "countByValue", "tail" : "(numPartitions: Int): JavaPairDStream[T, Long]", "member" : "org.apache.spark.streaming.api.java.JavaDStreamLike.countByValue", "link" : "org\/apache\/spark\/streaming\/api\/java\/JavaInputDStream.html#countByValue(numPartitions:Int):org.apache.spark.streaming.api.java.JavaPairDStream[T,Long]", "kind" : "def"}, {"label" : "countByValue", "tail" : "(): JavaPairDStream[T, Long]", "member" : "org.apache.spark.streaming.api.java.JavaDStreamLike.countByValue", "link" : "org\/apache\/spark\/streaming\/api\/java\/JavaInputDStream.html#countByValue():org.apache.spark.streaming.api.java.JavaPairDStream[T,Long]", "kind" : "def"}, {"label" : "count", "tail" : "(): JavaDStream[Long]", "member" : "org.apache.spark.streaming.api.java.JavaDStreamLike.count", "link" : "org\/apache\/spark\/streaming\/api\/java\/JavaInputDStream.html#count():org.apache.spark.streaming.api.java.JavaDStream[Long]", "kind" : "def"}, {"label" : "print", "tail" : "(num: Int): Unit", "member" : "org.apache.spark.streaming.api.java.JavaDStreamLike.print", "link" : "org\/apache\/spark\/streaming\/api\/java\/JavaInputDStream.html#print(num:Int):Unit", "kind" : "def"}, {"label" : "print", "tail" : "(): Unit", "member" : "org.apache.spark.streaming.api.java.JavaDStreamLike.print", "link" : "org\/apache\/spark\/streaming\/api\/java\/JavaInputDStream.html#print():Unit", "kind" : "def"}, {"label" : "scalaIntToJavaLong", "tail" : "(in: DStream[Long]): JavaDStream[Long]", "member" : "org.apache.spark.streaming.api.java.JavaDStreamLike.scalaIntToJavaLong", "link" : "org\/apache\/spark\/streaming\/api\/java\/JavaInputDStream.html#scalaIntToJavaLong(in:org.apache.spark.streaming.dstream.DStream[Long]):org.apache.spark.streaming.api.java.JavaDStream[Long]", "kind" : "implicit def"}, {"label" : "synchronized", "tail" : "(arg0: ⇒ T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "org\/apache\/spark\/streaming\/api\/java\/JavaInputDStream.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "org\/apache\/spark\/streaming\/api\/java\/JavaInputDStream.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "org\/apache\/spark\/streaming\/api\/java\/JavaInputDStream.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "org\/apache\/spark\/streaming\/api\/java\/JavaInputDStream.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "org\/apache\/spark\/streaming\/api\/java\/JavaInputDStream.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "org\/apache\/spark\/streaming\/api\/java\/JavaInputDStream.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "org\/apache\/spark\/streaming\/api\/java\/JavaInputDStream.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "org\/apache\/spark\/streaming\/api\/java\/JavaInputDStream.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "org\/apache\/spark\/streaming\/api\/java\/JavaInputDStream.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "org\/apache\/spark\/streaming\/api\/java\/JavaInputDStream.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "org\/apache\/spark\/streaming\/api\/java\/JavaInputDStream.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "org\/apache\/spark\/streaming\/api\/java\/JavaInputDStream.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "org\/apache\/spark\/streaming\/api\/java\/JavaInputDStream.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "org\/apache\/spark\/streaming\/api\/java\/JavaInputDStream.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.equals", "link" : "org\/apache\/spark\/streaming\/api\/java\/JavaInputDStream.html#equals(x$1:Any):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "org\/apache\/spark\/streaming\/api\/java\/JavaInputDStream.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_]", "member" : "scala.AnyRef.getClass", "link" : "org\/apache\/spark\/streaming\/api\/java\/JavaInputDStream.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "org\/apache\/spark\/streaming\/api\/java\/JavaInputDStream.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "org\/apache\/spark\/streaming\/api\/java\/JavaInputDStream.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "members_object" : [{"label" : "fromInputDStream", "tail" : "(inputDStream: InputDStream[T])(arg0: ClassTag[T]): JavaInputDStream[T]", "member" : "org.apache.spark.streaming.api.java.JavaInputDStream.fromInputDStream", "link" : "org\/apache\/spark\/streaming\/api\/java\/JavaInputDStream$.html#fromInputDStream[T](inputDStream:org.apache.spark.streaming.dstream.InputDStream[T])(implicitevidence$1:scala.reflect.ClassTag[T]):org.apache.spark.streaming.api.java.JavaInputDStream[T]", "kind" : "implicit def"}, {"label" : "synchronized", "tail" : "(arg0: ⇒ T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "org\/apache\/spark\/streaming\/api\/java\/JavaInputDStream$.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "org\/apache\/spark\/streaming\/api\/java\/JavaInputDStream$.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "org\/apache\/spark\/streaming\/api\/java\/JavaInputDStream$.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "org\/apache\/spark\/streaming\/api\/java\/JavaInputDStream$.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "org\/apache\/spark\/streaming\/api\/java\/JavaInputDStream$.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "org\/apache\/spark\/streaming\/api\/java\/JavaInputDStream$.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "org\/apache\/spark\/streaming\/api\/java\/JavaInputDStream$.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "org\/apache\/spark\/streaming\/api\/java\/JavaInputDStream$.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "org\/apache\/spark\/streaming\/api\/java\/JavaInputDStream$.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "org\/apache\/spark\/streaming\/api\/java\/JavaInputDStream$.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "org\/apache\/spark\/streaming\/api\/java\/JavaInputDStream$.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "org\/apache\/spark\/streaming\/api\/java\/JavaInputDStream$.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "org\/apache\/spark\/streaming\/api\/java\/JavaInputDStream$.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "org\/apache\/spark\/streaming\/api\/java\/JavaInputDStream$.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.equals", "link" : "org\/apache\/spark\/streaming\/api\/java\/JavaInputDStream$.html#equals(x$1:Any):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "org\/apache\/spark\/streaming\/api\/java\/JavaInputDStream$.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_]", "member" : "scala.AnyRef.getClass", "link" : "org\/apache\/spark\/streaming\/api\/java\/JavaInputDStream$.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "org\/apache\/spark\/streaming\/api\/java\/JavaInputDStream$.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "org\/apache\/spark\/streaming\/api\/java\/JavaInputDStream$.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "class" : "org\/apache\/spark\/streaming\/api\/java\/JavaInputDStream.html", "kind" : "class"}, {"name" : "org.apache.spark.streaming.api.java.JavaMapWithStateDStream", "shortDescription" : "DStream representing the stream of data generated by mapWithState operation on aJavaPairDStream.", "members_class" : [{"label" : "stateSnapshots", "tail" : "(): JavaPairDStream[KeyType, StateType]", "member" : "org.apache.spark.streaming.api.java.JavaMapWithStateDStream.stateSnapshots", "link" : "org\/apache\/spark\/streaming\/api\/java\/JavaMapWithStateDStream.html#stateSnapshots():org.apache.spark.streaming.api.java.JavaPairDStream[KeyType,StateType]", "kind" : "def"}, {"label" : "repartition", "tail" : "(numPartitions: Int): JavaDStream[MappedType]", "member" : "org.apache.spark.streaming.api.java.JavaDStream.repartition", "link" : "org\/apache\/spark\/streaming\/api\/java\/JavaMapWithStateDStream.html#repartition(numPartitions:Int):org.apache.spark.streaming.api.java.JavaDStream[T]", "kind" : "def"}, {"label" : "union", "tail" : "(that: JavaDStream[MappedType]): JavaDStream[MappedType]", "member" : "org.apache.spark.streaming.api.java.JavaDStream.union", "link" : "org\/apache\/spark\/streaming\/api\/java\/JavaMapWithStateDStream.html#union(that:org.apache.spark.streaming.api.java.JavaDStream[T]):org.apache.spark.streaming.api.java.JavaDStream[T]", "kind" : "def"}, {"label" : "window", "tail" : "(windowDuration: Duration, slideDuration: Duration): JavaDStream[MappedType]", "member" : "org.apache.spark.streaming.api.java.JavaDStream.window", "link" : "org\/apache\/spark\/streaming\/api\/java\/JavaMapWithStateDStream.html#window(windowDuration:org.apache.spark.streaming.Duration,slideDuration:org.apache.spark.streaming.Duration):org.apache.spark.streaming.api.java.JavaDStream[T]", "kind" : "def"}, {"label" : "window", "tail" : "(windowDuration: Duration): JavaDStream[MappedType]", "member" : "org.apache.spark.streaming.api.java.JavaDStream.window", "link" : "org\/apache\/spark\/streaming\/api\/java\/JavaMapWithStateDStream.html#window(windowDuration:org.apache.spark.streaming.Duration):org.apache.spark.streaming.api.java.JavaDStream[T]", "kind" : "def"}, {"label" : "compute", "tail" : "(validTime: Time): JavaRDD[MappedType]", "member" : "org.apache.spark.streaming.api.java.JavaDStream.compute", "link" : "org\/apache\/spark\/streaming\/api\/java\/JavaMapWithStateDStream.html#compute(validTime:org.apache.spark.streaming.Time):org.apache.spark.api.java.JavaRDD[T]", "kind" : "def"}, {"label" : "persist", "tail" : "(storageLevel: StorageLevel): JavaDStream[MappedType]", "member" : "org.apache.spark.streaming.api.java.JavaDStream.persist", "link" : "org\/apache\/spark\/streaming\/api\/java\/JavaMapWithStateDStream.html#persist(storageLevel:org.apache.spark.storage.StorageLevel):org.apache.spark.streaming.api.java.JavaDStream[T]", "kind" : "def"}, {"label" : "persist", "tail" : "(): JavaDStream[MappedType]", "member" : "org.apache.spark.streaming.api.java.JavaDStream.persist", "link" : "org\/apache\/spark\/streaming\/api\/java\/JavaMapWithStateDStream.html#persist():org.apache.spark.streaming.api.java.JavaDStream[T]", "kind" : "def"}, {"label" : "cache", "tail" : "(): JavaDStream[MappedType]", "member" : "org.apache.spark.streaming.api.java.JavaDStream.cache", "link" : "org\/apache\/spark\/streaming\/api\/java\/JavaMapWithStateDStream.html#cache():org.apache.spark.streaming.api.java.JavaDStream[T]", "kind" : "def"}, {"label" : "filter", "tail" : "(f: Function[MappedType, Boolean]): JavaDStream[MappedType]", "member" : "org.apache.spark.streaming.api.java.JavaDStream.filter", "link" : "org\/apache\/spark\/streaming\/api\/java\/JavaMapWithStateDStream.html#filter(f:org.apache.spark.api.java.function.Function[T,Boolean]):org.apache.spark.streaming.api.java.JavaDStream[T]", "kind" : "def"}, {"label" : "wrapRDD", "tail" : "(rdd: RDD[MappedType]): JavaRDD[MappedType]", "member" : "org.apache.spark.streaming.api.java.JavaDStream.wrapRDD", "link" : "org\/apache\/spark\/streaming\/api\/java\/JavaMapWithStateDStream.html#wrapRDD(rdd:org.apache.spark.rdd.RDD[T]):org.apache.spark.api.java.JavaRDD[T]", "kind" : "def"}, {"label" : "classTag", "tail" : ": ClassTag[MappedType]", "member" : "org.apache.spark.streaming.api.java.JavaDStream.classTag", "link" : "org\/apache\/spark\/streaming\/api\/java\/JavaMapWithStateDStream.html#classTag:scala.reflect.ClassTag[T]", "kind" : "implicit val"}, {"label" : "dstream", "tail" : ": DStream[MappedType]", "member" : "org.apache.spark.streaming.api.java.JavaDStream.dstream", "link" : "org\/apache\/spark\/streaming\/api\/java\/JavaMapWithStateDStream.html#dstream:org.apache.spark.streaming.dstream.DStream[T]", "kind" : "val"}, {"label" : "checkpoint", "tail" : "(interval: Duration): DStream[MappedType]", "member" : "org.apache.spark.streaming.api.java.JavaDStreamLike.checkpoint", "link" : "org\/apache\/spark\/streaming\/api\/java\/JavaMapWithStateDStream.html#checkpoint(interval:org.apache.spark.streaming.Duration):org.apache.spark.streaming.dstream.DStream[T]", "kind" : "def"}, {"label" : "transformWithToPair", "tail" : "(other: JavaPairDStream[K2, V2], transformFunc: Function3[JavaRDD[MappedType], JavaPairRDD[K2, V2], Time, JavaPairRDD[K3, V3]]): JavaPairDStream[K3, V3]", "member" : "org.apache.spark.streaming.api.java.JavaDStreamLike.transformWithToPair", "link" : "org\/apache\/spark\/streaming\/api\/java\/JavaMapWithStateDStream.html#transformWithToPair[K2,V2,K3,V3](other:org.apache.spark.streaming.api.java.JavaPairDStream[K2,V2],transformFunc:org.apache.spark.api.java.function.Function3[R,org.apache.spark.api.java.JavaPairRDD[K2,V2],org.apache.spark.streaming.Time,org.apache.spark.api.java.JavaPairRDD[K3,V3]]):org.apache.spark.streaming.api.java.JavaPairDStream[K3,V3]", "kind" : "def"}, {"label" : "transformWith", "tail" : "(other: JavaPairDStream[K2, V2], transformFunc: Function3[JavaRDD[MappedType], JavaPairRDD[K2, V2], Time, JavaRDD[W]]): JavaDStream[W]", "member" : "org.apache.spark.streaming.api.java.JavaDStreamLike.transformWith", "link" : "org\/apache\/spark\/streaming\/api\/java\/JavaMapWithStateDStream.html#transformWith[K2,V2,W](other:org.apache.spark.streaming.api.java.JavaPairDStream[K2,V2],transformFunc:org.apache.spark.api.java.function.Function3[R,org.apache.spark.api.java.JavaPairRDD[K2,V2],org.apache.spark.streaming.Time,org.apache.spark.api.java.JavaRDD[W]]):org.apache.spark.streaming.api.java.JavaDStream[W]", "kind" : "def"}, {"label" : "transformWithToPair", "tail" : "(other: JavaDStream[U], transformFunc: Function3[JavaRDD[MappedType], JavaRDD[U], Time, JavaPairRDD[K2, V2]]): JavaPairDStream[K2, V2]", "member" : "org.apache.spark.streaming.api.java.JavaDStreamLike.transformWithToPair", "link" : "org\/apache\/spark\/streaming\/api\/java\/JavaMapWithStateDStream.html#transformWithToPair[U,K2,V2](other:org.apache.spark.streaming.api.java.JavaDStream[U],transformFunc:org.apache.spark.api.java.function.Function3[R,org.apache.spark.api.java.JavaRDD[U],org.apache.spark.streaming.Time,org.apache.spark.api.java.JavaPairRDD[K2,V2]]):org.apache.spark.streaming.api.java.JavaPairDStream[K2,V2]", "kind" : "def"}, {"label" : "transformWith", "tail" : "(other: JavaDStream[U], transformFunc: Function3[JavaRDD[MappedType], JavaRDD[U], Time, JavaRDD[W]]): JavaDStream[W]", "member" : "org.apache.spark.streaming.api.java.JavaDStreamLike.transformWith", "link" : "org\/apache\/spark\/streaming\/api\/java\/JavaMapWithStateDStream.html#transformWith[U,W](other:org.apache.spark.streaming.api.java.JavaDStream[U],transformFunc:org.apache.spark.api.java.function.Function3[R,org.apache.spark.api.java.JavaRDD[U],org.apache.spark.streaming.Time,org.apache.spark.api.java.JavaRDD[W]]):org.apache.spark.streaming.api.java.JavaDStream[W]", "kind" : "def"}, {"label" : "transformToPair", "tail" : "(transformFunc: Function2[JavaRDD[MappedType], Time, JavaPairRDD[K2, V2]]): JavaPairDStream[K2, V2]", "member" : "org.apache.spark.streaming.api.java.JavaDStreamLike.transformToPair", "link" : "org\/apache\/spark\/streaming\/api\/java\/JavaMapWithStateDStream.html#transformToPair[K2,V2](transformFunc:org.apache.spark.api.java.function.Function2[R,org.apache.spark.streaming.Time,org.apache.spark.api.java.JavaPairRDD[K2,V2]]):org.apache.spark.streaming.api.java.JavaPairDStream[K2,V2]", "kind" : "def"}, {"label" : "transformToPair", "tail" : "(transformFunc: Function[JavaRDD[MappedType], JavaPairRDD[K2, V2]]): JavaPairDStream[K2, V2]", "member" : "org.apache.spark.streaming.api.java.JavaDStreamLike.transformToPair", "link" : "org\/apache\/spark\/streaming\/api\/java\/JavaMapWithStateDStream.html#transformToPair[K2,V2](transformFunc:org.apache.spark.api.java.function.Function[R,org.apache.spark.api.java.JavaPairRDD[K2,V2]]):org.apache.spark.streaming.api.java.JavaPairDStream[K2,V2]", "kind" : "def"}, {"label" : "transform", "tail" : "(transformFunc: Function2[JavaRDD[MappedType], Time, JavaRDD[U]]): JavaDStream[U]", "member" : "org.apache.spark.streaming.api.java.JavaDStreamLike.transform", "link" : "org\/apache\/spark\/streaming\/api\/java\/JavaMapWithStateDStream.html#transform[U](transformFunc:org.apache.spark.api.java.function.Function2[R,org.apache.spark.streaming.Time,org.apache.spark.api.java.JavaRDD[U]]):org.apache.spark.streaming.api.java.JavaDStream[U]", "kind" : "def"}, {"label" : "transform", "tail" : "(transformFunc: Function[JavaRDD[MappedType], JavaRDD[U]]): JavaDStream[U]", "member" : "org.apache.spark.streaming.api.java.JavaDStreamLike.transform", "link" : "org\/apache\/spark\/streaming\/api\/java\/JavaMapWithStateDStream.html#transform[U](transformFunc:org.apache.spark.api.java.function.Function[R,org.apache.spark.api.java.JavaRDD[U]]):org.apache.spark.streaming.api.java.JavaDStream[U]", "kind" : "def"}, {"label" : "foreachRDD", "tail" : "(foreachFunc: VoidFunction2[JavaRDD[MappedType], Time]): Unit", "member" : "org.apache.spark.streaming.api.java.JavaDStreamLike.foreachRDD", "link" : "org\/apache\/spark\/streaming\/api\/java\/JavaMapWithStateDStream.html#foreachRDD(foreachFunc:org.apache.spark.api.java.function.VoidFunction2[R,org.apache.spark.streaming.Time]):Unit", "kind" : "def"}, {"label" : "foreachRDD", "tail" : "(foreachFunc: VoidFunction[JavaRDD[MappedType]]): Unit", "member" : "org.apache.spark.streaming.api.java.JavaDStreamLike.foreachRDD", "link" : "org\/apache\/spark\/streaming\/api\/java\/JavaMapWithStateDStream.html#foreachRDD(foreachFunc:org.apache.spark.api.java.function.VoidFunction[R]):Unit", "kind" : "def"}, {"label" : "slice", "tail" : "(fromTime: Time, toTime: Time): List[JavaRDD[MappedType]]", "member" : "org.apache.spark.streaming.api.java.JavaDStreamLike.slice", "link" : "org\/apache\/spark\/streaming\/api\/java\/JavaMapWithStateDStream.html#slice(fromTime:org.apache.spark.streaming.Time,toTime:org.apache.spark.streaming.Time):java.util.List[R]", "kind" : "def"}, {"label" : "reduceByWindow", "tail" : "(reduceFunc: Function2[MappedType, MappedType, MappedType], invReduceFunc: Function2[MappedType, MappedType, MappedType], windowDuration: Duration, slideDuration: Duration): JavaDStream[MappedType]", "member" : "org.apache.spark.streaming.api.java.JavaDStreamLike.reduceByWindow", "link" : "org\/apache\/spark\/streaming\/api\/java\/JavaMapWithStateDStream.html#reduceByWindow(reduceFunc:org.apache.spark.api.java.function.Function2[T,T,T],invReduceFunc:org.apache.spark.api.java.function.Function2[T,T,T],windowDuration:org.apache.spark.streaming.Duration,slideDuration:org.apache.spark.streaming.Duration):org.apache.spark.streaming.api.java.JavaDStream[T]", "kind" : "def"}, {"label" : "reduceByWindow", "tail" : "(reduceFunc: Function2[MappedType, MappedType, MappedType], windowDuration: Duration, slideDuration: Duration): JavaDStream[MappedType]", "member" : "org.apache.spark.streaming.api.java.JavaDStreamLike.reduceByWindow", "link" : "org\/apache\/spark\/streaming\/api\/java\/JavaMapWithStateDStream.html#reduceByWindow(reduceFunc:org.apache.spark.api.java.function.Function2[T,T,T],windowDuration:org.apache.spark.streaming.Duration,slideDuration:org.apache.spark.streaming.Duration):org.apache.spark.streaming.api.java.JavaDStream[T]", "kind" : "def"}, {"label" : "reduce", "tail" : "(f: Function2[MappedType, MappedType, MappedType]): JavaDStream[MappedType]", "member" : "org.apache.spark.streaming.api.java.JavaDStreamLike.reduce", "link" : "org\/apache\/spark\/streaming\/api\/java\/JavaMapWithStateDStream.html#reduce(f:org.apache.spark.api.java.function.Function2[T,T,T]):org.apache.spark.streaming.api.java.JavaDStream[T]", "kind" : "def"}, {"label" : "mapPartitionsToPair", "tail" : "(f: PairFlatMapFunction[Iterator[MappedType], K2, V2]): JavaPairDStream[K2, V2]", "member" : "org.apache.spark.streaming.api.java.JavaDStreamLike.mapPartitionsToPair", "link" : "org\/apache\/spark\/streaming\/api\/java\/JavaMapWithStateDStream.html#mapPartitionsToPair[K2,V2](f:org.apache.spark.api.java.function.PairFlatMapFunction[java.util.Iterator[T],K2,V2]):org.apache.spark.streaming.api.java.JavaPairDStream[K2,V2]", "kind" : "def"}, {"label" : "mapPartitions", "tail" : "(f: FlatMapFunction[Iterator[MappedType], U]): JavaDStream[U]", "member" : "org.apache.spark.streaming.api.java.JavaDStreamLike.mapPartitions", "link" : "org\/apache\/spark\/streaming\/api\/java\/JavaMapWithStateDStream.html#mapPartitions[U](f:org.apache.spark.api.java.function.FlatMapFunction[java.util.Iterator[T],U]):org.apache.spark.streaming.api.java.JavaDStream[U]", "kind" : "def"}, {"label" : "flatMapToPair", "tail" : "(f: PairFlatMapFunction[MappedType, K2, V2]): JavaPairDStream[K2, V2]", "member" : "org.apache.spark.streaming.api.java.JavaDStreamLike.flatMapToPair", "link" : "org\/apache\/spark\/streaming\/api\/java\/JavaMapWithStateDStream.html#flatMapToPair[K2,V2](f:org.apache.spark.api.java.function.PairFlatMapFunction[T,K2,V2]):org.apache.spark.streaming.api.java.JavaPairDStream[K2,V2]", "kind" : "def"}, {"label" : "flatMap", "tail" : "(f: FlatMapFunction[MappedType, U]): JavaDStream[U]", "member" : "org.apache.spark.streaming.api.java.JavaDStreamLike.flatMap", "link" : "org\/apache\/spark\/streaming\/api\/java\/JavaMapWithStateDStream.html#flatMap[U](f:org.apache.spark.api.java.function.FlatMapFunction[T,U]):org.apache.spark.streaming.api.java.JavaDStream[U]", "kind" : "def"}, {"label" : "mapToPair", "tail" : "(f: PairFunction[MappedType, K2, V2]): JavaPairDStream[K2, V2]", "member" : "org.apache.spark.streaming.api.java.JavaDStreamLike.mapToPair", "link" : "org\/apache\/spark\/streaming\/api\/java\/JavaMapWithStateDStream.html#mapToPair[K2,V2](f:org.apache.spark.api.java.function.PairFunction[T,K2,V2]):org.apache.spark.streaming.api.java.JavaPairDStream[K2,V2]", "kind" : "def"}, {"label" : "map", "tail" : "(f: Function[MappedType, U]): JavaDStream[U]", "member" : "org.apache.spark.streaming.api.java.JavaDStreamLike.map", "link" : "org\/apache\/spark\/streaming\/api\/java\/JavaMapWithStateDStream.html#map[U](f:org.apache.spark.api.java.function.Function[T,U]):org.apache.spark.streaming.api.java.JavaDStream[U]", "kind" : "def"}, {"label" : "context", "tail" : "(): StreamingContext", "member" : "org.apache.spark.streaming.api.java.JavaDStreamLike.context", "link" : "org\/apache\/spark\/streaming\/api\/java\/JavaMapWithStateDStream.html#context():org.apache.spark.streaming.StreamingContext", "kind" : "def"}, {"label" : "glom", "tail" : "(): JavaDStream[List[MappedType]]", "member" : "org.apache.spark.streaming.api.java.JavaDStreamLike.glom", "link" : "org\/apache\/spark\/streaming\/api\/java\/JavaMapWithStateDStream.html#glom():org.apache.spark.streaming.api.java.JavaDStream[java.util.List[T]]", "kind" : "def"}, {"label" : "countByValueAndWindow", "tail" : "(windowDuration: Duration, slideDuration: Duration, numPartitions: Int): JavaPairDStream[MappedType, Long]", "member" : "org.apache.spark.streaming.api.java.JavaDStreamLike.countByValueAndWindow", "link" : "org\/apache\/spark\/streaming\/api\/java\/JavaMapWithStateDStream.html#countByValueAndWindow(windowDuration:org.apache.spark.streaming.Duration,slideDuration:org.apache.spark.streaming.Duration,numPartitions:Int):org.apache.spark.streaming.api.java.JavaPairDStream[T,Long]", "kind" : "def"}, {"label" : "countByValueAndWindow", "tail" : "(windowDuration: Duration, slideDuration: Duration): JavaPairDStream[MappedType, Long]", "member" : "org.apache.spark.streaming.api.java.JavaDStreamLike.countByValueAndWindow", "link" : "org\/apache\/spark\/streaming\/api\/java\/JavaMapWithStateDStream.html#countByValueAndWindow(windowDuration:org.apache.spark.streaming.Duration,slideDuration:org.apache.spark.streaming.Duration):org.apache.spark.streaming.api.java.JavaPairDStream[T,Long]", "kind" : "def"}, {"label" : "countByWindow", "tail" : "(windowDuration: Duration, slideDuration: Duration): JavaDStream[Long]", "member" : "org.apache.spark.streaming.api.java.JavaDStreamLike.countByWindow", "link" : "org\/apache\/spark\/streaming\/api\/java\/JavaMapWithStateDStream.html#countByWindow(windowDuration:org.apache.spark.streaming.Duration,slideDuration:org.apache.spark.streaming.Duration):org.apache.spark.streaming.api.java.JavaDStream[Long]", "kind" : "def"}, {"label" : "countByValue", "tail" : "(numPartitions: Int): JavaPairDStream[MappedType, Long]", "member" : "org.apache.spark.streaming.api.java.JavaDStreamLike.countByValue", "link" : "org\/apache\/spark\/streaming\/api\/java\/JavaMapWithStateDStream.html#countByValue(numPartitions:Int):org.apache.spark.streaming.api.java.JavaPairDStream[T,Long]", "kind" : "def"}, {"label" : "countByValue", "tail" : "(): JavaPairDStream[MappedType, Long]", "member" : "org.apache.spark.streaming.api.java.JavaDStreamLike.countByValue", "link" : "org\/apache\/spark\/streaming\/api\/java\/JavaMapWithStateDStream.html#countByValue():org.apache.spark.streaming.api.java.JavaPairDStream[T,Long]", "kind" : "def"}, {"label" : "count", "tail" : "(): JavaDStream[Long]", "member" : "org.apache.spark.streaming.api.java.JavaDStreamLike.count", "link" : "org\/apache\/spark\/streaming\/api\/java\/JavaMapWithStateDStream.html#count():org.apache.spark.streaming.api.java.JavaDStream[Long]", "kind" : "def"}, {"label" : "print", "tail" : "(num: Int): Unit", "member" : "org.apache.spark.streaming.api.java.JavaDStreamLike.print", "link" : "org\/apache\/spark\/streaming\/api\/java\/JavaMapWithStateDStream.html#print(num:Int):Unit", "kind" : "def"}, {"label" : "print", "tail" : "(): Unit", "member" : "org.apache.spark.streaming.api.java.JavaDStreamLike.print", "link" : "org\/apache\/spark\/streaming\/api\/java\/JavaMapWithStateDStream.html#print():Unit", "kind" : "def"}, {"label" : "scalaIntToJavaLong", "tail" : "(in: DStream[Long]): JavaDStream[Long]", "member" : "org.apache.spark.streaming.api.java.JavaDStreamLike.scalaIntToJavaLong", "link" : "org\/apache\/spark\/streaming\/api\/java\/JavaMapWithStateDStream.html#scalaIntToJavaLong(in:org.apache.spark.streaming.dstream.DStream[Long]):org.apache.spark.streaming.api.java.JavaDStream[Long]", "kind" : "implicit def"}, {"label" : "synchronized", "tail" : "(arg0: ⇒ T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "org\/apache\/spark\/streaming\/api\/java\/JavaMapWithStateDStream.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "org\/apache\/spark\/streaming\/api\/java\/JavaMapWithStateDStream.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "org\/apache\/spark\/streaming\/api\/java\/JavaMapWithStateDStream.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "org\/apache\/spark\/streaming\/api\/java\/JavaMapWithStateDStream.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "org\/apache\/spark\/streaming\/api\/java\/JavaMapWithStateDStream.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "org\/apache\/spark\/streaming\/api\/java\/JavaMapWithStateDStream.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "org\/apache\/spark\/streaming\/api\/java\/JavaMapWithStateDStream.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "org\/apache\/spark\/streaming\/api\/java\/JavaMapWithStateDStream.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "org\/apache\/spark\/streaming\/api\/java\/JavaMapWithStateDStream.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "org\/apache\/spark\/streaming\/api\/java\/JavaMapWithStateDStream.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "org\/apache\/spark\/streaming\/api\/java\/JavaMapWithStateDStream.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "org\/apache\/spark\/streaming\/api\/java\/JavaMapWithStateDStream.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "org\/apache\/spark\/streaming\/api\/java\/JavaMapWithStateDStream.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "org\/apache\/spark\/streaming\/api\/java\/JavaMapWithStateDStream.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.equals", "link" : "org\/apache\/spark\/streaming\/api\/java\/JavaMapWithStateDStream.html#equals(x$1:Any):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "org\/apache\/spark\/streaming\/api\/java\/JavaMapWithStateDStream.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_]", "member" : "scala.AnyRef.getClass", "link" : "org\/apache\/spark\/streaming\/api\/java\/JavaMapWithStateDStream.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "org\/apache\/spark\/streaming\/api\/java\/JavaMapWithStateDStream.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "org\/apache\/spark\/streaming\/api\/java\/JavaMapWithStateDStream.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "class" : "org\/apache\/spark\/streaming\/api\/java\/JavaMapWithStateDStream.html", "kind" : "class"}, {"name" : "org.apache.spark.streaming.api.java.JavaPairDStream", "shortDescription" : "A Java-friendly interface to a DStream of key-value pairs, which provides extra methodslike reduceByKey and join.", "object" : "org\/apache\/spark\/streaming\/api\/java\/JavaPairDStream$.html", "members_class" : [{"label" : "classTag", "tail" : ": ClassTag[(K, V)]", "member" : "org.apache.spark.streaming.api.java.JavaPairDStream.classTag", "link" : "org\/apache\/spark\/streaming\/api\/java\/JavaPairDStream.html#classTag:scala.reflect.ClassTag[(K,V)]", "kind" : "val"}, {"label" : "toJavaDStream", "tail" : "(): JavaDStream[(K, V)]", "member" : "org.apache.spark.streaming.api.java.JavaPairDStream.toJavaDStream", "link" : "org\/apache\/spark\/streaming\/api\/java\/JavaPairDStream.html#toJavaDStream():org.apache.spark.streaming.api.java.JavaDStream[(K,V)]", "kind" : "def"}, {"label" : "saveAsNewAPIHadoopFiles", "tail" : "(prefix: String, suffix: String, keyClass: Class[_], valueClass: Class[_], outputFormatClass: Class[F], conf: Configuration): Unit", "member" : "org.apache.spark.streaming.api.java.JavaPairDStream.saveAsNewAPIHadoopFiles", "link" : "org\/apache\/spark\/streaming\/api\/java\/JavaPairDStream.html#saveAsNewAPIHadoopFiles[F<:org.apache.hadoop.mapreduce.OutputFormat[_,_]](prefix:String,suffix:String,keyClass:Class[_],valueClass:Class[_],outputFormatClass:Class[F],conf:org.apache.hadoop.conf.Configuration):Unit", "kind" : "def"}, {"label" : "saveAsNewAPIHadoopFiles", "tail" : "(prefix: String, suffix: String, keyClass: Class[_], valueClass: Class[_], outputFormatClass: Class[F]): Unit", "member" : "org.apache.spark.streaming.api.java.JavaPairDStream.saveAsNewAPIHadoopFiles", "link" : "org\/apache\/spark\/streaming\/api\/java\/JavaPairDStream.html#saveAsNewAPIHadoopFiles[F<:org.apache.hadoop.mapreduce.OutputFormat[_,_]](prefix:String,suffix:String,keyClass:Class[_],valueClass:Class[_],outputFormatClass:Class[F]):Unit", "kind" : "def"}, {"label" : "saveAsNewAPIHadoopFiles", "tail" : "(prefix: String, suffix: String): Unit", "member" : "org.apache.spark.streaming.api.java.JavaPairDStream.saveAsNewAPIHadoopFiles", "link" : "org\/apache\/spark\/streaming\/api\/java\/JavaPairDStream.html#saveAsNewAPIHadoopFiles(prefix:String,suffix:String):Unit", "kind" : "def"}, {"label" : "saveAsHadoopFiles", "tail" : "(prefix: String, suffix: String, keyClass: Class[_], valueClass: Class[_], outputFormatClass: Class[F], conf: JobConf): Unit", "member" : "org.apache.spark.streaming.api.java.JavaPairDStream.saveAsHadoopFiles", "link" : "org\/apache\/spark\/streaming\/api\/java\/JavaPairDStream.html#saveAsHadoopFiles[F<:org.apache.hadoop.mapred.OutputFormat[_,_]](prefix:String,suffix:String,keyClass:Class[_],valueClass:Class[_],outputFormatClass:Class[F],conf:org.apache.hadoop.mapred.JobConf):Unit", "kind" : "def"}, {"label" : "saveAsHadoopFiles", "tail" : "(prefix: String, suffix: String, keyClass: Class[_], valueClass: Class[_], outputFormatClass: Class[F]): Unit", "member" : "org.apache.spark.streaming.api.java.JavaPairDStream.saveAsHadoopFiles", "link" : "org\/apache\/spark\/streaming\/api\/java\/JavaPairDStream.html#saveAsHadoopFiles[F<:org.apache.hadoop.mapred.OutputFormat[_,_]](prefix:String,suffix:String,keyClass:Class[_],valueClass:Class[_],outputFormatClass:Class[F]):Unit", "kind" : "def"}, {"label" : "saveAsHadoopFiles", "tail" : "(prefix: String, suffix: String): Unit", "member" : "org.apache.spark.streaming.api.java.JavaPairDStream.saveAsHadoopFiles", "link" : "org\/apache\/spark\/streaming\/api\/java\/JavaPairDStream.html#saveAsHadoopFiles(prefix:String,suffix:String):Unit", "kind" : "def"}, {"label" : "fullOuterJoin", "tail" : "(other: JavaPairDStream[K, W], partitioner: Partitioner): JavaPairDStream[K, (Optional[V], Optional[W])]", "member" : "org.apache.spark.streaming.api.java.JavaPairDStream.fullOuterJoin", "link" : "org\/apache\/spark\/streaming\/api\/java\/JavaPairDStream.html#fullOuterJoin[W](other:org.apache.spark.streaming.api.java.JavaPairDStream[K,W],partitioner:org.apache.spark.Partitioner):org.apache.spark.streaming.api.java.JavaPairDStream[K,(org.apache.spark.api.java.Optional[V],org.apache.spark.api.java.Optional[W])]", "kind" : "def"}, {"label" : "fullOuterJoin", "tail" : "(other: JavaPairDStream[K, W], numPartitions: Int): JavaPairDStream[K, (Optional[V], Optional[W])]", "member" : "org.apache.spark.streaming.api.java.JavaPairDStream.fullOuterJoin", "link" : "org\/apache\/spark\/streaming\/api\/java\/JavaPairDStream.html#fullOuterJoin[W](other:org.apache.spark.streaming.api.java.JavaPairDStream[K,W],numPartitions:Int):org.apache.spark.streaming.api.java.JavaPairDStream[K,(org.apache.spark.api.java.Optional[V],org.apache.spark.api.java.Optional[W])]", "kind" : "def"}, {"label" : "fullOuterJoin", "tail" : "(other: JavaPairDStream[K, W]): JavaPairDStream[K, (Optional[V], Optional[W])]", "member" : "org.apache.spark.streaming.api.java.JavaPairDStream.fullOuterJoin", "link" : "org\/apache\/spark\/streaming\/api\/java\/JavaPairDStream.html#fullOuterJoin[W](other:org.apache.spark.streaming.api.java.JavaPairDStream[K,W]):org.apache.spark.streaming.api.java.JavaPairDStream[K,(org.apache.spark.api.java.Optional[V],org.apache.spark.api.java.Optional[W])]", "kind" : "def"}, {"label" : "rightOuterJoin", "tail" : "(other: JavaPairDStream[K, W], partitioner: Partitioner): JavaPairDStream[K, (Optional[V], W)]", "member" : "org.apache.spark.streaming.api.java.JavaPairDStream.rightOuterJoin", "link" : "org\/apache\/spark\/streaming\/api\/java\/JavaPairDStream.html#rightOuterJoin[W](other:org.apache.spark.streaming.api.java.JavaPairDStream[K,W],partitioner:org.apache.spark.Partitioner):org.apache.spark.streaming.api.java.JavaPairDStream[K,(org.apache.spark.api.java.Optional[V],W)]", "kind" : "def"}, {"label" : "rightOuterJoin", "tail" : "(other: JavaPairDStream[K, W], numPartitions: Int): JavaPairDStream[K, (Optional[V], W)]", "member" : "org.apache.spark.streaming.api.java.JavaPairDStream.rightOuterJoin", "link" : "org\/apache\/spark\/streaming\/api\/java\/JavaPairDStream.html#rightOuterJoin[W](other:org.apache.spark.streaming.api.java.JavaPairDStream[K,W],numPartitions:Int):org.apache.spark.streaming.api.java.JavaPairDStream[K,(org.apache.spark.api.java.Optional[V],W)]", "kind" : "def"}, {"label" : "rightOuterJoin", "tail" : "(other: JavaPairDStream[K, W]): JavaPairDStream[K, (Optional[V], W)]", "member" : "org.apache.spark.streaming.api.java.JavaPairDStream.rightOuterJoin", "link" : "org\/apache\/spark\/streaming\/api\/java\/JavaPairDStream.html#rightOuterJoin[W](other:org.apache.spark.streaming.api.java.JavaPairDStream[K,W]):org.apache.spark.streaming.api.java.JavaPairDStream[K,(org.apache.spark.api.java.Optional[V],W)]", "kind" : "def"}, {"label" : "leftOuterJoin", "tail" : "(other: JavaPairDStream[K, W], partitioner: Partitioner): JavaPairDStream[K, (V, Optional[W])]", "member" : "org.apache.spark.streaming.api.java.JavaPairDStream.leftOuterJoin", "link" : "org\/apache\/spark\/streaming\/api\/java\/JavaPairDStream.html#leftOuterJoin[W](other:org.apache.spark.streaming.api.java.JavaPairDStream[K,W],partitioner:org.apache.spark.Partitioner):org.apache.spark.streaming.api.java.JavaPairDStream[K,(V,org.apache.spark.api.java.Optional[W])]", "kind" : "def"}, {"label" : "leftOuterJoin", "tail" : "(other: JavaPairDStream[K, W], numPartitions: Int): JavaPairDStream[K, (V, Optional[W])]", "member" : "org.apache.spark.streaming.api.java.JavaPairDStream.leftOuterJoin", "link" : "org\/apache\/spark\/streaming\/api\/java\/JavaPairDStream.html#leftOuterJoin[W](other:org.apache.spark.streaming.api.java.JavaPairDStream[K,W],numPartitions:Int):org.apache.spark.streaming.api.java.JavaPairDStream[K,(V,org.apache.spark.api.java.Optional[W])]", "kind" : "def"}, {"label" : "leftOuterJoin", "tail" : "(other: JavaPairDStream[K, W]): JavaPairDStream[K, (V, Optional[W])]", "member" : "org.apache.spark.streaming.api.java.JavaPairDStream.leftOuterJoin", "link" : "org\/apache\/spark\/streaming\/api\/java\/JavaPairDStream.html#leftOuterJoin[W](other:org.apache.spark.streaming.api.java.JavaPairDStream[K,W]):org.apache.spark.streaming.api.java.JavaPairDStream[K,(V,org.apache.spark.api.java.Optional[W])]", "kind" : "def"}, {"label" : "join", "tail" : "(other: JavaPairDStream[K, W], partitioner: Partitioner): JavaPairDStream[K, (V, W)]", "member" : "org.apache.spark.streaming.api.java.JavaPairDStream.join", "link" : "org\/apache\/spark\/streaming\/api\/java\/JavaPairDStream.html#join[W](other:org.apache.spark.streaming.api.java.JavaPairDStream[K,W],partitioner:org.apache.spark.Partitioner):org.apache.spark.streaming.api.java.JavaPairDStream[K,(V,W)]", "kind" : "def"}, {"label" : "join", "tail" : "(other: JavaPairDStream[K, W], numPartitions: Int): JavaPairDStream[K, (V, W)]", "member" : "org.apache.spark.streaming.api.java.JavaPairDStream.join", "link" : "org\/apache\/spark\/streaming\/api\/java\/JavaPairDStream.html#join[W](other:org.apache.spark.streaming.api.java.JavaPairDStream[K,W],numPartitions:Int):org.apache.spark.streaming.api.java.JavaPairDStream[K,(V,W)]", "kind" : "def"}, {"label" : "join", "tail" : "(other: JavaPairDStream[K, W]): JavaPairDStream[K, (V, W)]", "member" : "org.apache.spark.streaming.api.java.JavaPairDStream.join", "link" : "org\/apache\/spark\/streaming\/api\/java\/JavaPairDStream.html#join[W](other:org.apache.spark.streaming.api.java.JavaPairDStream[K,W]):org.apache.spark.streaming.api.java.JavaPairDStream[K,(V,W)]", "kind" : "def"}, {"label" : "cogroup", "tail" : "(other: JavaPairDStream[K, W], partitioner: Partitioner): JavaPairDStream[K, (Iterable[V], Iterable[W])]", "member" : "org.apache.spark.streaming.api.java.JavaPairDStream.cogroup", "link" : "org\/apache\/spark\/streaming\/api\/java\/JavaPairDStream.html#cogroup[W](other:org.apache.spark.streaming.api.java.JavaPairDStream[K,W],partitioner:org.apache.spark.Partitioner):org.apache.spark.streaming.api.java.JavaPairDStream[K,(Iterable[V],Iterable[W])]", "kind" : "def"}, {"label" : "cogroup", "tail" : "(other: JavaPairDStream[K, W], numPartitions: Int): JavaPairDStream[K, (Iterable[V], Iterable[W])]", "member" : "org.apache.spark.streaming.api.java.JavaPairDStream.cogroup", "link" : "org\/apache\/spark\/streaming\/api\/java\/JavaPairDStream.html#cogroup[W](other:org.apache.spark.streaming.api.java.JavaPairDStream[K,W],numPartitions:Int):org.apache.spark.streaming.api.java.JavaPairDStream[K,(Iterable[V],Iterable[W])]", "kind" : "def"}, {"label" : "cogroup", "tail" : "(other: JavaPairDStream[K, W]): JavaPairDStream[K, (Iterable[V], Iterable[W])]", "member" : "org.apache.spark.streaming.api.java.JavaPairDStream.cogroup", "link" : "org\/apache\/spark\/streaming\/api\/java\/JavaPairDStream.html#cogroup[W](other:org.apache.spark.streaming.api.java.JavaPairDStream[K,W]):org.apache.spark.streaming.api.java.JavaPairDStream[K,(Iterable[V],Iterable[W])]", "kind" : "def"}, {"label" : "flatMapValues", "tail" : "(f: FlatMapFunction[V, U]): JavaPairDStream[K, U]", "member" : "org.apache.spark.streaming.api.java.JavaPairDStream.flatMapValues", "link" : "org\/apache\/spark\/streaming\/api\/java\/JavaPairDStream.html#flatMapValues[U](f:org.apache.spark.api.java.function.FlatMapFunction[V,U]):org.apache.spark.streaming.api.java.JavaPairDStream[K,U]", "kind" : "def"}, {"label" : "mapValues", "tail" : "(f: Function[V, U]): JavaPairDStream[K, U]", "member" : "org.apache.spark.streaming.api.java.JavaPairDStream.mapValues", "link" : "org\/apache\/spark\/streaming\/api\/java\/JavaPairDStream.html#mapValues[U](f:org.apache.spark.api.java.function.Function[V,U]):org.apache.spark.streaming.api.java.JavaPairDStream[K,U]", "kind" : "def"}, {"label" : "updateStateByKey", "tail" : "(updateFunc: Function2[List[V], Optional[S], Optional[S]], partitioner: Partitioner, initialRDD: JavaPairRDD[K, S]): JavaPairDStream[K, S]", "member" : "org.apache.spark.streaming.api.java.JavaPairDStream.updateStateByKey", "link" : "org\/apache\/spark\/streaming\/api\/java\/JavaPairDStream.html#updateStateByKey[S](updateFunc:org.apache.spark.api.java.function.Function2[java.util.List[V],org.apache.spark.api.java.Optional[S],org.apache.spark.api.java.Optional[S]],partitioner:org.apache.spark.Partitioner,initialRDD:org.apache.spark.api.java.JavaPairRDD[K,S]):org.apache.spark.streaming.api.java.JavaPairDStream[K,S]", "kind" : "def"}, {"label" : "updateStateByKey", "tail" : "(updateFunc: Function2[List[V], Optional[S], Optional[S]], partitioner: Partitioner): JavaPairDStream[K, S]", "member" : "org.apache.spark.streaming.api.java.JavaPairDStream.updateStateByKey", "link" : "org\/apache\/spark\/streaming\/api\/java\/JavaPairDStream.html#updateStateByKey[S](updateFunc:org.apache.spark.api.java.function.Function2[java.util.List[V],org.apache.spark.api.java.Optional[S],org.apache.spark.api.java.Optional[S]],partitioner:org.apache.spark.Partitioner):org.apache.spark.streaming.api.java.JavaPairDStream[K,S]", "kind" : "def"}, {"label" : "updateStateByKey", "tail" : "(updateFunc: Function2[List[V], Optional[S], Optional[S]], numPartitions: Int): JavaPairDStream[K, S]", "member" : "org.apache.spark.streaming.api.java.JavaPairDStream.updateStateByKey", "link" : "org\/apache\/spark\/streaming\/api\/java\/JavaPairDStream.html#updateStateByKey[S](updateFunc:org.apache.spark.api.java.function.Function2[java.util.List[V],org.apache.spark.api.java.Optional[S],org.apache.spark.api.java.Optional[S]],numPartitions:Int):org.apache.spark.streaming.api.java.JavaPairDStream[K,S]", "kind" : "def"}, {"label" : "updateStateByKey", "tail" : "(updateFunc: Function2[List[V], Optional[S], Optional[S]]): JavaPairDStream[K, S]", "member" : "org.apache.spark.streaming.api.java.JavaPairDStream.updateStateByKey", "link" : "org\/apache\/spark\/streaming\/api\/java\/JavaPairDStream.html#updateStateByKey[S](updateFunc:org.apache.spark.api.java.function.Function2[java.util.List[V],org.apache.spark.api.java.Optional[S],org.apache.spark.api.java.Optional[S]]):org.apache.spark.streaming.api.java.JavaPairDStream[K,S]", "kind" : "def"}, {"label" : "mapWithState", "tail" : "(spec: StateSpec[K, V, StateType, MappedType]): JavaMapWithStateDStream[K, V, StateType, MappedType]", "member" : "org.apache.spark.streaming.api.java.JavaPairDStream.mapWithState", "link" : "org\/apache\/spark\/streaming\/api\/java\/JavaPairDStream.html#mapWithState[StateType,MappedType](spec:org.apache.spark.streaming.StateSpec[K,V,StateType,MappedType]):org.apache.spark.streaming.api.java.JavaMapWithStateDStream[K,V,StateType,MappedType]", "kind" : "def"}, {"label" : "reduceByKeyAndWindow", "tail" : "(reduceFunc: Function2[V, V, V], invReduceFunc: Function2[V, V, V], windowDuration: Duration, slideDuration: Duration, partitioner: Partitioner, filterFunc: Function[(K, V), Boolean]): JavaPairDStream[K, V]", "member" : "org.apache.spark.streaming.api.java.JavaPairDStream.reduceByKeyAndWindow", "link" : "org\/apache\/spark\/streaming\/api\/java\/JavaPairDStream.html#reduceByKeyAndWindow(reduceFunc:org.apache.spark.api.java.function.Function2[V,V,V],invReduceFunc:org.apache.spark.api.java.function.Function2[V,V,V],windowDuration:org.apache.spark.streaming.Duration,slideDuration:org.apache.spark.streaming.Duration,partitioner:org.apache.spark.Partitioner,filterFunc:org.apache.spark.api.java.function.Function[(K,V),Boolean]):org.apache.spark.streaming.api.java.JavaPairDStream[K,V]", "kind" : "def"}, {"label" : "reduceByKeyAndWindow", "tail" : "(reduceFunc: Function2[V, V, V], invReduceFunc: Function2[V, V, V], windowDuration: Duration, slideDuration: Duration, numPartitions: Int, filterFunc: Function[(K, V), Boolean]): JavaPairDStream[K, V]", "member" : "org.apache.spark.streaming.api.java.JavaPairDStream.reduceByKeyAndWindow", "link" : "org\/apache\/spark\/streaming\/api\/java\/JavaPairDStream.html#reduceByKeyAndWindow(reduceFunc:org.apache.spark.api.java.function.Function2[V,V,V],invReduceFunc:org.apache.spark.api.java.function.Function2[V,V,V],windowDuration:org.apache.spark.streaming.Duration,slideDuration:org.apache.spark.streaming.Duration,numPartitions:Int,filterFunc:org.apache.spark.api.java.function.Function[(K,V),Boolean]):org.apache.spark.streaming.api.java.JavaPairDStream[K,V]", "kind" : "def"}, {"label" : "reduceByKeyAndWindow", "tail" : "(reduceFunc: Function2[V, V, V], invReduceFunc: Function2[V, V, V], windowDuration: Duration, slideDuration: Duration): JavaPairDStream[K, V]", "member" : "org.apache.spark.streaming.api.java.JavaPairDStream.reduceByKeyAndWindow", "link" : "org\/apache\/spark\/streaming\/api\/java\/JavaPairDStream.html#reduceByKeyAndWindow(reduceFunc:org.apache.spark.api.java.function.Function2[V,V,V],invReduceFunc:org.apache.spark.api.java.function.Function2[V,V,V],windowDuration:org.apache.spark.streaming.Duration,slideDuration:org.apache.spark.streaming.Duration):org.apache.spark.streaming.api.java.JavaPairDStream[K,V]", "kind" : "def"}, {"label" : "reduceByKeyAndWindow", "tail" : "(reduceFunc: Function2[V, V, V], windowDuration: Duration, slideDuration: Duration, partitioner: Partitioner): JavaPairDStream[K, V]", "member" : "org.apache.spark.streaming.api.java.JavaPairDStream.reduceByKeyAndWindow", "link" : "org\/apache\/spark\/streaming\/api\/java\/JavaPairDStream.html#reduceByKeyAndWindow(reduceFunc:org.apache.spark.api.java.function.Function2[V,V,V],windowDuration:org.apache.spark.streaming.Duration,slideDuration:org.apache.spark.streaming.Duration,partitioner:org.apache.spark.Partitioner):org.apache.spark.streaming.api.java.JavaPairDStream[K,V]", "kind" : "def"}, {"label" : "reduceByKeyAndWindow", "tail" : "(reduceFunc: Function2[V, V, V], windowDuration: Duration, slideDuration: Duration, numPartitions: Int): JavaPairDStream[K, V]", "member" : "org.apache.spark.streaming.api.java.JavaPairDStream.reduceByKeyAndWindow", "link" : "org\/apache\/spark\/streaming\/api\/java\/JavaPairDStream.html#reduceByKeyAndWindow(reduceFunc:org.apache.spark.api.java.function.Function2[V,V,V],windowDuration:org.apache.spark.streaming.Duration,slideDuration:org.apache.spark.streaming.Duration,numPartitions:Int):org.apache.spark.streaming.api.java.JavaPairDStream[K,V]", "kind" : "def"}, {"label" : "reduceByKeyAndWindow", "tail" : "(reduceFunc: Function2[V, V, V], windowDuration: Duration, slideDuration: Duration): JavaPairDStream[K, V]", "member" : "org.apache.spark.streaming.api.java.JavaPairDStream.reduceByKeyAndWindow", "link" : "org\/apache\/spark\/streaming\/api\/java\/JavaPairDStream.html#reduceByKeyAndWindow(reduceFunc:org.apache.spark.api.java.function.Function2[V,V,V],windowDuration:org.apache.spark.streaming.Duration,slideDuration:org.apache.spark.streaming.Duration):org.apache.spark.streaming.api.java.JavaPairDStream[K,V]", "kind" : "def"}, {"label" : "reduceByKeyAndWindow", "tail" : "(reduceFunc: Function2[V, V, V], windowDuration: Duration): JavaPairDStream[K, V]", "member" : "org.apache.spark.streaming.api.java.JavaPairDStream.reduceByKeyAndWindow", "link" : "org\/apache\/spark\/streaming\/api\/java\/JavaPairDStream.html#reduceByKeyAndWindow(reduceFunc:org.apache.spark.api.java.function.Function2[V,V,V],windowDuration:org.apache.spark.streaming.Duration):org.apache.spark.streaming.api.java.JavaPairDStream[K,V]", "kind" : "def"}, {"label" : "groupByKeyAndWindow", "tail" : "(windowDuration: Duration, slideDuration: Duration, partitioner: Partitioner): JavaPairDStream[K, Iterable[V]]", "member" : "org.apache.spark.streaming.api.java.JavaPairDStream.groupByKeyAndWindow", "link" : "org\/apache\/spark\/streaming\/api\/java\/JavaPairDStream.html#groupByKeyAndWindow(windowDuration:org.apache.spark.streaming.Duration,slideDuration:org.apache.spark.streaming.Duration,partitioner:org.apache.spark.Partitioner):org.apache.spark.streaming.api.java.JavaPairDStream[K,Iterable[V]]", "kind" : "def"}, {"label" : "groupByKeyAndWindow", "tail" : "(windowDuration: Duration, slideDuration: Duration, numPartitions: Int): JavaPairDStream[K, Iterable[V]]", "member" : "org.apache.spark.streaming.api.java.JavaPairDStream.groupByKeyAndWindow", "link" : "org\/apache\/spark\/streaming\/api\/java\/JavaPairDStream.html#groupByKeyAndWindow(windowDuration:org.apache.spark.streaming.Duration,slideDuration:org.apache.spark.streaming.Duration,numPartitions:Int):org.apache.spark.streaming.api.java.JavaPairDStream[K,Iterable[V]]", "kind" : "def"}, {"label" : "groupByKeyAndWindow", "tail" : "(windowDuration: Duration, slideDuration: Duration): JavaPairDStream[K, Iterable[V]]", "member" : "org.apache.spark.streaming.api.java.JavaPairDStream.groupByKeyAndWindow", "link" : "org\/apache\/spark\/streaming\/api\/java\/JavaPairDStream.html#groupByKeyAndWindow(windowDuration:org.apache.spark.streaming.Duration,slideDuration:org.apache.spark.streaming.Duration):org.apache.spark.streaming.api.java.JavaPairDStream[K,Iterable[V]]", "kind" : "def"}, {"label" : "groupByKeyAndWindow", "tail" : "(windowDuration: Duration): JavaPairDStream[K, Iterable[V]]", "member" : "org.apache.spark.streaming.api.java.JavaPairDStream.groupByKeyAndWindow", "link" : "org\/apache\/spark\/streaming\/api\/java\/JavaPairDStream.html#groupByKeyAndWindow(windowDuration:org.apache.spark.streaming.Duration):org.apache.spark.streaming.api.java.JavaPairDStream[K,Iterable[V]]", "kind" : "def"}, {"label" : "combineByKey", "tail" : "(createCombiner: Function[V, C], mergeValue: Function2[C, V, C], mergeCombiners: Function2[C, C, C], partitioner: Partitioner, mapSideCombine: Boolean): JavaPairDStream[K, C]", "member" : "org.apache.spark.streaming.api.java.JavaPairDStream.combineByKey", "link" : "org\/apache\/spark\/streaming\/api\/java\/JavaPairDStream.html#combineByKey[C](createCombiner:org.apache.spark.api.java.function.Function[V,C],mergeValue:org.apache.spark.api.java.function.Function2[C,V,C],mergeCombiners:org.apache.spark.api.java.function.Function2[C,C,C],partitioner:org.apache.spark.Partitioner,mapSideCombine:Boolean):org.apache.spark.streaming.api.java.JavaPairDStream[K,C]", "kind" : "def"}, {"label" : "combineByKey", "tail" : "(createCombiner: Function[V, C], mergeValue: Function2[C, V, C], mergeCombiners: Function2[C, C, C], partitioner: Partitioner): JavaPairDStream[K, C]", "member" : "org.apache.spark.streaming.api.java.JavaPairDStream.combineByKey", "link" : "org\/apache\/spark\/streaming\/api\/java\/JavaPairDStream.html#combineByKey[C](createCombiner:org.apache.spark.api.java.function.Function[V,C],mergeValue:org.apache.spark.api.java.function.Function2[C,V,C],mergeCombiners:org.apache.spark.api.java.function.Function2[C,C,C],partitioner:org.apache.spark.Partitioner):org.apache.spark.streaming.api.java.JavaPairDStream[K,C]", "kind" : "def"}, {"label" : "reduceByKey", "tail" : "(func: Function2[V, V, V], partitioner: Partitioner): JavaPairDStream[K, V]", "member" : "org.apache.spark.streaming.api.java.JavaPairDStream.reduceByKey", "link" : "org\/apache\/spark\/streaming\/api\/java\/JavaPairDStream.html#reduceByKey(func:org.apache.spark.api.java.function.Function2[V,V,V],partitioner:org.apache.spark.Partitioner):org.apache.spark.streaming.api.java.JavaPairDStream[K,V]", "kind" : "def"}, {"label" : "reduceByKey", "tail" : "(func: Function2[V, V, V], numPartitions: Int): JavaPairDStream[K, V]", "member" : "org.apache.spark.streaming.api.java.JavaPairDStream.reduceByKey", "link" : "org\/apache\/spark\/streaming\/api\/java\/JavaPairDStream.html#reduceByKey(func:org.apache.spark.api.java.function.Function2[V,V,V],numPartitions:Int):org.apache.spark.streaming.api.java.JavaPairDStream[K,V]", "kind" : "def"}, {"label" : "reduceByKey", "tail" : "(func: Function2[V, V, V]): JavaPairDStream[K, V]", "member" : "org.apache.spark.streaming.api.java.JavaPairDStream.reduceByKey", "link" : "org\/apache\/spark\/streaming\/api\/java\/JavaPairDStream.html#reduceByKey(func:org.apache.spark.api.java.function.Function2[V,V,V]):org.apache.spark.streaming.api.java.JavaPairDStream[K,V]", "kind" : "def"}, {"label" : "groupByKey", "tail" : "(partitioner: Partitioner): JavaPairDStream[K, Iterable[V]]", "member" : "org.apache.spark.streaming.api.java.JavaPairDStream.groupByKey", "link" : "org\/apache\/spark\/streaming\/api\/java\/JavaPairDStream.html#groupByKey(partitioner:org.apache.spark.Partitioner):org.apache.spark.streaming.api.java.JavaPairDStream[K,Iterable[V]]", "kind" : "def"}, {"label" : "groupByKey", "tail" : "(numPartitions: Int): JavaPairDStream[K, Iterable[V]]", "member" : "org.apache.spark.streaming.api.java.JavaPairDStream.groupByKey", "link" : "org\/apache\/spark\/streaming\/api\/java\/JavaPairDStream.html#groupByKey(numPartitions:Int):org.apache.spark.streaming.api.java.JavaPairDStream[K,Iterable[V]]", "kind" : "def"}, {"label" : "groupByKey", "tail" : "(): JavaPairDStream[K, Iterable[V]]", "member" : "org.apache.spark.streaming.api.java.JavaPairDStream.groupByKey", "link" : "org\/apache\/spark\/streaming\/api\/java\/JavaPairDStream.html#groupByKey():org.apache.spark.streaming.api.java.JavaPairDStream[K,Iterable[V]]", "kind" : "def"}, {"label" : "union", "tail" : "(that: JavaPairDStream[K, V]): JavaPairDStream[K, V]", "member" : "org.apache.spark.streaming.api.java.JavaPairDStream.union", "link" : "org\/apache\/spark\/streaming\/api\/java\/JavaPairDStream.html#union(that:org.apache.spark.streaming.api.java.JavaPairDStream[K,V]):org.apache.spark.streaming.api.java.JavaPairDStream[K,V]", "kind" : "def"}, {"label" : "window", "tail" : "(windowDuration: Duration, slideDuration: Duration): JavaPairDStream[K, V]", "member" : "org.apache.spark.streaming.api.java.JavaPairDStream.window", "link" : "org\/apache\/spark\/streaming\/api\/java\/JavaPairDStream.html#window(windowDuration:org.apache.spark.streaming.Duration,slideDuration:org.apache.spark.streaming.Duration):org.apache.spark.streaming.api.java.JavaPairDStream[K,V]", "kind" : "def"}, {"label" : "window", "tail" : "(windowDuration: Duration): JavaPairDStream[K, V]", "member" : "org.apache.spark.streaming.api.java.JavaPairDStream.window", "link" : "org\/apache\/spark\/streaming\/api\/java\/JavaPairDStream.html#window(windowDuration:org.apache.spark.streaming.Duration):org.apache.spark.streaming.api.java.JavaPairDStream[K,V]", "kind" : "def"}, {"label" : "compute", "tail" : "(validTime: Time): JavaPairRDD[K, V]", "member" : "org.apache.spark.streaming.api.java.JavaPairDStream.compute", "link" : "org\/apache\/spark\/streaming\/api\/java\/JavaPairDStream.html#compute(validTime:org.apache.spark.streaming.Time):org.apache.spark.api.java.JavaPairRDD[K,V]", "kind" : "def"}, {"label" : "repartition", "tail" : "(numPartitions: Int): JavaPairDStream[K, V]", "member" : "org.apache.spark.streaming.api.java.JavaPairDStream.repartition", "link" : "org\/apache\/spark\/streaming\/api\/java\/JavaPairDStream.html#repartition(numPartitions:Int):org.apache.spark.streaming.api.java.JavaPairDStream[K,V]", "kind" : "def"}, {"label" : "persist", "tail" : "(storageLevel: StorageLevel): JavaPairDStream[K, V]", "member" : "org.apache.spark.streaming.api.java.JavaPairDStream.persist", "link" : "org\/apache\/spark\/streaming\/api\/java\/JavaPairDStream.html#persist(storageLevel:org.apache.spark.storage.StorageLevel):org.apache.spark.streaming.api.java.JavaPairDStream[K,V]", "kind" : "def"}, {"label" : "persist", "tail" : "(): JavaPairDStream[K, V]", "member" : "org.apache.spark.streaming.api.java.JavaPairDStream.persist", "link" : "org\/apache\/spark\/streaming\/api\/java\/JavaPairDStream.html#persist():org.apache.spark.streaming.api.java.JavaPairDStream[K,V]", "kind" : "def"}, {"label" : "cache", "tail" : "(): JavaPairDStream[K, V]", "member" : "org.apache.spark.streaming.api.java.JavaPairDStream.cache", "link" : "org\/apache\/spark\/streaming\/api\/java\/JavaPairDStream.html#cache():org.apache.spark.streaming.api.java.JavaPairDStream[K,V]", "kind" : "def"}, {"label" : "filter", "tail" : "(f: Function[(K, V), Boolean]): JavaPairDStream[K, V]", "member" : "org.apache.spark.streaming.api.java.JavaPairDStream.filter", "link" : "org\/apache\/spark\/streaming\/api\/java\/JavaPairDStream.html#filter(f:org.apache.spark.api.java.function.Function[(K,V),Boolean]):org.apache.spark.streaming.api.java.JavaPairDStream[K,V]", "kind" : "def"}, {"label" : "wrapRDD", "tail" : "(rdd: RDD[(K, V)]): JavaPairRDD[K, V]", "member" : "org.apache.spark.streaming.api.java.JavaPairDStream.wrapRDD", "link" : "org\/apache\/spark\/streaming\/api\/java\/JavaPairDStream.html#wrapRDD(rdd:org.apache.spark.rdd.RDD[(K,V)]):org.apache.spark.api.java.JavaPairRDD[K,V]", "kind" : "def"}, {"member" : "org.apache.spark.streaming.api.java.JavaPairDStream#<init>", "error" : "unsupported entity"}, {"label" : "vManifest", "tail" : ": ClassTag[V]", "member" : "org.apache.spark.streaming.api.java.JavaPairDStream.vManifest", "link" : "org\/apache\/spark\/streaming\/api\/java\/JavaPairDStream.html#vManifest:scala.reflect.ClassTag[V]", "kind" : "implicit val"}, {"label" : "kManifest", "tail" : ": ClassTag[K]", "member" : "org.apache.spark.streaming.api.java.JavaPairDStream.kManifest", "link" : "org\/apache\/spark\/streaming\/api\/java\/JavaPairDStream.html#kManifest:scala.reflect.ClassTag[K]", "kind" : "implicit val"}, {"label" : "dstream", "tail" : ": DStream[(K, V)]", "member" : "org.apache.spark.streaming.api.java.JavaPairDStream.dstream", "link" : "org\/apache\/spark\/streaming\/api\/java\/JavaPairDStream.html#dstream:org.apache.spark.streaming.dstream.DStream[(K,V)]", "kind" : "val"}, {"label" : "checkpoint", "tail" : "(interval: Duration): DStream[(K, V)]", "member" : "org.apache.spark.streaming.api.java.JavaDStreamLike.checkpoint", "link" : "org\/apache\/spark\/streaming\/api\/java\/JavaPairDStream.html#checkpoint(interval:org.apache.spark.streaming.Duration):org.apache.spark.streaming.dstream.DStream[T]", "kind" : "def"}, {"label" : "transformWithToPair", "tail" : "(other: JavaPairDStream[K2, V2], transformFunc: Function3[JavaPairRDD[K, V], JavaPairRDD[K2, V2], Time, JavaPairRDD[K3, V3]]): JavaPairDStream[K3, V3]", "member" : "org.apache.spark.streaming.api.java.JavaDStreamLike.transformWithToPair", "link" : "org\/apache\/spark\/streaming\/api\/java\/JavaPairDStream.html#transformWithToPair[K2,V2,K3,V3](other:org.apache.spark.streaming.api.java.JavaPairDStream[K2,V2],transformFunc:org.apache.spark.api.java.function.Function3[R,org.apache.spark.api.java.JavaPairRDD[K2,V2],org.apache.spark.streaming.Time,org.apache.spark.api.java.JavaPairRDD[K3,V3]]):org.apache.spark.streaming.api.java.JavaPairDStream[K3,V3]", "kind" : "def"}, {"label" : "transformWith", "tail" : "(other: JavaPairDStream[K2, V2], transformFunc: Function3[JavaPairRDD[K, V], JavaPairRDD[K2, V2], Time, JavaRDD[W]]): JavaDStream[W]", "member" : "org.apache.spark.streaming.api.java.JavaDStreamLike.transformWith", "link" : "org\/apache\/spark\/streaming\/api\/java\/JavaPairDStream.html#transformWith[K2,V2,W](other:org.apache.spark.streaming.api.java.JavaPairDStream[K2,V2],transformFunc:org.apache.spark.api.java.function.Function3[R,org.apache.spark.api.java.JavaPairRDD[K2,V2],org.apache.spark.streaming.Time,org.apache.spark.api.java.JavaRDD[W]]):org.apache.spark.streaming.api.java.JavaDStream[W]", "kind" : "def"}, {"label" : "transformWithToPair", "tail" : "(other: JavaDStream[U], transformFunc: Function3[JavaPairRDD[K, V], JavaRDD[U], Time, JavaPairRDD[K2, V2]]): JavaPairDStream[K2, V2]", "member" : "org.apache.spark.streaming.api.java.JavaDStreamLike.transformWithToPair", "link" : "org\/apache\/spark\/streaming\/api\/java\/JavaPairDStream.html#transformWithToPair[U,K2,V2](other:org.apache.spark.streaming.api.java.JavaDStream[U],transformFunc:org.apache.spark.api.java.function.Function3[R,org.apache.spark.api.java.JavaRDD[U],org.apache.spark.streaming.Time,org.apache.spark.api.java.JavaPairRDD[K2,V2]]):org.apache.spark.streaming.api.java.JavaPairDStream[K2,V2]", "kind" : "def"}, {"label" : "transformWith", "tail" : "(other: JavaDStream[U], transformFunc: Function3[JavaPairRDD[K, V], JavaRDD[U], Time, JavaRDD[W]]): JavaDStream[W]", "member" : "org.apache.spark.streaming.api.java.JavaDStreamLike.transformWith", "link" : "org\/apache\/spark\/streaming\/api\/java\/JavaPairDStream.html#transformWith[U,W](other:org.apache.spark.streaming.api.java.JavaDStream[U],transformFunc:org.apache.spark.api.java.function.Function3[R,org.apache.spark.api.java.JavaRDD[U],org.apache.spark.streaming.Time,org.apache.spark.api.java.JavaRDD[W]]):org.apache.spark.streaming.api.java.JavaDStream[W]", "kind" : "def"}, {"label" : "transformToPair", "tail" : "(transformFunc: Function2[JavaPairRDD[K, V], Time, JavaPairRDD[K2, V2]]): JavaPairDStream[K2, V2]", "member" : "org.apache.spark.streaming.api.java.JavaDStreamLike.transformToPair", "link" : "org\/apache\/spark\/streaming\/api\/java\/JavaPairDStream.html#transformToPair[K2,V2](transformFunc:org.apache.spark.api.java.function.Function2[R,org.apache.spark.streaming.Time,org.apache.spark.api.java.JavaPairRDD[K2,V2]]):org.apache.spark.streaming.api.java.JavaPairDStream[K2,V2]", "kind" : "def"}, {"label" : "transformToPair", "tail" : "(transformFunc: Function[JavaPairRDD[K, V], JavaPairRDD[K2, V2]]): JavaPairDStream[K2, V2]", "member" : "org.apache.spark.streaming.api.java.JavaDStreamLike.transformToPair", "link" : "org\/apache\/spark\/streaming\/api\/java\/JavaPairDStream.html#transformToPair[K2,V2](transformFunc:org.apache.spark.api.java.function.Function[R,org.apache.spark.api.java.JavaPairRDD[K2,V2]]):org.apache.spark.streaming.api.java.JavaPairDStream[K2,V2]", "kind" : "def"}, {"label" : "transform", "tail" : "(transformFunc: Function2[JavaPairRDD[K, V], Time, JavaRDD[U]]): JavaDStream[U]", "member" : "org.apache.spark.streaming.api.java.JavaDStreamLike.transform", "link" : "org\/apache\/spark\/streaming\/api\/java\/JavaPairDStream.html#transform[U](transformFunc:org.apache.spark.api.java.function.Function2[R,org.apache.spark.streaming.Time,org.apache.spark.api.java.JavaRDD[U]]):org.apache.spark.streaming.api.java.JavaDStream[U]", "kind" : "def"}, {"label" : "transform", "tail" : "(transformFunc: Function[JavaPairRDD[K, V], JavaRDD[U]]): JavaDStream[U]", "member" : "org.apache.spark.streaming.api.java.JavaDStreamLike.transform", "link" : "org\/apache\/spark\/streaming\/api\/java\/JavaPairDStream.html#transform[U](transformFunc:org.apache.spark.api.java.function.Function[R,org.apache.spark.api.java.JavaRDD[U]]):org.apache.spark.streaming.api.java.JavaDStream[U]", "kind" : "def"}, {"label" : "foreachRDD", "tail" : "(foreachFunc: VoidFunction2[JavaPairRDD[K, V], Time]): Unit", "member" : "org.apache.spark.streaming.api.java.JavaDStreamLike.foreachRDD", "link" : "org\/apache\/spark\/streaming\/api\/java\/JavaPairDStream.html#foreachRDD(foreachFunc:org.apache.spark.api.java.function.VoidFunction2[R,org.apache.spark.streaming.Time]):Unit", "kind" : "def"}, {"label" : "foreachRDD", "tail" : "(foreachFunc: VoidFunction[JavaPairRDD[K, V]]): Unit", "member" : "org.apache.spark.streaming.api.java.JavaDStreamLike.foreachRDD", "link" : "org\/apache\/spark\/streaming\/api\/java\/JavaPairDStream.html#foreachRDD(foreachFunc:org.apache.spark.api.java.function.VoidFunction[R]):Unit", "kind" : "def"}, {"label" : "slice", "tail" : "(fromTime: Time, toTime: Time): List[JavaPairRDD[K, V]]", "member" : "org.apache.spark.streaming.api.java.JavaDStreamLike.slice", "link" : "org\/apache\/spark\/streaming\/api\/java\/JavaPairDStream.html#slice(fromTime:org.apache.spark.streaming.Time,toTime:org.apache.spark.streaming.Time):java.util.List[R]", "kind" : "def"}, {"label" : "reduceByWindow", "tail" : "(reduceFunc: Function2[(K, V), (K, V), (K, V)], invReduceFunc: Function2[(K, V), (K, V), (K, V)], windowDuration: Duration, slideDuration: Duration): JavaDStream[(K, V)]", "member" : "org.apache.spark.streaming.api.java.JavaDStreamLike.reduceByWindow", "link" : "org\/apache\/spark\/streaming\/api\/java\/JavaPairDStream.html#reduceByWindow(reduceFunc:org.apache.spark.api.java.function.Function2[T,T,T],invReduceFunc:org.apache.spark.api.java.function.Function2[T,T,T],windowDuration:org.apache.spark.streaming.Duration,slideDuration:org.apache.spark.streaming.Duration):org.apache.spark.streaming.api.java.JavaDStream[T]", "kind" : "def"}, {"label" : "reduceByWindow", "tail" : "(reduceFunc: Function2[(K, V), (K, V), (K, V)], windowDuration: Duration, slideDuration: Duration): JavaDStream[(K, V)]", "member" : "org.apache.spark.streaming.api.java.JavaDStreamLike.reduceByWindow", "link" : "org\/apache\/spark\/streaming\/api\/java\/JavaPairDStream.html#reduceByWindow(reduceFunc:org.apache.spark.api.java.function.Function2[T,T,T],windowDuration:org.apache.spark.streaming.Duration,slideDuration:org.apache.spark.streaming.Duration):org.apache.spark.streaming.api.java.JavaDStream[T]", "kind" : "def"}, {"label" : "reduce", "tail" : "(f: Function2[(K, V), (K, V), (K, V)]): JavaDStream[(K, V)]", "member" : "org.apache.spark.streaming.api.java.JavaDStreamLike.reduce", "link" : "org\/apache\/spark\/streaming\/api\/java\/JavaPairDStream.html#reduce(f:org.apache.spark.api.java.function.Function2[T,T,T]):org.apache.spark.streaming.api.java.JavaDStream[T]", "kind" : "def"}, {"label" : "mapPartitionsToPair", "tail" : "(f: PairFlatMapFunction[Iterator[(K, V)], K2, V2]): JavaPairDStream[K2, V2]", "member" : "org.apache.spark.streaming.api.java.JavaDStreamLike.mapPartitionsToPair", "link" : "org\/apache\/spark\/streaming\/api\/java\/JavaPairDStream.html#mapPartitionsToPair[K2,V2](f:org.apache.spark.api.java.function.PairFlatMapFunction[java.util.Iterator[T],K2,V2]):org.apache.spark.streaming.api.java.JavaPairDStream[K2,V2]", "kind" : "def"}, {"label" : "mapPartitions", "tail" : "(f: FlatMapFunction[Iterator[(K, V)], U]): JavaDStream[U]", "member" : "org.apache.spark.streaming.api.java.JavaDStreamLike.mapPartitions", "link" : "org\/apache\/spark\/streaming\/api\/java\/JavaPairDStream.html#mapPartitions[U](f:org.apache.spark.api.java.function.FlatMapFunction[java.util.Iterator[T],U]):org.apache.spark.streaming.api.java.JavaDStream[U]", "kind" : "def"}, {"label" : "flatMapToPair", "tail" : "(f: PairFlatMapFunction[(K, V), K2, V2]): JavaPairDStream[K2, V2]", "member" : "org.apache.spark.streaming.api.java.JavaDStreamLike.flatMapToPair", "link" : "org\/apache\/spark\/streaming\/api\/java\/JavaPairDStream.html#flatMapToPair[K2,V2](f:org.apache.spark.api.java.function.PairFlatMapFunction[T,K2,V2]):org.apache.spark.streaming.api.java.JavaPairDStream[K2,V2]", "kind" : "def"}, {"label" : "flatMap", "tail" : "(f: FlatMapFunction[(K, V), U]): JavaDStream[U]", "member" : "org.apache.spark.streaming.api.java.JavaDStreamLike.flatMap", "link" : "org\/apache\/spark\/streaming\/api\/java\/JavaPairDStream.html#flatMap[U](f:org.apache.spark.api.java.function.FlatMapFunction[T,U]):org.apache.spark.streaming.api.java.JavaDStream[U]", "kind" : "def"}, {"label" : "mapToPair", "tail" : "(f: PairFunction[(K, V), K2, V2]): JavaPairDStream[K2, V2]", "member" : "org.apache.spark.streaming.api.java.JavaDStreamLike.mapToPair", "link" : "org\/apache\/spark\/streaming\/api\/java\/JavaPairDStream.html#mapToPair[K2,V2](f:org.apache.spark.api.java.function.PairFunction[T,K2,V2]):org.apache.spark.streaming.api.java.JavaPairDStream[K2,V2]", "kind" : "def"}, {"label" : "map", "tail" : "(f: Function[(K, V), U]): JavaDStream[U]", "member" : "org.apache.spark.streaming.api.java.JavaDStreamLike.map", "link" : "org\/apache\/spark\/streaming\/api\/java\/JavaPairDStream.html#map[U](f:org.apache.spark.api.java.function.Function[T,U]):org.apache.spark.streaming.api.java.JavaDStream[U]", "kind" : "def"}, {"label" : "context", "tail" : "(): StreamingContext", "member" : "org.apache.spark.streaming.api.java.JavaDStreamLike.context", "link" : "org\/apache\/spark\/streaming\/api\/java\/JavaPairDStream.html#context():org.apache.spark.streaming.StreamingContext", "kind" : "def"}, {"label" : "glom", "tail" : "(): JavaDStream[List[(K, V)]]", "member" : "org.apache.spark.streaming.api.java.JavaDStreamLike.glom", "link" : "org\/apache\/spark\/streaming\/api\/java\/JavaPairDStream.html#glom():org.apache.spark.streaming.api.java.JavaDStream[java.util.List[T]]", "kind" : "def"}, {"label" : "countByValueAndWindow", "tail" : "(windowDuration: Duration, slideDuration: Duration, numPartitions: Int): JavaPairDStream[(K, V), Long]", "member" : "org.apache.spark.streaming.api.java.JavaDStreamLike.countByValueAndWindow", "link" : "org\/apache\/spark\/streaming\/api\/java\/JavaPairDStream.html#countByValueAndWindow(windowDuration:org.apache.spark.streaming.Duration,slideDuration:org.apache.spark.streaming.Duration,numPartitions:Int):org.apache.spark.streaming.api.java.JavaPairDStream[T,Long]", "kind" : "def"}, {"label" : "countByValueAndWindow", "tail" : "(windowDuration: Duration, slideDuration: Duration): JavaPairDStream[(K, V), Long]", "member" : "org.apache.spark.streaming.api.java.JavaDStreamLike.countByValueAndWindow", "link" : "org\/apache\/spark\/streaming\/api\/java\/JavaPairDStream.html#countByValueAndWindow(windowDuration:org.apache.spark.streaming.Duration,slideDuration:org.apache.spark.streaming.Duration):org.apache.spark.streaming.api.java.JavaPairDStream[T,Long]", "kind" : "def"}, {"label" : "countByWindow", "tail" : "(windowDuration: Duration, slideDuration: Duration): JavaDStream[Long]", "member" : "org.apache.spark.streaming.api.java.JavaDStreamLike.countByWindow", "link" : "org\/apache\/spark\/streaming\/api\/java\/JavaPairDStream.html#countByWindow(windowDuration:org.apache.spark.streaming.Duration,slideDuration:org.apache.spark.streaming.Duration):org.apache.spark.streaming.api.java.JavaDStream[Long]", "kind" : "def"}, {"label" : "countByValue", "tail" : "(numPartitions: Int): JavaPairDStream[(K, V), Long]", "member" : "org.apache.spark.streaming.api.java.JavaDStreamLike.countByValue", "link" : "org\/apache\/spark\/streaming\/api\/java\/JavaPairDStream.html#countByValue(numPartitions:Int):org.apache.spark.streaming.api.java.JavaPairDStream[T,Long]", "kind" : "def"}, {"label" : "countByValue", "tail" : "(): JavaPairDStream[(K, V), Long]", "member" : "org.apache.spark.streaming.api.java.JavaDStreamLike.countByValue", "link" : "org\/apache\/spark\/streaming\/api\/java\/JavaPairDStream.html#countByValue():org.apache.spark.streaming.api.java.JavaPairDStream[T,Long]", "kind" : "def"}, {"label" : "count", "tail" : "(): JavaDStream[Long]", "member" : "org.apache.spark.streaming.api.java.JavaDStreamLike.count", "link" : "org\/apache\/spark\/streaming\/api\/java\/JavaPairDStream.html#count():org.apache.spark.streaming.api.java.JavaDStream[Long]", "kind" : "def"}, {"label" : "print", "tail" : "(num: Int): Unit", "member" : "org.apache.spark.streaming.api.java.JavaDStreamLike.print", "link" : "org\/apache\/spark\/streaming\/api\/java\/JavaPairDStream.html#print(num:Int):Unit", "kind" : "def"}, {"label" : "print", "tail" : "(): Unit", "member" : "org.apache.spark.streaming.api.java.JavaDStreamLike.print", "link" : "org\/apache\/spark\/streaming\/api\/java\/JavaPairDStream.html#print():Unit", "kind" : "def"}, {"label" : "scalaIntToJavaLong", "tail" : "(in: DStream[Long]): JavaDStream[Long]", "member" : "org.apache.spark.streaming.api.java.JavaDStreamLike.scalaIntToJavaLong", "link" : "org\/apache\/spark\/streaming\/api\/java\/JavaPairDStream.html#scalaIntToJavaLong(in:org.apache.spark.streaming.dstream.DStream[Long]):org.apache.spark.streaming.api.java.JavaDStream[Long]", "kind" : "implicit def"}, {"label" : "synchronized", "tail" : "(arg0: ⇒ T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "org\/apache\/spark\/streaming\/api\/java\/JavaPairDStream.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "org\/apache\/spark\/streaming\/api\/java\/JavaPairDStream.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "org\/apache\/spark\/streaming\/api\/java\/JavaPairDStream.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "org\/apache\/spark\/streaming\/api\/java\/JavaPairDStream.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "org\/apache\/spark\/streaming\/api\/java\/JavaPairDStream.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "org\/apache\/spark\/streaming\/api\/java\/JavaPairDStream.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "org\/apache\/spark\/streaming\/api\/java\/JavaPairDStream.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "org\/apache\/spark\/streaming\/api\/java\/JavaPairDStream.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "org\/apache\/spark\/streaming\/api\/java\/JavaPairDStream.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "org\/apache\/spark\/streaming\/api\/java\/JavaPairDStream.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "org\/apache\/spark\/streaming\/api\/java\/JavaPairDStream.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "org\/apache\/spark\/streaming\/api\/java\/JavaPairDStream.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "org\/apache\/spark\/streaming\/api\/java\/JavaPairDStream.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "org\/apache\/spark\/streaming\/api\/java\/JavaPairDStream.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.equals", "link" : "org\/apache\/spark\/streaming\/api\/java\/JavaPairDStream.html#equals(x$1:Any):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "org\/apache\/spark\/streaming\/api\/java\/JavaPairDStream.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_]", "member" : "scala.AnyRef.getClass", "link" : "org\/apache\/spark\/streaming\/api\/java\/JavaPairDStream.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "org\/apache\/spark\/streaming\/api\/java\/JavaPairDStream.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "org\/apache\/spark\/streaming\/api\/java\/JavaPairDStream.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "members_object" : [{"label" : "scalaToJavaLong", "tail" : "(dstream: JavaPairDStream[K, Long])(arg0: ClassTag[K]): JavaPairDStream[K, Long]", "member" : "org.apache.spark.streaming.api.java.JavaPairDStream.scalaToJavaLong", "link" : "org\/apache\/spark\/streaming\/api\/java\/JavaPairDStream$.html#scalaToJavaLong[K](dstream:org.apache.spark.streaming.api.java.JavaPairDStream[K,Long])(implicitevidence$3:scala.reflect.ClassTag[K]):org.apache.spark.streaming.api.java.JavaPairDStream[K,Long]", "kind" : "def"}, {"label" : "fromJavaDStream", "tail" : "(dstream: JavaDStream[(K, V)]): JavaPairDStream[K, V]", "member" : "org.apache.spark.streaming.api.java.JavaPairDStream.fromJavaDStream", "link" : "org\/apache\/spark\/streaming\/api\/java\/JavaPairDStream$.html#fromJavaDStream[K,V](dstream:org.apache.spark.streaming.api.java.JavaDStream[(K,V)]):org.apache.spark.streaming.api.java.JavaPairDStream[K,V]", "kind" : "def"}, {"label" : "fromPairDStream", "tail" : "(dstream: DStream[(K, V)])(arg0: ClassTag[K], arg1: ClassTag[V]): JavaPairDStream[K, V]", "member" : "org.apache.spark.streaming.api.java.JavaPairDStream.fromPairDStream", "link" : "org\/apache\/spark\/streaming\/api\/java\/JavaPairDStream$.html#fromPairDStream[K,V](dstream:org.apache.spark.streaming.dstream.DStream[(K,V)])(implicitevidence$1:scala.reflect.ClassTag[K],implicitevidence$2:scala.reflect.ClassTag[V]):org.apache.spark.streaming.api.java.JavaPairDStream[K,V]", "kind" : "implicit def"}, {"label" : "synchronized", "tail" : "(arg0: ⇒ T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "org\/apache\/spark\/streaming\/api\/java\/JavaPairDStream$.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "org\/apache\/spark\/streaming\/api\/java\/JavaPairDStream$.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "org\/apache\/spark\/streaming\/api\/java\/JavaPairDStream$.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "org\/apache\/spark\/streaming\/api\/java\/JavaPairDStream$.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "org\/apache\/spark\/streaming\/api\/java\/JavaPairDStream$.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "org\/apache\/spark\/streaming\/api\/java\/JavaPairDStream$.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "org\/apache\/spark\/streaming\/api\/java\/JavaPairDStream$.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "org\/apache\/spark\/streaming\/api\/java\/JavaPairDStream$.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "org\/apache\/spark\/streaming\/api\/java\/JavaPairDStream$.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "org\/apache\/spark\/streaming\/api\/java\/JavaPairDStream$.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "org\/apache\/spark\/streaming\/api\/java\/JavaPairDStream$.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "org\/apache\/spark\/streaming\/api\/java\/JavaPairDStream$.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "org\/apache\/spark\/streaming\/api\/java\/JavaPairDStream$.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "org\/apache\/spark\/streaming\/api\/java\/JavaPairDStream$.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.equals", "link" : "org\/apache\/spark\/streaming\/api\/java\/JavaPairDStream$.html#equals(x$1:Any):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "org\/apache\/spark\/streaming\/api\/java\/JavaPairDStream$.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_]", "member" : "scala.AnyRef.getClass", "link" : "org\/apache\/spark\/streaming\/api\/java\/JavaPairDStream$.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "org\/apache\/spark\/streaming\/api\/java\/JavaPairDStream$.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "org\/apache\/spark\/streaming\/api\/java\/JavaPairDStream$.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "class" : "org\/apache\/spark\/streaming\/api\/java\/JavaPairDStream.html", "kind" : "class"}, {"name" : "org.apache.spark.streaming.api.java.JavaPairInputDStream", "shortDescription" : "A Java-friendly interface to org.apache.spark.streaming.dstream.InputDStream ofkey-value pairs.", "object" : "org\/apache\/spark\/streaming\/api\/java\/JavaPairInputDStream$.html", "members_class" : [{"member" : "org.apache.spark.streaming.api.java.JavaPairInputDStream#<init>", "error" : "unsupported entity"}, {"label" : "vClassTag", "tail" : ": ClassTag[V]", "member" : "org.apache.spark.streaming.api.java.JavaPairInputDStream.vClassTag", "link" : "org\/apache\/spark\/streaming\/api\/java\/JavaPairInputDStream.html#vClassTag:scala.reflect.ClassTag[V]", "kind" : "implicit val"}, {"label" : "kClassTag", "tail" : ": ClassTag[K]", "member" : "org.apache.spark.streaming.api.java.JavaPairInputDStream.kClassTag", "link" : "org\/apache\/spark\/streaming\/api\/java\/JavaPairInputDStream.html#kClassTag:scala.reflect.ClassTag[K]", "kind" : "implicit val"}, {"label" : "inputDStream", "tail" : ": InputDStream[(K, V)]", "member" : "org.apache.spark.streaming.api.java.JavaPairInputDStream.inputDStream", "link" : "org\/apache\/spark\/streaming\/api\/java\/JavaPairInputDStream.html#inputDStream:org.apache.spark.streaming.dstream.InputDStream[(K,V)]", "kind" : "val"}, {"label" : "classTag", "tail" : ": ClassTag[(K, V)]", "member" : "org.apache.spark.streaming.api.java.JavaPairDStream.classTag", "link" : "org\/apache\/spark\/streaming\/api\/java\/JavaPairInputDStream.html#classTag:scala.reflect.ClassTag[(K,V)]", "kind" : "val"}, {"label" : "toJavaDStream", "tail" : "(): JavaDStream[(K, V)]", "member" : "org.apache.spark.streaming.api.java.JavaPairDStream.toJavaDStream", "link" : "org\/apache\/spark\/streaming\/api\/java\/JavaPairInputDStream.html#toJavaDStream():org.apache.spark.streaming.api.java.JavaDStream[(K,V)]", "kind" : "def"}, {"label" : "saveAsNewAPIHadoopFiles", "tail" : "(prefix: String, suffix: String, keyClass: Class[_], valueClass: Class[_], outputFormatClass: Class[F], conf: Configuration): Unit", "member" : "org.apache.spark.streaming.api.java.JavaPairDStream.saveAsNewAPIHadoopFiles", "link" : "org\/apache\/spark\/streaming\/api\/java\/JavaPairInputDStream.html#saveAsNewAPIHadoopFiles[F<:org.apache.hadoop.mapreduce.OutputFormat[_,_]](prefix:String,suffix:String,keyClass:Class[_],valueClass:Class[_],outputFormatClass:Class[F],conf:org.apache.hadoop.conf.Configuration):Unit", "kind" : "def"}, {"label" : "saveAsNewAPIHadoopFiles", "tail" : "(prefix: String, suffix: String, keyClass: Class[_], valueClass: Class[_], outputFormatClass: Class[F]): Unit", "member" : "org.apache.spark.streaming.api.java.JavaPairDStream.saveAsNewAPIHadoopFiles", "link" : "org\/apache\/spark\/streaming\/api\/java\/JavaPairInputDStream.html#saveAsNewAPIHadoopFiles[F<:org.apache.hadoop.mapreduce.OutputFormat[_,_]](prefix:String,suffix:String,keyClass:Class[_],valueClass:Class[_],outputFormatClass:Class[F]):Unit", "kind" : "def"}, {"label" : "saveAsNewAPIHadoopFiles", "tail" : "(prefix: String, suffix: String): Unit", "member" : "org.apache.spark.streaming.api.java.JavaPairDStream.saveAsNewAPIHadoopFiles", "link" : "org\/apache\/spark\/streaming\/api\/java\/JavaPairInputDStream.html#saveAsNewAPIHadoopFiles(prefix:String,suffix:String):Unit", "kind" : "def"}, {"label" : "saveAsHadoopFiles", "tail" : "(prefix: String, suffix: String, keyClass: Class[_], valueClass: Class[_], outputFormatClass: Class[F], conf: JobConf): Unit", "member" : "org.apache.spark.streaming.api.java.JavaPairDStream.saveAsHadoopFiles", "link" : "org\/apache\/spark\/streaming\/api\/java\/JavaPairInputDStream.html#saveAsHadoopFiles[F<:org.apache.hadoop.mapred.OutputFormat[_,_]](prefix:String,suffix:String,keyClass:Class[_],valueClass:Class[_],outputFormatClass:Class[F],conf:org.apache.hadoop.mapred.JobConf):Unit", "kind" : "def"}, {"label" : "saveAsHadoopFiles", "tail" : "(prefix: String, suffix: String, keyClass: Class[_], valueClass: Class[_], outputFormatClass: Class[F]): Unit", "member" : "org.apache.spark.streaming.api.java.JavaPairDStream.saveAsHadoopFiles", "link" : "org\/apache\/spark\/streaming\/api\/java\/JavaPairInputDStream.html#saveAsHadoopFiles[F<:org.apache.hadoop.mapred.OutputFormat[_,_]](prefix:String,suffix:String,keyClass:Class[_],valueClass:Class[_],outputFormatClass:Class[F]):Unit", "kind" : "def"}, {"label" : "saveAsHadoopFiles", "tail" : "(prefix: String, suffix: String): Unit", "member" : "org.apache.spark.streaming.api.java.JavaPairDStream.saveAsHadoopFiles", "link" : "org\/apache\/spark\/streaming\/api\/java\/JavaPairInputDStream.html#saveAsHadoopFiles(prefix:String,suffix:String):Unit", "kind" : "def"}, {"label" : "fullOuterJoin", "tail" : "(other: JavaPairDStream[K, W], partitioner: Partitioner): JavaPairDStream[K, (Optional[V], Optional[W])]", "member" : "org.apache.spark.streaming.api.java.JavaPairDStream.fullOuterJoin", "link" : "org\/apache\/spark\/streaming\/api\/java\/JavaPairInputDStream.html#fullOuterJoin[W](other:org.apache.spark.streaming.api.java.JavaPairDStream[K,W],partitioner:org.apache.spark.Partitioner):org.apache.spark.streaming.api.java.JavaPairDStream[K,(org.apache.spark.api.java.Optional[V],org.apache.spark.api.java.Optional[W])]", "kind" : "def"}, {"label" : "fullOuterJoin", "tail" : "(other: JavaPairDStream[K, W], numPartitions: Int): JavaPairDStream[K, (Optional[V], Optional[W])]", "member" : "org.apache.spark.streaming.api.java.JavaPairDStream.fullOuterJoin", "link" : "org\/apache\/spark\/streaming\/api\/java\/JavaPairInputDStream.html#fullOuterJoin[W](other:org.apache.spark.streaming.api.java.JavaPairDStream[K,W],numPartitions:Int):org.apache.spark.streaming.api.java.JavaPairDStream[K,(org.apache.spark.api.java.Optional[V],org.apache.spark.api.java.Optional[W])]", "kind" : "def"}, {"label" : "fullOuterJoin", "tail" : "(other: JavaPairDStream[K, W]): JavaPairDStream[K, (Optional[V], Optional[W])]", "member" : "org.apache.spark.streaming.api.java.JavaPairDStream.fullOuterJoin", "link" : "org\/apache\/spark\/streaming\/api\/java\/JavaPairInputDStream.html#fullOuterJoin[W](other:org.apache.spark.streaming.api.java.JavaPairDStream[K,W]):org.apache.spark.streaming.api.java.JavaPairDStream[K,(org.apache.spark.api.java.Optional[V],org.apache.spark.api.java.Optional[W])]", "kind" : "def"}, {"label" : "rightOuterJoin", "tail" : "(other: JavaPairDStream[K, W], partitioner: Partitioner): JavaPairDStream[K, (Optional[V], W)]", "member" : "org.apache.spark.streaming.api.java.JavaPairDStream.rightOuterJoin", "link" : "org\/apache\/spark\/streaming\/api\/java\/JavaPairInputDStream.html#rightOuterJoin[W](other:org.apache.spark.streaming.api.java.JavaPairDStream[K,W],partitioner:org.apache.spark.Partitioner):org.apache.spark.streaming.api.java.JavaPairDStream[K,(org.apache.spark.api.java.Optional[V],W)]", "kind" : "def"}, {"label" : "rightOuterJoin", "tail" : "(other: JavaPairDStream[K, W], numPartitions: Int): JavaPairDStream[K, (Optional[V], W)]", "member" : "org.apache.spark.streaming.api.java.JavaPairDStream.rightOuterJoin", "link" : "org\/apache\/spark\/streaming\/api\/java\/JavaPairInputDStream.html#rightOuterJoin[W](other:org.apache.spark.streaming.api.java.JavaPairDStream[K,W],numPartitions:Int):org.apache.spark.streaming.api.java.JavaPairDStream[K,(org.apache.spark.api.java.Optional[V],W)]", "kind" : "def"}, {"label" : "rightOuterJoin", "tail" : "(other: JavaPairDStream[K, W]): JavaPairDStream[K, (Optional[V], W)]", "member" : "org.apache.spark.streaming.api.java.JavaPairDStream.rightOuterJoin", "link" : "org\/apache\/spark\/streaming\/api\/java\/JavaPairInputDStream.html#rightOuterJoin[W](other:org.apache.spark.streaming.api.java.JavaPairDStream[K,W]):org.apache.spark.streaming.api.java.JavaPairDStream[K,(org.apache.spark.api.java.Optional[V],W)]", "kind" : "def"}, {"label" : "leftOuterJoin", "tail" : "(other: JavaPairDStream[K, W], partitioner: Partitioner): JavaPairDStream[K, (V, Optional[W])]", "member" : "org.apache.spark.streaming.api.java.JavaPairDStream.leftOuterJoin", "link" : "org\/apache\/spark\/streaming\/api\/java\/JavaPairInputDStream.html#leftOuterJoin[W](other:org.apache.spark.streaming.api.java.JavaPairDStream[K,W],partitioner:org.apache.spark.Partitioner):org.apache.spark.streaming.api.java.JavaPairDStream[K,(V,org.apache.spark.api.java.Optional[W])]", "kind" : "def"}, {"label" : "leftOuterJoin", "tail" : "(other: JavaPairDStream[K, W], numPartitions: Int): JavaPairDStream[K, (V, Optional[W])]", "member" : "org.apache.spark.streaming.api.java.JavaPairDStream.leftOuterJoin", "link" : "org\/apache\/spark\/streaming\/api\/java\/JavaPairInputDStream.html#leftOuterJoin[W](other:org.apache.spark.streaming.api.java.JavaPairDStream[K,W],numPartitions:Int):org.apache.spark.streaming.api.java.JavaPairDStream[K,(V,org.apache.spark.api.java.Optional[W])]", "kind" : "def"}, {"label" : "leftOuterJoin", "tail" : "(other: JavaPairDStream[K, W]): JavaPairDStream[K, (V, Optional[W])]", "member" : "org.apache.spark.streaming.api.java.JavaPairDStream.leftOuterJoin", "link" : "org\/apache\/spark\/streaming\/api\/java\/JavaPairInputDStream.html#leftOuterJoin[W](other:org.apache.spark.streaming.api.java.JavaPairDStream[K,W]):org.apache.spark.streaming.api.java.JavaPairDStream[K,(V,org.apache.spark.api.java.Optional[W])]", "kind" : "def"}, {"label" : "join", "tail" : "(other: JavaPairDStream[K, W], partitioner: Partitioner): JavaPairDStream[K, (V, W)]", "member" : "org.apache.spark.streaming.api.java.JavaPairDStream.join", "link" : "org\/apache\/spark\/streaming\/api\/java\/JavaPairInputDStream.html#join[W](other:org.apache.spark.streaming.api.java.JavaPairDStream[K,W],partitioner:org.apache.spark.Partitioner):org.apache.spark.streaming.api.java.JavaPairDStream[K,(V,W)]", "kind" : "def"}, {"label" : "join", "tail" : "(other: JavaPairDStream[K, W], numPartitions: Int): JavaPairDStream[K, (V, W)]", "member" : "org.apache.spark.streaming.api.java.JavaPairDStream.join", "link" : "org\/apache\/spark\/streaming\/api\/java\/JavaPairInputDStream.html#join[W](other:org.apache.spark.streaming.api.java.JavaPairDStream[K,W],numPartitions:Int):org.apache.spark.streaming.api.java.JavaPairDStream[K,(V,W)]", "kind" : "def"}, {"label" : "join", "tail" : "(other: JavaPairDStream[K, W]): JavaPairDStream[K, (V, W)]", "member" : "org.apache.spark.streaming.api.java.JavaPairDStream.join", "link" : "org\/apache\/spark\/streaming\/api\/java\/JavaPairInputDStream.html#join[W](other:org.apache.spark.streaming.api.java.JavaPairDStream[K,W]):org.apache.spark.streaming.api.java.JavaPairDStream[K,(V,W)]", "kind" : "def"}, {"label" : "cogroup", "tail" : "(other: JavaPairDStream[K, W], partitioner: Partitioner): JavaPairDStream[K, (Iterable[V], Iterable[W])]", "member" : "org.apache.spark.streaming.api.java.JavaPairDStream.cogroup", "link" : "org\/apache\/spark\/streaming\/api\/java\/JavaPairInputDStream.html#cogroup[W](other:org.apache.spark.streaming.api.java.JavaPairDStream[K,W],partitioner:org.apache.spark.Partitioner):org.apache.spark.streaming.api.java.JavaPairDStream[K,(Iterable[V],Iterable[W])]", "kind" : "def"}, {"label" : "cogroup", "tail" : "(other: JavaPairDStream[K, W], numPartitions: Int): JavaPairDStream[K, (Iterable[V], Iterable[W])]", "member" : "org.apache.spark.streaming.api.java.JavaPairDStream.cogroup", "link" : "org\/apache\/spark\/streaming\/api\/java\/JavaPairInputDStream.html#cogroup[W](other:org.apache.spark.streaming.api.java.JavaPairDStream[K,W],numPartitions:Int):org.apache.spark.streaming.api.java.JavaPairDStream[K,(Iterable[V],Iterable[W])]", "kind" : "def"}, {"label" : "cogroup", "tail" : "(other: JavaPairDStream[K, W]): JavaPairDStream[K, (Iterable[V], Iterable[W])]", "member" : "org.apache.spark.streaming.api.java.JavaPairDStream.cogroup", "link" : "org\/apache\/spark\/streaming\/api\/java\/JavaPairInputDStream.html#cogroup[W](other:org.apache.spark.streaming.api.java.JavaPairDStream[K,W]):org.apache.spark.streaming.api.java.JavaPairDStream[K,(Iterable[V],Iterable[W])]", "kind" : "def"}, {"label" : "flatMapValues", "tail" : "(f: FlatMapFunction[V, U]): JavaPairDStream[K, U]", "member" : "org.apache.spark.streaming.api.java.JavaPairDStream.flatMapValues", "link" : "org\/apache\/spark\/streaming\/api\/java\/JavaPairInputDStream.html#flatMapValues[U](f:org.apache.spark.api.java.function.FlatMapFunction[V,U]):org.apache.spark.streaming.api.java.JavaPairDStream[K,U]", "kind" : "def"}, {"label" : "mapValues", "tail" : "(f: Function[V, U]): JavaPairDStream[K, U]", "member" : "org.apache.spark.streaming.api.java.JavaPairDStream.mapValues", "link" : "org\/apache\/spark\/streaming\/api\/java\/JavaPairInputDStream.html#mapValues[U](f:org.apache.spark.api.java.function.Function[V,U]):org.apache.spark.streaming.api.java.JavaPairDStream[K,U]", "kind" : "def"}, {"label" : "updateStateByKey", "tail" : "(updateFunc: Function2[List[V], Optional[S], Optional[S]], partitioner: Partitioner, initialRDD: JavaPairRDD[K, S]): JavaPairDStream[K, S]", "member" : "org.apache.spark.streaming.api.java.JavaPairDStream.updateStateByKey", "link" : "org\/apache\/spark\/streaming\/api\/java\/JavaPairInputDStream.html#updateStateByKey[S](updateFunc:org.apache.spark.api.java.function.Function2[java.util.List[V],org.apache.spark.api.java.Optional[S],org.apache.spark.api.java.Optional[S]],partitioner:org.apache.spark.Partitioner,initialRDD:org.apache.spark.api.java.JavaPairRDD[K,S]):org.apache.spark.streaming.api.java.JavaPairDStream[K,S]", "kind" : "def"}, {"label" : "updateStateByKey", "tail" : "(updateFunc: Function2[List[V], Optional[S], Optional[S]], partitioner: Partitioner): JavaPairDStream[K, S]", "member" : "org.apache.spark.streaming.api.java.JavaPairDStream.updateStateByKey", "link" : "org\/apache\/spark\/streaming\/api\/java\/JavaPairInputDStream.html#updateStateByKey[S](updateFunc:org.apache.spark.api.java.function.Function2[java.util.List[V],org.apache.spark.api.java.Optional[S],org.apache.spark.api.java.Optional[S]],partitioner:org.apache.spark.Partitioner):org.apache.spark.streaming.api.java.JavaPairDStream[K,S]", "kind" : "def"}, {"label" : "updateStateByKey", "tail" : "(updateFunc: Function2[List[V], Optional[S], Optional[S]], numPartitions: Int): JavaPairDStream[K, S]", "member" : "org.apache.spark.streaming.api.java.JavaPairDStream.updateStateByKey", "link" : "org\/apache\/spark\/streaming\/api\/java\/JavaPairInputDStream.html#updateStateByKey[S](updateFunc:org.apache.spark.api.java.function.Function2[java.util.List[V],org.apache.spark.api.java.Optional[S],org.apache.spark.api.java.Optional[S]],numPartitions:Int):org.apache.spark.streaming.api.java.JavaPairDStream[K,S]", "kind" : "def"}, {"label" : "updateStateByKey", "tail" : "(updateFunc: Function2[List[V], Optional[S], Optional[S]]): JavaPairDStream[K, S]", "member" : "org.apache.spark.streaming.api.java.JavaPairDStream.updateStateByKey", "link" : "org\/apache\/spark\/streaming\/api\/java\/JavaPairInputDStream.html#updateStateByKey[S](updateFunc:org.apache.spark.api.java.function.Function2[java.util.List[V],org.apache.spark.api.java.Optional[S],org.apache.spark.api.java.Optional[S]]):org.apache.spark.streaming.api.java.JavaPairDStream[K,S]", "kind" : "def"}, {"label" : "mapWithState", "tail" : "(spec: StateSpec[K, V, StateType, MappedType]): JavaMapWithStateDStream[K, V, StateType, MappedType]", "member" : "org.apache.spark.streaming.api.java.JavaPairDStream.mapWithState", "link" : "org\/apache\/spark\/streaming\/api\/java\/JavaPairInputDStream.html#mapWithState[StateType,MappedType](spec:org.apache.spark.streaming.StateSpec[K,V,StateType,MappedType]):org.apache.spark.streaming.api.java.JavaMapWithStateDStream[K,V,StateType,MappedType]", "kind" : "def"}, {"label" : "reduceByKeyAndWindow", "tail" : "(reduceFunc: Function2[V, V, V], invReduceFunc: Function2[V, V, V], windowDuration: Duration, slideDuration: Duration, partitioner: Partitioner, filterFunc: Function[(K, V), Boolean]): JavaPairDStream[K, V]", "member" : "org.apache.spark.streaming.api.java.JavaPairDStream.reduceByKeyAndWindow", "link" : "org\/apache\/spark\/streaming\/api\/java\/JavaPairInputDStream.html#reduceByKeyAndWindow(reduceFunc:org.apache.spark.api.java.function.Function2[V,V,V],invReduceFunc:org.apache.spark.api.java.function.Function2[V,V,V],windowDuration:org.apache.spark.streaming.Duration,slideDuration:org.apache.spark.streaming.Duration,partitioner:org.apache.spark.Partitioner,filterFunc:org.apache.spark.api.java.function.Function[(K,V),Boolean]):org.apache.spark.streaming.api.java.JavaPairDStream[K,V]", "kind" : "def"}, {"label" : "reduceByKeyAndWindow", "tail" : "(reduceFunc: Function2[V, V, V], invReduceFunc: Function2[V, V, V], windowDuration: Duration, slideDuration: Duration, numPartitions: Int, filterFunc: Function[(K, V), Boolean]): JavaPairDStream[K, V]", "member" : "org.apache.spark.streaming.api.java.JavaPairDStream.reduceByKeyAndWindow", "link" : "org\/apache\/spark\/streaming\/api\/java\/JavaPairInputDStream.html#reduceByKeyAndWindow(reduceFunc:org.apache.spark.api.java.function.Function2[V,V,V],invReduceFunc:org.apache.spark.api.java.function.Function2[V,V,V],windowDuration:org.apache.spark.streaming.Duration,slideDuration:org.apache.spark.streaming.Duration,numPartitions:Int,filterFunc:org.apache.spark.api.java.function.Function[(K,V),Boolean]):org.apache.spark.streaming.api.java.JavaPairDStream[K,V]", "kind" : "def"}, {"label" : "reduceByKeyAndWindow", "tail" : "(reduceFunc: Function2[V, V, V], invReduceFunc: Function2[V, V, V], windowDuration: Duration, slideDuration: Duration): JavaPairDStream[K, V]", "member" : "org.apache.spark.streaming.api.java.JavaPairDStream.reduceByKeyAndWindow", "link" : "org\/apache\/spark\/streaming\/api\/java\/JavaPairInputDStream.html#reduceByKeyAndWindow(reduceFunc:org.apache.spark.api.java.function.Function2[V,V,V],invReduceFunc:org.apache.spark.api.java.function.Function2[V,V,V],windowDuration:org.apache.spark.streaming.Duration,slideDuration:org.apache.spark.streaming.Duration):org.apache.spark.streaming.api.java.JavaPairDStream[K,V]", "kind" : "def"}, {"label" : "reduceByKeyAndWindow", "tail" : "(reduceFunc: Function2[V, V, V], windowDuration: Duration, slideDuration: Duration, partitioner: Partitioner): JavaPairDStream[K, V]", "member" : "org.apache.spark.streaming.api.java.JavaPairDStream.reduceByKeyAndWindow", "link" : "org\/apache\/spark\/streaming\/api\/java\/JavaPairInputDStream.html#reduceByKeyAndWindow(reduceFunc:org.apache.spark.api.java.function.Function2[V,V,V],windowDuration:org.apache.spark.streaming.Duration,slideDuration:org.apache.spark.streaming.Duration,partitioner:org.apache.spark.Partitioner):org.apache.spark.streaming.api.java.JavaPairDStream[K,V]", "kind" : "def"}, {"label" : "reduceByKeyAndWindow", "tail" : "(reduceFunc: Function2[V, V, V], windowDuration: Duration, slideDuration: Duration, numPartitions: Int): JavaPairDStream[K, V]", "member" : "org.apache.spark.streaming.api.java.JavaPairDStream.reduceByKeyAndWindow", "link" : "org\/apache\/spark\/streaming\/api\/java\/JavaPairInputDStream.html#reduceByKeyAndWindow(reduceFunc:org.apache.spark.api.java.function.Function2[V,V,V],windowDuration:org.apache.spark.streaming.Duration,slideDuration:org.apache.spark.streaming.Duration,numPartitions:Int):org.apache.spark.streaming.api.java.JavaPairDStream[K,V]", "kind" : "def"}, {"label" : "reduceByKeyAndWindow", "tail" : "(reduceFunc: Function2[V, V, V], windowDuration: Duration, slideDuration: Duration): JavaPairDStream[K, V]", "member" : "org.apache.spark.streaming.api.java.JavaPairDStream.reduceByKeyAndWindow", "link" : "org\/apache\/spark\/streaming\/api\/java\/JavaPairInputDStream.html#reduceByKeyAndWindow(reduceFunc:org.apache.spark.api.java.function.Function2[V,V,V],windowDuration:org.apache.spark.streaming.Duration,slideDuration:org.apache.spark.streaming.Duration):org.apache.spark.streaming.api.java.JavaPairDStream[K,V]", "kind" : "def"}, {"label" : "reduceByKeyAndWindow", "tail" : "(reduceFunc: Function2[V, V, V], windowDuration: Duration): JavaPairDStream[K, V]", "member" : "org.apache.spark.streaming.api.java.JavaPairDStream.reduceByKeyAndWindow", "link" : "org\/apache\/spark\/streaming\/api\/java\/JavaPairInputDStream.html#reduceByKeyAndWindow(reduceFunc:org.apache.spark.api.java.function.Function2[V,V,V],windowDuration:org.apache.spark.streaming.Duration):org.apache.spark.streaming.api.java.JavaPairDStream[K,V]", "kind" : "def"}, {"label" : "groupByKeyAndWindow", "tail" : "(windowDuration: Duration, slideDuration: Duration, partitioner: Partitioner): JavaPairDStream[K, Iterable[V]]", "member" : "org.apache.spark.streaming.api.java.JavaPairDStream.groupByKeyAndWindow", "link" : "org\/apache\/spark\/streaming\/api\/java\/JavaPairInputDStream.html#groupByKeyAndWindow(windowDuration:org.apache.spark.streaming.Duration,slideDuration:org.apache.spark.streaming.Duration,partitioner:org.apache.spark.Partitioner):org.apache.spark.streaming.api.java.JavaPairDStream[K,Iterable[V]]", "kind" : "def"}, {"label" : "groupByKeyAndWindow", "tail" : "(windowDuration: Duration, slideDuration: Duration, numPartitions: Int): JavaPairDStream[K, Iterable[V]]", "member" : "org.apache.spark.streaming.api.java.JavaPairDStream.groupByKeyAndWindow", "link" : "org\/apache\/spark\/streaming\/api\/java\/JavaPairInputDStream.html#groupByKeyAndWindow(windowDuration:org.apache.spark.streaming.Duration,slideDuration:org.apache.spark.streaming.Duration,numPartitions:Int):org.apache.spark.streaming.api.java.JavaPairDStream[K,Iterable[V]]", "kind" : "def"}, {"label" : "groupByKeyAndWindow", "tail" : "(windowDuration: Duration, slideDuration: Duration): JavaPairDStream[K, Iterable[V]]", "member" : "org.apache.spark.streaming.api.java.JavaPairDStream.groupByKeyAndWindow", "link" : "org\/apache\/spark\/streaming\/api\/java\/JavaPairInputDStream.html#groupByKeyAndWindow(windowDuration:org.apache.spark.streaming.Duration,slideDuration:org.apache.spark.streaming.Duration):org.apache.spark.streaming.api.java.JavaPairDStream[K,Iterable[V]]", "kind" : "def"}, {"label" : "groupByKeyAndWindow", "tail" : "(windowDuration: Duration): JavaPairDStream[K, Iterable[V]]", "member" : "org.apache.spark.streaming.api.java.JavaPairDStream.groupByKeyAndWindow", "link" : "org\/apache\/spark\/streaming\/api\/java\/JavaPairInputDStream.html#groupByKeyAndWindow(windowDuration:org.apache.spark.streaming.Duration):org.apache.spark.streaming.api.java.JavaPairDStream[K,Iterable[V]]", "kind" : "def"}, {"label" : "combineByKey", "tail" : "(createCombiner: Function[V, C], mergeValue: Function2[C, V, C], mergeCombiners: Function2[C, C, C], partitioner: Partitioner, mapSideCombine: Boolean): JavaPairDStream[K, C]", "member" : "org.apache.spark.streaming.api.java.JavaPairDStream.combineByKey", "link" : "org\/apache\/spark\/streaming\/api\/java\/JavaPairInputDStream.html#combineByKey[C](createCombiner:org.apache.spark.api.java.function.Function[V,C],mergeValue:org.apache.spark.api.java.function.Function2[C,V,C],mergeCombiners:org.apache.spark.api.java.function.Function2[C,C,C],partitioner:org.apache.spark.Partitioner,mapSideCombine:Boolean):org.apache.spark.streaming.api.java.JavaPairDStream[K,C]", "kind" : "def"}, {"label" : "combineByKey", "tail" : "(createCombiner: Function[V, C], mergeValue: Function2[C, V, C], mergeCombiners: Function2[C, C, C], partitioner: Partitioner): JavaPairDStream[K, C]", "member" : "org.apache.spark.streaming.api.java.JavaPairDStream.combineByKey", "link" : "org\/apache\/spark\/streaming\/api\/java\/JavaPairInputDStream.html#combineByKey[C](createCombiner:org.apache.spark.api.java.function.Function[V,C],mergeValue:org.apache.spark.api.java.function.Function2[C,V,C],mergeCombiners:org.apache.spark.api.java.function.Function2[C,C,C],partitioner:org.apache.spark.Partitioner):org.apache.spark.streaming.api.java.JavaPairDStream[K,C]", "kind" : "def"}, {"label" : "reduceByKey", "tail" : "(func: Function2[V, V, V], partitioner: Partitioner): JavaPairDStream[K, V]", "member" : "org.apache.spark.streaming.api.java.JavaPairDStream.reduceByKey", "link" : "org\/apache\/spark\/streaming\/api\/java\/JavaPairInputDStream.html#reduceByKey(func:org.apache.spark.api.java.function.Function2[V,V,V],partitioner:org.apache.spark.Partitioner):org.apache.spark.streaming.api.java.JavaPairDStream[K,V]", "kind" : "def"}, {"label" : "reduceByKey", "tail" : "(func: Function2[V, V, V], numPartitions: Int): JavaPairDStream[K, V]", "member" : "org.apache.spark.streaming.api.java.JavaPairDStream.reduceByKey", "link" : "org\/apache\/spark\/streaming\/api\/java\/JavaPairInputDStream.html#reduceByKey(func:org.apache.spark.api.java.function.Function2[V,V,V],numPartitions:Int):org.apache.spark.streaming.api.java.JavaPairDStream[K,V]", "kind" : "def"}, {"label" : "reduceByKey", "tail" : "(func: Function2[V, V, V]): JavaPairDStream[K, V]", "member" : "org.apache.spark.streaming.api.java.JavaPairDStream.reduceByKey", "link" : "org\/apache\/spark\/streaming\/api\/java\/JavaPairInputDStream.html#reduceByKey(func:org.apache.spark.api.java.function.Function2[V,V,V]):org.apache.spark.streaming.api.java.JavaPairDStream[K,V]", "kind" : "def"}, {"label" : "groupByKey", "tail" : "(partitioner: Partitioner): JavaPairDStream[K, Iterable[V]]", "member" : "org.apache.spark.streaming.api.java.JavaPairDStream.groupByKey", "link" : "org\/apache\/spark\/streaming\/api\/java\/JavaPairInputDStream.html#groupByKey(partitioner:org.apache.spark.Partitioner):org.apache.spark.streaming.api.java.JavaPairDStream[K,Iterable[V]]", "kind" : "def"}, {"label" : "groupByKey", "tail" : "(numPartitions: Int): JavaPairDStream[K, Iterable[V]]", "member" : "org.apache.spark.streaming.api.java.JavaPairDStream.groupByKey", "link" : "org\/apache\/spark\/streaming\/api\/java\/JavaPairInputDStream.html#groupByKey(numPartitions:Int):org.apache.spark.streaming.api.java.JavaPairDStream[K,Iterable[V]]", "kind" : "def"}, {"label" : "groupByKey", "tail" : "(): JavaPairDStream[K, Iterable[V]]", "member" : "org.apache.spark.streaming.api.java.JavaPairDStream.groupByKey", "link" : "org\/apache\/spark\/streaming\/api\/java\/JavaPairInputDStream.html#groupByKey():org.apache.spark.streaming.api.java.JavaPairDStream[K,Iterable[V]]", "kind" : "def"}, {"label" : "union", "tail" : "(that: JavaPairDStream[K, V]): JavaPairDStream[K, V]", "member" : "org.apache.spark.streaming.api.java.JavaPairDStream.union", "link" : "org\/apache\/spark\/streaming\/api\/java\/JavaPairInputDStream.html#union(that:org.apache.spark.streaming.api.java.JavaPairDStream[K,V]):org.apache.spark.streaming.api.java.JavaPairDStream[K,V]", "kind" : "def"}, {"label" : "window", "tail" : "(windowDuration: Duration, slideDuration: Duration): JavaPairDStream[K, V]", "member" : "org.apache.spark.streaming.api.java.JavaPairDStream.window", "link" : "org\/apache\/spark\/streaming\/api\/java\/JavaPairInputDStream.html#window(windowDuration:org.apache.spark.streaming.Duration,slideDuration:org.apache.spark.streaming.Duration):org.apache.spark.streaming.api.java.JavaPairDStream[K,V]", "kind" : "def"}, {"label" : "window", "tail" : "(windowDuration: Duration): JavaPairDStream[K, V]", "member" : "org.apache.spark.streaming.api.java.JavaPairDStream.window", "link" : "org\/apache\/spark\/streaming\/api\/java\/JavaPairInputDStream.html#window(windowDuration:org.apache.spark.streaming.Duration):org.apache.spark.streaming.api.java.JavaPairDStream[K,V]", "kind" : "def"}, {"label" : "compute", "tail" : "(validTime: Time): JavaPairRDD[K, V]", "member" : "org.apache.spark.streaming.api.java.JavaPairDStream.compute", "link" : "org\/apache\/spark\/streaming\/api\/java\/JavaPairInputDStream.html#compute(validTime:org.apache.spark.streaming.Time):org.apache.spark.api.java.JavaPairRDD[K,V]", "kind" : "def"}, {"label" : "repartition", "tail" : "(numPartitions: Int): JavaPairDStream[K, V]", "member" : "org.apache.spark.streaming.api.java.JavaPairDStream.repartition", "link" : "org\/apache\/spark\/streaming\/api\/java\/JavaPairInputDStream.html#repartition(numPartitions:Int):org.apache.spark.streaming.api.java.JavaPairDStream[K,V]", "kind" : "def"}, {"label" : "persist", "tail" : "(storageLevel: StorageLevel): JavaPairDStream[K, V]", "member" : "org.apache.spark.streaming.api.java.JavaPairDStream.persist", "link" : "org\/apache\/spark\/streaming\/api\/java\/JavaPairInputDStream.html#persist(storageLevel:org.apache.spark.storage.StorageLevel):org.apache.spark.streaming.api.java.JavaPairDStream[K,V]", "kind" : "def"}, {"label" : "persist", "tail" : "(): JavaPairDStream[K, V]", "member" : "org.apache.spark.streaming.api.java.JavaPairDStream.persist", "link" : "org\/apache\/spark\/streaming\/api\/java\/JavaPairInputDStream.html#persist():org.apache.spark.streaming.api.java.JavaPairDStream[K,V]", "kind" : "def"}, {"label" : "cache", "tail" : "(): JavaPairDStream[K, V]", "member" : "org.apache.spark.streaming.api.java.JavaPairDStream.cache", "link" : "org\/apache\/spark\/streaming\/api\/java\/JavaPairInputDStream.html#cache():org.apache.spark.streaming.api.java.JavaPairDStream[K,V]", "kind" : "def"}, {"label" : "filter", "tail" : "(f: Function[(K, V), Boolean]): JavaPairDStream[K, V]", "member" : "org.apache.spark.streaming.api.java.JavaPairDStream.filter", "link" : "org\/apache\/spark\/streaming\/api\/java\/JavaPairInputDStream.html#filter(f:org.apache.spark.api.java.function.Function[(K,V),Boolean]):org.apache.spark.streaming.api.java.JavaPairDStream[K,V]", "kind" : "def"}, {"label" : "wrapRDD", "tail" : "(rdd: RDD[(K, V)]): JavaPairRDD[K, V]", "member" : "org.apache.spark.streaming.api.java.JavaPairDStream.wrapRDD", "link" : "org\/apache\/spark\/streaming\/api\/java\/JavaPairInputDStream.html#wrapRDD(rdd:org.apache.spark.rdd.RDD[(K,V)]):org.apache.spark.api.java.JavaPairRDD[K,V]", "kind" : "def"}, {"label" : "vManifest", "tail" : ": ClassTag[V]", "member" : "org.apache.spark.streaming.api.java.JavaPairDStream.vManifest", "link" : "org\/apache\/spark\/streaming\/api\/java\/JavaPairInputDStream.html#vManifest:scala.reflect.ClassTag[V]", "kind" : "implicit val"}, {"label" : "kManifest", "tail" : ": ClassTag[K]", "member" : "org.apache.spark.streaming.api.java.JavaPairDStream.kManifest", "link" : "org\/apache\/spark\/streaming\/api\/java\/JavaPairInputDStream.html#kManifest:scala.reflect.ClassTag[K]", "kind" : "implicit val"}, {"label" : "dstream", "tail" : ": DStream[(K, V)]", "member" : "org.apache.spark.streaming.api.java.JavaPairDStream.dstream", "link" : "org\/apache\/spark\/streaming\/api\/java\/JavaPairInputDStream.html#dstream:org.apache.spark.streaming.dstream.DStream[(K,V)]", "kind" : "val"}, {"label" : "checkpoint", "tail" : "(interval: Duration): DStream[(K, V)]", "member" : "org.apache.spark.streaming.api.java.JavaDStreamLike.checkpoint", "link" : "org\/apache\/spark\/streaming\/api\/java\/JavaPairInputDStream.html#checkpoint(interval:org.apache.spark.streaming.Duration):org.apache.spark.streaming.dstream.DStream[T]", "kind" : "def"}, {"label" : "transformWithToPair", "tail" : "(other: JavaPairDStream[K2, V2], transformFunc: Function3[JavaPairRDD[K, V], JavaPairRDD[K2, V2], Time, JavaPairRDD[K3, V3]]): JavaPairDStream[K3, V3]", "member" : "org.apache.spark.streaming.api.java.JavaDStreamLike.transformWithToPair", "link" : "org\/apache\/spark\/streaming\/api\/java\/JavaPairInputDStream.html#transformWithToPair[K2,V2,K3,V3](other:org.apache.spark.streaming.api.java.JavaPairDStream[K2,V2],transformFunc:org.apache.spark.api.java.function.Function3[R,org.apache.spark.api.java.JavaPairRDD[K2,V2],org.apache.spark.streaming.Time,org.apache.spark.api.java.JavaPairRDD[K3,V3]]):org.apache.spark.streaming.api.java.JavaPairDStream[K3,V3]", "kind" : "def"}, {"label" : "transformWith", "tail" : "(other: JavaPairDStream[K2, V2], transformFunc: Function3[JavaPairRDD[K, V], JavaPairRDD[K2, V2], Time, JavaRDD[W]]): JavaDStream[W]", "member" : "org.apache.spark.streaming.api.java.JavaDStreamLike.transformWith", "link" : "org\/apache\/spark\/streaming\/api\/java\/JavaPairInputDStream.html#transformWith[K2,V2,W](other:org.apache.spark.streaming.api.java.JavaPairDStream[K2,V2],transformFunc:org.apache.spark.api.java.function.Function3[R,org.apache.spark.api.java.JavaPairRDD[K2,V2],org.apache.spark.streaming.Time,org.apache.spark.api.java.JavaRDD[W]]):org.apache.spark.streaming.api.java.JavaDStream[W]", "kind" : "def"}, {"label" : "transformWithToPair", "tail" : "(other: JavaDStream[U], transformFunc: Function3[JavaPairRDD[K, V], JavaRDD[U], Time, JavaPairRDD[K2, V2]]): JavaPairDStream[K2, V2]", "member" : "org.apache.spark.streaming.api.java.JavaDStreamLike.transformWithToPair", "link" : "org\/apache\/spark\/streaming\/api\/java\/JavaPairInputDStream.html#transformWithToPair[U,K2,V2](other:org.apache.spark.streaming.api.java.JavaDStream[U],transformFunc:org.apache.spark.api.java.function.Function3[R,org.apache.spark.api.java.JavaRDD[U],org.apache.spark.streaming.Time,org.apache.spark.api.java.JavaPairRDD[K2,V2]]):org.apache.spark.streaming.api.java.JavaPairDStream[K2,V2]", "kind" : "def"}, {"label" : "transformWith", "tail" : "(other: JavaDStream[U], transformFunc: Function3[JavaPairRDD[K, V], JavaRDD[U], Time, JavaRDD[W]]): JavaDStream[W]", "member" : "org.apache.spark.streaming.api.java.JavaDStreamLike.transformWith", "link" : "org\/apache\/spark\/streaming\/api\/java\/JavaPairInputDStream.html#transformWith[U,W](other:org.apache.spark.streaming.api.java.JavaDStream[U],transformFunc:org.apache.spark.api.java.function.Function3[R,org.apache.spark.api.java.JavaRDD[U],org.apache.spark.streaming.Time,org.apache.spark.api.java.JavaRDD[W]]):org.apache.spark.streaming.api.java.JavaDStream[W]", "kind" : "def"}, {"label" : "transformToPair", "tail" : "(transformFunc: Function2[JavaPairRDD[K, V], Time, JavaPairRDD[K2, V2]]): JavaPairDStream[K2, V2]", "member" : "org.apache.spark.streaming.api.java.JavaDStreamLike.transformToPair", "link" : "org\/apache\/spark\/streaming\/api\/java\/JavaPairInputDStream.html#transformToPair[K2,V2](transformFunc:org.apache.spark.api.java.function.Function2[R,org.apache.spark.streaming.Time,org.apache.spark.api.java.JavaPairRDD[K2,V2]]):org.apache.spark.streaming.api.java.JavaPairDStream[K2,V2]", "kind" : "def"}, {"label" : "transformToPair", "tail" : "(transformFunc: Function[JavaPairRDD[K, V], JavaPairRDD[K2, V2]]): JavaPairDStream[K2, V2]", "member" : "org.apache.spark.streaming.api.java.JavaDStreamLike.transformToPair", "link" : "org\/apache\/spark\/streaming\/api\/java\/JavaPairInputDStream.html#transformToPair[K2,V2](transformFunc:org.apache.spark.api.java.function.Function[R,org.apache.spark.api.java.JavaPairRDD[K2,V2]]):org.apache.spark.streaming.api.java.JavaPairDStream[K2,V2]", "kind" : "def"}, {"label" : "transform", "tail" : "(transformFunc: Function2[JavaPairRDD[K, V], Time, JavaRDD[U]]): JavaDStream[U]", "member" : "org.apache.spark.streaming.api.java.JavaDStreamLike.transform", "link" : "org\/apache\/spark\/streaming\/api\/java\/JavaPairInputDStream.html#transform[U](transformFunc:org.apache.spark.api.java.function.Function2[R,org.apache.spark.streaming.Time,org.apache.spark.api.java.JavaRDD[U]]):org.apache.spark.streaming.api.java.JavaDStream[U]", "kind" : "def"}, {"label" : "transform", "tail" : "(transformFunc: Function[JavaPairRDD[K, V], JavaRDD[U]]): JavaDStream[U]", "member" : "org.apache.spark.streaming.api.java.JavaDStreamLike.transform", "link" : "org\/apache\/spark\/streaming\/api\/java\/JavaPairInputDStream.html#transform[U](transformFunc:org.apache.spark.api.java.function.Function[R,org.apache.spark.api.java.JavaRDD[U]]):org.apache.spark.streaming.api.java.JavaDStream[U]", "kind" : "def"}, {"label" : "foreachRDD", "tail" : "(foreachFunc: VoidFunction2[JavaPairRDD[K, V], Time]): Unit", "member" : "org.apache.spark.streaming.api.java.JavaDStreamLike.foreachRDD", "link" : "org\/apache\/spark\/streaming\/api\/java\/JavaPairInputDStream.html#foreachRDD(foreachFunc:org.apache.spark.api.java.function.VoidFunction2[R,org.apache.spark.streaming.Time]):Unit", "kind" : "def"}, {"label" : "foreachRDD", "tail" : "(foreachFunc: VoidFunction[JavaPairRDD[K, V]]): Unit", "member" : "org.apache.spark.streaming.api.java.JavaDStreamLike.foreachRDD", "link" : "org\/apache\/spark\/streaming\/api\/java\/JavaPairInputDStream.html#foreachRDD(foreachFunc:org.apache.spark.api.java.function.VoidFunction[R]):Unit", "kind" : "def"}, {"label" : "slice", "tail" : "(fromTime: Time, toTime: Time): List[JavaPairRDD[K, V]]", "member" : "org.apache.spark.streaming.api.java.JavaDStreamLike.slice", "link" : "org\/apache\/spark\/streaming\/api\/java\/JavaPairInputDStream.html#slice(fromTime:org.apache.spark.streaming.Time,toTime:org.apache.spark.streaming.Time):java.util.List[R]", "kind" : "def"}, {"label" : "reduceByWindow", "tail" : "(reduceFunc: Function2[(K, V), (K, V), (K, V)], invReduceFunc: Function2[(K, V), (K, V), (K, V)], windowDuration: Duration, slideDuration: Duration): JavaDStream[(K, V)]", "member" : "org.apache.spark.streaming.api.java.JavaDStreamLike.reduceByWindow", "link" : "org\/apache\/spark\/streaming\/api\/java\/JavaPairInputDStream.html#reduceByWindow(reduceFunc:org.apache.spark.api.java.function.Function2[T,T,T],invReduceFunc:org.apache.spark.api.java.function.Function2[T,T,T],windowDuration:org.apache.spark.streaming.Duration,slideDuration:org.apache.spark.streaming.Duration):org.apache.spark.streaming.api.java.JavaDStream[T]", "kind" : "def"}, {"label" : "reduceByWindow", "tail" : "(reduceFunc: Function2[(K, V), (K, V), (K, V)], windowDuration: Duration, slideDuration: Duration): JavaDStream[(K, V)]", "member" : "org.apache.spark.streaming.api.java.JavaDStreamLike.reduceByWindow", "link" : "org\/apache\/spark\/streaming\/api\/java\/JavaPairInputDStream.html#reduceByWindow(reduceFunc:org.apache.spark.api.java.function.Function2[T,T,T],windowDuration:org.apache.spark.streaming.Duration,slideDuration:org.apache.spark.streaming.Duration):org.apache.spark.streaming.api.java.JavaDStream[T]", "kind" : "def"}, {"label" : "reduce", "tail" : "(f: Function2[(K, V), (K, V), (K, V)]): JavaDStream[(K, V)]", "member" : "org.apache.spark.streaming.api.java.JavaDStreamLike.reduce", "link" : "org\/apache\/spark\/streaming\/api\/java\/JavaPairInputDStream.html#reduce(f:org.apache.spark.api.java.function.Function2[T,T,T]):org.apache.spark.streaming.api.java.JavaDStream[T]", "kind" : "def"}, {"label" : "mapPartitionsToPair", "tail" : "(f: PairFlatMapFunction[Iterator[(K, V)], K2, V2]): JavaPairDStream[K2, V2]", "member" : "org.apache.spark.streaming.api.java.JavaDStreamLike.mapPartitionsToPair", "link" : "org\/apache\/spark\/streaming\/api\/java\/JavaPairInputDStream.html#mapPartitionsToPair[K2,V2](f:org.apache.spark.api.java.function.PairFlatMapFunction[java.util.Iterator[T],K2,V2]):org.apache.spark.streaming.api.java.JavaPairDStream[K2,V2]", "kind" : "def"}, {"label" : "mapPartitions", "tail" : "(f: FlatMapFunction[Iterator[(K, V)], U]): JavaDStream[U]", "member" : "org.apache.spark.streaming.api.java.JavaDStreamLike.mapPartitions", "link" : "org\/apache\/spark\/streaming\/api\/java\/JavaPairInputDStream.html#mapPartitions[U](f:org.apache.spark.api.java.function.FlatMapFunction[java.util.Iterator[T],U]):org.apache.spark.streaming.api.java.JavaDStream[U]", "kind" : "def"}, {"label" : "flatMapToPair", "tail" : "(f: PairFlatMapFunction[(K, V), K2, V2]): JavaPairDStream[K2, V2]", "member" : "org.apache.spark.streaming.api.java.JavaDStreamLike.flatMapToPair", "link" : "org\/apache\/spark\/streaming\/api\/java\/JavaPairInputDStream.html#flatMapToPair[K2,V2](f:org.apache.spark.api.java.function.PairFlatMapFunction[T,K2,V2]):org.apache.spark.streaming.api.java.JavaPairDStream[K2,V2]", "kind" : "def"}, {"label" : "flatMap", "tail" : "(f: FlatMapFunction[(K, V), U]): JavaDStream[U]", "member" : "org.apache.spark.streaming.api.java.JavaDStreamLike.flatMap", "link" : "org\/apache\/spark\/streaming\/api\/java\/JavaPairInputDStream.html#flatMap[U](f:org.apache.spark.api.java.function.FlatMapFunction[T,U]):org.apache.spark.streaming.api.java.JavaDStream[U]", "kind" : "def"}, {"label" : "mapToPair", "tail" : "(f: PairFunction[(K, V), K2, V2]): JavaPairDStream[K2, V2]", "member" : "org.apache.spark.streaming.api.java.JavaDStreamLike.mapToPair", "link" : "org\/apache\/spark\/streaming\/api\/java\/JavaPairInputDStream.html#mapToPair[K2,V2](f:org.apache.spark.api.java.function.PairFunction[T,K2,V2]):org.apache.spark.streaming.api.java.JavaPairDStream[K2,V2]", "kind" : "def"}, {"label" : "map", "tail" : "(f: Function[(K, V), U]): JavaDStream[U]", "member" : "org.apache.spark.streaming.api.java.JavaDStreamLike.map", "link" : "org\/apache\/spark\/streaming\/api\/java\/JavaPairInputDStream.html#map[U](f:org.apache.spark.api.java.function.Function[T,U]):org.apache.spark.streaming.api.java.JavaDStream[U]", "kind" : "def"}, {"label" : "context", "tail" : "(): StreamingContext", "member" : "org.apache.spark.streaming.api.java.JavaDStreamLike.context", "link" : "org\/apache\/spark\/streaming\/api\/java\/JavaPairInputDStream.html#context():org.apache.spark.streaming.StreamingContext", "kind" : "def"}, {"label" : "glom", "tail" : "(): JavaDStream[List[(K, V)]]", "member" : "org.apache.spark.streaming.api.java.JavaDStreamLike.glom", "link" : "org\/apache\/spark\/streaming\/api\/java\/JavaPairInputDStream.html#glom():org.apache.spark.streaming.api.java.JavaDStream[java.util.List[T]]", "kind" : "def"}, {"label" : "countByValueAndWindow", "tail" : "(windowDuration: Duration, slideDuration: Duration, numPartitions: Int): JavaPairDStream[(K, V), Long]", "member" : "org.apache.spark.streaming.api.java.JavaDStreamLike.countByValueAndWindow", "link" : "org\/apache\/spark\/streaming\/api\/java\/JavaPairInputDStream.html#countByValueAndWindow(windowDuration:org.apache.spark.streaming.Duration,slideDuration:org.apache.spark.streaming.Duration,numPartitions:Int):org.apache.spark.streaming.api.java.JavaPairDStream[T,Long]", "kind" : "def"}, {"label" : "countByValueAndWindow", "tail" : "(windowDuration: Duration, slideDuration: Duration): JavaPairDStream[(K, V), Long]", "member" : "org.apache.spark.streaming.api.java.JavaDStreamLike.countByValueAndWindow", "link" : "org\/apache\/spark\/streaming\/api\/java\/JavaPairInputDStream.html#countByValueAndWindow(windowDuration:org.apache.spark.streaming.Duration,slideDuration:org.apache.spark.streaming.Duration):org.apache.spark.streaming.api.java.JavaPairDStream[T,Long]", "kind" : "def"}, {"label" : "countByWindow", "tail" : "(windowDuration: Duration, slideDuration: Duration): JavaDStream[Long]", "member" : "org.apache.spark.streaming.api.java.JavaDStreamLike.countByWindow", "link" : "org\/apache\/spark\/streaming\/api\/java\/JavaPairInputDStream.html#countByWindow(windowDuration:org.apache.spark.streaming.Duration,slideDuration:org.apache.spark.streaming.Duration):org.apache.spark.streaming.api.java.JavaDStream[Long]", "kind" : "def"}, {"label" : "countByValue", "tail" : "(numPartitions: Int): JavaPairDStream[(K, V), Long]", "member" : "org.apache.spark.streaming.api.java.JavaDStreamLike.countByValue", "link" : "org\/apache\/spark\/streaming\/api\/java\/JavaPairInputDStream.html#countByValue(numPartitions:Int):org.apache.spark.streaming.api.java.JavaPairDStream[T,Long]", "kind" : "def"}, {"label" : "countByValue", "tail" : "(): JavaPairDStream[(K, V), Long]", "member" : "org.apache.spark.streaming.api.java.JavaDStreamLike.countByValue", "link" : "org\/apache\/spark\/streaming\/api\/java\/JavaPairInputDStream.html#countByValue():org.apache.spark.streaming.api.java.JavaPairDStream[T,Long]", "kind" : "def"}, {"label" : "count", "tail" : "(): JavaDStream[Long]", "member" : "org.apache.spark.streaming.api.java.JavaDStreamLike.count", "link" : "org\/apache\/spark\/streaming\/api\/java\/JavaPairInputDStream.html#count():org.apache.spark.streaming.api.java.JavaDStream[Long]", "kind" : "def"}, {"label" : "print", "tail" : "(num: Int): Unit", "member" : "org.apache.spark.streaming.api.java.JavaDStreamLike.print", "link" : "org\/apache\/spark\/streaming\/api\/java\/JavaPairInputDStream.html#print(num:Int):Unit", "kind" : "def"}, {"label" : "print", "tail" : "(): Unit", "member" : "org.apache.spark.streaming.api.java.JavaDStreamLike.print", "link" : "org\/apache\/spark\/streaming\/api\/java\/JavaPairInputDStream.html#print():Unit", "kind" : "def"}, {"label" : "scalaIntToJavaLong", "tail" : "(in: DStream[Long]): JavaDStream[Long]", "member" : "org.apache.spark.streaming.api.java.JavaDStreamLike.scalaIntToJavaLong", "link" : "org\/apache\/spark\/streaming\/api\/java\/JavaPairInputDStream.html#scalaIntToJavaLong(in:org.apache.spark.streaming.dstream.DStream[Long]):org.apache.spark.streaming.api.java.JavaDStream[Long]", "kind" : "implicit def"}, {"label" : "synchronized", "tail" : "(arg0: ⇒ T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "org\/apache\/spark\/streaming\/api\/java\/JavaPairInputDStream.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "org\/apache\/spark\/streaming\/api\/java\/JavaPairInputDStream.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "org\/apache\/spark\/streaming\/api\/java\/JavaPairInputDStream.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "org\/apache\/spark\/streaming\/api\/java\/JavaPairInputDStream.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "org\/apache\/spark\/streaming\/api\/java\/JavaPairInputDStream.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "org\/apache\/spark\/streaming\/api\/java\/JavaPairInputDStream.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "org\/apache\/spark\/streaming\/api\/java\/JavaPairInputDStream.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "org\/apache\/spark\/streaming\/api\/java\/JavaPairInputDStream.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "org\/apache\/spark\/streaming\/api\/java\/JavaPairInputDStream.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "org\/apache\/spark\/streaming\/api\/java\/JavaPairInputDStream.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "org\/apache\/spark\/streaming\/api\/java\/JavaPairInputDStream.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "org\/apache\/spark\/streaming\/api\/java\/JavaPairInputDStream.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "org\/apache\/spark\/streaming\/api\/java\/JavaPairInputDStream.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "org\/apache\/spark\/streaming\/api\/java\/JavaPairInputDStream.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.equals", "link" : "org\/apache\/spark\/streaming\/api\/java\/JavaPairInputDStream.html#equals(x$1:Any):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "org\/apache\/spark\/streaming\/api\/java\/JavaPairInputDStream.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_]", "member" : "scala.AnyRef.getClass", "link" : "org\/apache\/spark\/streaming\/api\/java\/JavaPairInputDStream.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "org\/apache\/spark\/streaming\/api\/java\/JavaPairInputDStream.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "org\/apache\/spark\/streaming\/api\/java\/JavaPairInputDStream.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "members_object" : [{"label" : "fromInputDStream", "tail" : "(inputDStream: InputDStream[(K, V)])(arg0: ClassTag[K], arg1: ClassTag[V]): JavaPairInputDStream[K, V]", "member" : "org.apache.spark.streaming.api.java.JavaPairInputDStream.fromInputDStream", "link" : "org\/apache\/spark\/streaming\/api\/java\/JavaPairInputDStream$.html#fromInputDStream[K,V](inputDStream:org.apache.spark.streaming.dstream.InputDStream[(K,V)])(implicitevidence$1:scala.reflect.ClassTag[K],implicitevidence$2:scala.reflect.ClassTag[V]):org.apache.spark.streaming.api.java.JavaPairInputDStream[K,V]", "kind" : "implicit def"}, {"label" : "synchronized", "tail" : "(arg0: ⇒ T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "org\/apache\/spark\/streaming\/api\/java\/JavaPairInputDStream$.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "org\/apache\/spark\/streaming\/api\/java\/JavaPairInputDStream$.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "org\/apache\/spark\/streaming\/api\/java\/JavaPairInputDStream$.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "org\/apache\/spark\/streaming\/api\/java\/JavaPairInputDStream$.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "org\/apache\/spark\/streaming\/api\/java\/JavaPairInputDStream$.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "org\/apache\/spark\/streaming\/api\/java\/JavaPairInputDStream$.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "org\/apache\/spark\/streaming\/api\/java\/JavaPairInputDStream$.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "org\/apache\/spark\/streaming\/api\/java\/JavaPairInputDStream$.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "org\/apache\/spark\/streaming\/api\/java\/JavaPairInputDStream$.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "org\/apache\/spark\/streaming\/api\/java\/JavaPairInputDStream$.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "org\/apache\/spark\/streaming\/api\/java\/JavaPairInputDStream$.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "org\/apache\/spark\/streaming\/api\/java\/JavaPairInputDStream$.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "org\/apache\/spark\/streaming\/api\/java\/JavaPairInputDStream$.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "org\/apache\/spark\/streaming\/api\/java\/JavaPairInputDStream$.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.equals", "link" : "org\/apache\/spark\/streaming\/api\/java\/JavaPairInputDStream$.html#equals(x$1:Any):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "org\/apache\/spark\/streaming\/api\/java\/JavaPairInputDStream$.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_]", "member" : "scala.AnyRef.getClass", "link" : "org\/apache\/spark\/streaming\/api\/java\/JavaPairInputDStream$.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "org\/apache\/spark\/streaming\/api\/java\/JavaPairInputDStream$.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "org\/apache\/spark\/streaming\/api\/java\/JavaPairInputDStream$.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "class" : "org\/apache\/spark\/streaming\/api\/java\/JavaPairInputDStream.html", "kind" : "class"}, {"name" : "org.apache.spark.streaming.api.java.JavaPairReceiverInputDStream", "shortDescription" : "A Java-friendly interface to org.apache.spark.streaming.dstream.ReceiverInputDStream, theabstract class for defining any input stream that receives data over the network.", "object" : "org\/apache\/spark\/streaming\/api\/java\/JavaPairReceiverInputDStream$.html", "members_class" : [{"member" : "org.apache.spark.streaming.api.java.JavaPairReceiverInputDStream#<init>", "error" : "unsupported entity"}, {"label" : "vClassTag", "tail" : ": ClassTag[V]", "member" : "org.apache.spark.streaming.api.java.JavaPairReceiverInputDStream.vClassTag", "link" : "org\/apache\/spark\/streaming\/api\/java\/JavaPairReceiverInputDStream.html#vClassTag:scala.reflect.ClassTag[V]", "kind" : "implicit val"}, {"label" : "kClassTag", "tail" : ": ClassTag[K]", "member" : "org.apache.spark.streaming.api.java.JavaPairReceiverInputDStream.kClassTag", "link" : "org\/apache\/spark\/streaming\/api\/java\/JavaPairReceiverInputDStream.html#kClassTag:scala.reflect.ClassTag[K]", "kind" : "implicit val"}, {"label" : "receiverInputDStream", "tail" : ": ReceiverInputDStream[(K, V)]", "member" : "org.apache.spark.streaming.api.java.JavaPairReceiverInputDStream.receiverInputDStream", "link" : "org\/apache\/spark\/streaming\/api\/java\/JavaPairReceiverInputDStream.html#receiverInputDStream:org.apache.spark.streaming.dstream.ReceiverInputDStream[(K,V)]", "kind" : "val"}, {"label" : "inputDStream", "tail" : ": InputDStream[(K, V)]", "member" : "org.apache.spark.streaming.api.java.JavaPairInputDStream.inputDStream", "link" : "org\/apache\/spark\/streaming\/api\/java\/JavaPairReceiverInputDStream.html#inputDStream:org.apache.spark.streaming.dstream.InputDStream[(K,V)]", "kind" : "val"}, {"label" : "classTag", "tail" : ": ClassTag[(K, V)]", "member" : "org.apache.spark.streaming.api.java.JavaPairDStream.classTag", "link" : "org\/apache\/spark\/streaming\/api\/java\/JavaPairReceiverInputDStream.html#classTag:scala.reflect.ClassTag[(K,V)]", "kind" : "val"}, {"label" : "toJavaDStream", "tail" : "(): JavaDStream[(K, V)]", "member" : "org.apache.spark.streaming.api.java.JavaPairDStream.toJavaDStream", "link" : "org\/apache\/spark\/streaming\/api\/java\/JavaPairReceiverInputDStream.html#toJavaDStream():org.apache.spark.streaming.api.java.JavaDStream[(K,V)]", "kind" : "def"}, {"label" : "saveAsNewAPIHadoopFiles", "tail" : "(prefix: String, suffix: String, keyClass: Class[_], valueClass: Class[_], outputFormatClass: Class[F], conf: Configuration): Unit", "member" : "org.apache.spark.streaming.api.java.JavaPairDStream.saveAsNewAPIHadoopFiles", "link" : "org\/apache\/spark\/streaming\/api\/java\/JavaPairReceiverInputDStream.html#saveAsNewAPIHadoopFiles[F<:org.apache.hadoop.mapreduce.OutputFormat[_,_]](prefix:String,suffix:String,keyClass:Class[_],valueClass:Class[_],outputFormatClass:Class[F],conf:org.apache.hadoop.conf.Configuration):Unit", "kind" : "def"}, {"label" : "saveAsNewAPIHadoopFiles", "tail" : "(prefix: String, suffix: String, keyClass: Class[_], valueClass: Class[_], outputFormatClass: Class[F]): Unit", "member" : "org.apache.spark.streaming.api.java.JavaPairDStream.saveAsNewAPIHadoopFiles", "link" : "org\/apache\/spark\/streaming\/api\/java\/JavaPairReceiverInputDStream.html#saveAsNewAPIHadoopFiles[F<:org.apache.hadoop.mapreduce.OutputFormat[_,_]](prefix:String,suffix:String,keyClass:Class[_],valueClass:Class[_],outputFormatClass:Class[F]):Unit", "kind" : "def"}, {"label" : "saveAsNewAPIHadoopFiles", "tail" : "(prefix: String, suffix: String): Unit", "member" : "org.apache.spark.streaming.api.java.JavaPairDStream.saveAsNewAPIHadoopFiles", "link" : "org\/apache\/spark\/streaming\/api\/java\/JavaPairReceiverInputDStream.html#saveAsNewAPIHadoopFiles(prefix:String,suffix:String):Unit", "kind" : "def"}, {"label" : "saveAsHadoopFiles", "tail" : "(prefix: String, suffix: String, keyClass: Class[_], valueClass: Class[_], outputFormatClass: Class[F], conf: JobConf): Unit", "member" : "org.apache.spark.streaming.api.java.JavaPairDStream.saveAsHadoopFiles", "link" : "org\/apache\/spark\/streaming\/api\/java\/JavaPairReceiverInputDStream.html#saveAsHadoopFiles[F<:org.apache.hadoop.mapred.OutputFormat[_,_]](prefix:String,suffix:String,keyClass:Class[_],valueClass:Class[_],outputFormatClass:Class[F],conf:org.apache.hadoop.mapred.JobConf):Unit", "kind" : "def"}, {"label" : "saveAsHadoopFiles", "tail" : "(prefix: String, suffix: String, keyClass: Class[_], valueClass: Class[_], outputFormatClass: Class[F]): Unit", "member" : "org.apache.spark.streaming.api.java.JavaPairDStream.saveAsHadoopFiles", "link" : "org\/apache\/spark\/streaming\/api\/java\/JavaPairReceiverInputDStream.html#saveAsHadoopFiles[F<:org.apache.hadoop.mapred.OutputFormat[_,_]](prefix:String,suffix:String,keyClass:Class[_],valueClass:Class[_],outputFormatClass:Class[F]):Unit", "kind" : "def"}, {"label" : "saveAsHadoopFiles", "tail" : "(prefix: String, suffix: String): Unit", "member" : "org.apache.spark.streaming.api.java.JavaPairDStream.saveAsHadoopFiles", "link" : "org\/apache\/spark\/streaming\/api\/java\/JavaPairReceiverInputDStream.html#saveAsHadoopFiles(prefix:String,suffix:String):Unit", "kind" : "def"}, {"label" : "fullOuterJoin", "tail" : "(other: JavaPairDStream[K, W], partitioner: Partitioner): JavaPairDStream[K, (Optional[V], Optional[W])]", "member" : "org.apache.spark.streaming.api.java.JavaPairDStream.fullOuterJoin", "link" : "org\/apache\/spark\/streaming\/api\/java\/JavaPairReceiverInputDStream.html#fullOuterJoin[W](other:org.apache.spark.streaming.api.java.JavaPairDStream[K,W],partitioner:org.apache.spark.Partitioner):org.apache.spark.streaming.api.java.JavaPairDStream[K,(org.apache.spark.api.java.Optional[V],org.apache.spark.api.java.Optional[W])]", "kind" : "def"}, {"label" : "fullOuterJoin", "tail" : "(other: JavaPairDStream[K, W], numPartitions: Int): JavaPairDStream[K, (Optional[V], Optional[W])]", "member" : "org.apache.spark.streaming.api.java.JavaPairDStream.fullOuterJoin", "link" : "org\/apache\/spark\/streaming\/api\/java\/JavaPairReceiverInputDStream.html#fullOuterJoin[W](other:org.apache.spark.streaming.api.java.JavaPairDStream[K,W],numPartitions:Int):org.apache.spark.streaming.api.java.JavaPairDStream[K,(org.apache.spark.api.java.Optional[V],org.apache.spark.api.java.Optional[W])]", "kind" : "def"}, {"label" : "fullOuterJoin", "tail" : "(other: JavaPairDStream[K, W]): JavaPairDStream[K, (Optional[V], Optional[W])]", "member" : "org.apache.spark.streaming.api.java.JavaPairDStream.fullOuterJoin", "link" : "org\/apache\/spark\/streaming\/api\/java\/JavaPairReceiverInputDStream.html#fullOuterJoin[W](other:org.apache.spark.streaming.api.java.JavaPairDStream[K,W]):org.apache.spark.streaming.api.java.JavaPairDStream[K,(org.apache.spark.api.java.Optional[V],org.apache.spark.api.java.Optional[W])]", "kind" : "def"}, {"label" : "rightOuterJoin", "tail" : "(other: JavaPairDStream[K, W], partitioner: Partitioner): JavaPairDStream[K, (Optional[V], W)]", "member" : "org.apache.spark.streaming.api.java.JavaPairDStream.rightOuterJoin", "link" : "org\/apache\/spark\/streaming\/api\/java\/JavaPairReceiverInputDStream.html#rightOuterJoin[W](other:org.apache.spark.streaming.api.java.JavaPairDStream[K,W],partitioner:org.apache.spark.Partitioner):org.apache.spark.streaming.api.java.JavaPairDStream[K,(org.apache.spark.api.java.Optional[V],W)]", "kind" : "def"}, {"label" : "rightOuterJoin", "tail" : "(other: JavaPairDStream[K, W], numPartitions: Int): JavaPairDStream[K, (Optional[V], W)]", "member" : "org.apache.spark.streaming.api.java.JavaPairDStream.rightOuterJoin", "link" : "org\/apache\/spark\/streaming\/api\/java\/JavaPairReceiverInputDStream.html#rightOuterJoin[W](other:org.apache.spark.streaming.api.java.JavaPairDStream[K,W],numPartitions:Int):org.apache.spark.streaming.api.java.JavaPairDStream[K,(org.apache.spark.api.java.Optional[V],W)]", "kind" : "def"}, {"label" : "rightOuterJoin", "tail" : "(other: JavaPairDStream[K, W]): JavaPairDStream[K, (Optional[V], W)]", "member" : "org.apache.spark.streaming.api.java.JavaPairDStream.rightOuterJoin", "link" : "org\/apache\/spark\/streaming\/api\/java\/JavaPairReceiverInputDStream.html#rightOuterJoin[W](other:org.apache.spark.streaming.api.java.JavaPairDStream[K,W]):org.apache.spark.streaming.api.java.JavaPairDStream[K,(org.apache.spark.api.java.Optional[V],W)]", "kind" : "def"}, {"label" : "leftOuterJoin", "tail" : "(other: JavaPairDStream[K, W], partitioner: Partitioner): JavaPairDStream[K, (V, Optional[W])]", "member" : "org.apache.spark.streaming.api.java.JavaPairDStream.leftOuterJoin", "link" : "org\/apache\/spark\/streaming\/api\/java\/JavaPairReceiverInputDStream.html#leftOuterJoin[W](other:org.apache.spark.streaming.api.java.JavaPairDStream[K,W],partitioner:org.apache.spark.Partitioner):org.apache.spark.streaming.api.java.JavaPairDStream[K,(V,org.apache.spark.api.java.Optional[W])]", "kind" : "def"}, {"label" : "leftOuterJoin", "tail" : "(other: JavaPairDStream[K, W], numPartitions: Int): JavaPairDStream[K, (V, Optional[W])]", "member" : "org.apache.spark.streaming.api.java.JavaPairDStream.leftOuterJoin", "link" : "org\/apache\/spark\/streaming\/api\/java\/JavaPairReceiverInputDStream.html#leftOuterJoin[W](other:org.apache.spark.streaming.api.java.JavaPairDStream[K,W],numPartitions:Int):org.apache.spark.streaming.api.java.JavaPairDStream[K,(V,org.apache.spark.api.java.Optional[W])]", "kind" : "def"}, {"label" : "leftOuterJoin", "tail" : "(other: JavaPairDStream[K, W]): JavaPairDStream[K, (V, Optional[W])]", "member" : "org.apache.spark.streaming.api.java.JavaPairDStream.leftOuterJoin", "link" : "org\/apache\/spark\/streaming\/api\/java\/JavaPairReceiverInputDStream.html#leftOuterJoin[W](other:org.apache.spark.streaming.api.java.JavaPairDStream[K,W]):org.apache.spark.streaming.api.java.JavaPairDStream[K,(V,org.apache.spark.api.java.Optional[W])]", "kind" : "def"}, {"label" : "join", "tail" : "(other: JavaPairDStream[K, W], partitioner: Partitioner): JavaPairDStream[K, (V, W)]", "member" : "org.apache.spark.streaming.api.java.JavaPairDStream.join", "link" : "org\/apache\/spark\/streaming\/api\/java\/JavaPairReceiverInputDStream.html#join[W](other:org.apache.spark.streaming.api.java.JavaPairDStream[K,W],partitioner:org.apache.spark.Partitioner):org.apache.spark.streaming.api.java.JavaPairDStream[K,(V,W)]", "kind" : "def"}, {"label" : "join", "tail" : "(other: JavaPairDStream[K, W], numPartitions: Int): JavaPairDStream[K, (V, W)]", "member" : "org.apache.spark.streaming.api.java.JavaPairDStream.join", "link" : "org\/apache\/spark\/streaming\/api\/java\/JavaPairReceiverInputDStream.html#join[W](other:org.apache.spark.streaming.api.java.JavaPairDStream[K,W],numPartitions:Int):org.apache.spark.streaming.api.java.JavaPairDStream[K,(V,W)]", "kind" : "def"}, {"label" : "join", "tail" : "(other: JavaPairDStream[K, W]): JavaPairDStream[K, (V, W)]", "member" : "org.apache.spark.streaming.api.java.JavaPairDStream.join", "link" : "org\/apache\/spark\/streaming\/api\/java\/JavaPairReceiverInputDStream.html#join[W](other:org.apache.spark.streaming.api.java.JavaPairDStream[K,W]):org.apache.spark.streaming.api.java.JavaPairDStream[K,(V,W)]", "kind" : "def"}, {"label" : "cogroup", "tail" : "(other: JavaPairDStream[K, W], partitioner: Partitioner): JavaPairDStream[K, (Iterable[V], Iterable[W])]", "member" : "org.apache.spark.streaming.api.java.JavaPairDStream.cogroup", "link" : "org\/apache\/spark\/streaming\/api\/java\/JavaPairReceiverInputDStream.html#cogroup[W](other:org.apache.spark.streaming.api.java.JavaPairDStream[K,W],partitioner:org.apache.spark.Partitioner):org.apache.spark.streaming.api.java.JavaPairDStream[K,(Iterable[V],Iterable[W])]", "kind" : "def"}, {"label" : "cogroup", "tail" : "(other: JavaPairDStream[K, W], numPartitions: Int): JavaPairDStream[K, (Iterable[V], Iterable[W])]", "member" : "org.apache.spark.streaming.api.java.JavaPairDStream.cogroup", "link" : "org\/apache\/spark\/streaming\/api\/java\/JavaPairReceiverInputDStream.html#cogroup[W](other:org.apache.spark.streaming.api.java.JavaPairDStream[K,W],numPartitions:Int):org.apache.spark.streaming.api.java.JavaPairDStream[K,(Iterable[V],Iterable[W])]", "kind" : "def"}, {"label" : "cogroup", "tail" : "(other: JavaPairDStream[K, W]): JavaPairDStream[K, (Iterable[V], Iterable[W])]", "member" : "org.apache.spark.streaming.api.java.JavaPairDStream.cogroup", "link" : "org\/apache\/spark\/streaming\/api\/java\/JavaPairReceiverInputDStream.html#cogroup[W](other:org.apache.spark.streaming.api.java.JavaPairDStream[K,W]):org.apache.spark.streaming.api.java.JavaPairDStream[K,(Iterable[V],Iterable[W])]", "kind" : "def"}, {"label" : "flatMapValues", "tail" : "(f: FlatMapFunction[V, U]): JavaPairDStream[K, U]", "member" : "org.apache.spark.streaming.api.java.JavaPairDStream.flatMapValues", "link" : "org\/apache\/spark\/streaming\/api\/java\/JavaPairReceiverInputDStream.html#flatMapValues[U](f:org.apache.spark.api.java.function.FlatMapFunction[V,U]):org.apache.spark.streaming.api.java.JavaPairDStream[K,U]", "kind" : "def"}, {"label" : "mapValues", "tail" : "(f: Function[V, U]): JavaPairDStream[K, U]", "member" : "org.apache.spark.streaming.api.java.JavaPairDStream.mapValues", "link" : "org\/apache\/spark\/streaming\/api\/java\/JavaPairReceiverInputDStream.html#mapValues[U](f:org.apache.spark.api.java.function.Function[V,U]):org.apache.spark.streaming.api.java.JavaPairDStream[K,U]", "kind" : "def"}, {"label" : "updateStateByKey", "tail" : "(updateFunc: Function2[List[V], Optional[S], Optional[S]], partitioner: Partitioner, initialRDD: JavaPairRDD[K, S]): JavaPairDStream[K, S]", "member" : "org.apache.spark.streaming.api.java.JavaPairDStream.updateStateByKey", "link" : "org\/apache\/spark\/streaming\/api\/java\/JavaPairReceiverInputDStream.html#updateStateByKey[S](updateFunc:org.apache.spark.api.java.function.Function2[java.util.List[V],org.apache.spark.api.java.Optional[S],org.apache.spark.api.java.Optional[S]],partitioner:org.apache.spark.Partitioner,initialRDD:org.apache.spark.api.java.JavaPairRDD[K,S]):org.apache.spark.streaming.api.java.JavaPairDStream[K,S]", "kind" : "def"}, {"label" : "updateStateByKey", "tail" : "(updateFunc: Function2[List[V], Optional[S], Optional[S]], partitioner: Partitioner): JavaPairDStream[K, S]", "member" : "org.apache.spark.streaming.api.java.JavaPairDStream.updateStateByKey", "link" : "org\/apache\/spark\/streaming\/api\/java\/JavaPairReceiverInputDStream.html#updateStateByKey[S](updateFunc:org.apache.spark.api.java.function.Function2[java.util.List[V],org.apache.spark.api.java.Optional[S],org.apache.spark.api.java.Optional[S]],partitioner:org.apache.spark.Partitioner):org.apache.spark.streaming.api.java.JavaPairDStream[K,S]", "kind" : "def"}, {"label" : "updateStateByKey", "tail" : "(updateFunc: Function2[List[V], Optional[S], Optional[S]], numPartitions: Int): JavaPairDStream[K, S]", "member" : "org.apache.spark.streaming.api.java.JavaPairDStream.updateStateByKey", "link" : "org\/apache\/spark\/streaming\/api\/java\/JavaPairReceiverInputDStream.html#updateStateByKey[S](updateFunc:org.apache.spark.api.java.function.Function2[java.util.List[V],org.apache.spark.api.java.Optional[S],org.apache.spark.api.java.Optional[S]],numPartitions:Int):org.apache.spark.streaming.api.java.JavaPairDStream[K,S]", "kind" : "def"}, {"label" : "updateStateByKey", "tail" : "(updateFunc: Function2[List[V], Optional[S], Optional[S]]): JavaPairDStream[K, S]", "member" : "org.apache.spark.streaming.api.java.JavaPairDStream.updateStateByKey", "link" : "org\/apache\/spark\/streaming\/api\/java\/JavaPairReceiverInputDStream.html#updateStateByKey[S](updateFunc:org.apache.spark.api.java.function.Function2[java.util.List[V],org.apache.spark.api.java.Optional[S],org.apache.spark.api.java.Optional[S]]):org.apache.spark.streaming.api.java.JavaPairDStream[K,S]", "kind" : "def"}, {"label" : "mapWithState", "tail" : "(spec: StateSpec[K, V, StateType, MappedType]): JavaMapWithStateDStream[K, V, StateType, MappedType]", "member" : "org.apache.spark.streaming.api.java.JavaPairDStream.mapWithState", "link" : "org\/apache\/spark\/streaming\/api\/java\/JavaPairReceiverInputDStream.html#mapWithState[StateType,MappedType](spec:org.apache.spark.streaming.StateSpec[K,V,StateType,MappedType]):org.apache.spark.streaming.api.java.JavaMapWithStateDStream[K,V,StateType,MappedType]", "kind" : "def"}, {"label" : "reduceByKeyAndWindow", "tail" : "(reduceFunc: Function2[V, V, V], invReduceFunc: Function2[V, V, V], windowDuration: Duration, slideDuration: Duration, partitioner: Partitioner, filterFunc: Function[(K, V), Boolean]): JavaPairDStream[K, V]", "member" : "org.apache.spark.streaming.api.java.JavaPairDStream.reduceByKeyAndWindow", "link" : "org\/apache\/spark\/streaming\/api\/java\/JavaPairReceiverInputDStream.html#reduceByKeyAndWindow(reduceFunc:org.apache.spark.api.java.function.Function2[V,V,V],invReduceFunc:org.apache.spark.api.java.function.Function2[V,V,V],windowDuration:org.apache.spark.streaming.Duration,slideDuration:org.apache.spark.streaming.Duration,partitioner:org.apache.spark.Partitioner,filterFunc:org.apache.spark.api.java.function.Function[(K,V),Boolean]):org.apache.spark.streaming.api.java.JavaPairDStream[K,V]", "kind" : "def"}, {"label" : "reduceByKeyAndWindow", "tail" : "(reduceFunc: Function2[V, V, V], invReduceFunc: Function2[V, V, V], windowDuration: Duration, slideDuration: Duration, numPartitions: Int, filterFunc: Function[(K, V), Boolean]): JavaPairDStream[K, V]", "member" : "org.apache.spark.streaming.api.java.JavaPairDStream.reduceByKeyAndWindow", "link" : "org\/apache\/spark\/streaming\/api\/java\/JavaPairReceiverInputDStream.html#reduceByKeyAndWindow(reduceFunc:org.apache.spark.api.java.function.Function2[V,V,V],invReduceFunc:org.apache.spark.api.java.function.Function2[V,V,V],windowDuration:org.apache.spark.streaming.Duration,slideDuration:org.apache.spark.streaming.Duration,numPartitions:Int,filterFunc:org.apache.spark.api.java.function.Function[(K,V),Boolean]):org.apache.spark.streaming.api.java.JavaPairDStream[K,V]", "kind" : "def"}, {"label" : "reduceByKeyAndWindow", "tail" : "(reduceFunc: Function2[V, V, V], invReduceFunc: Function2[V, V, V], windowDuration: Duration, slideDuration: Duration): JavaPairDStream[K, V]", "member" : "org.apache.spark.streaming.api.java.JavaPairDStream.reduceByKeyAndWindow", "link" : "org\/apache\/spark\/streaming\/api\/java\/JavaPairReceiverInputDStream.html#reduceByKeyAndWindow(reduceFunc:org.apache.spark.api.java.function.Function2[V,V,V],invReduceFunc:org.apache.spark.api.java.function.Function2[V,V,V],windowDuration:org.apache.spark.streaming.Duration,slideDuration:org.apache.spark.streaming.Duration):org.apache.spark.streaming.api.java.JavaPairDStream[K,V]", "kind" : "def"}, {"label" : "reduceByKeyAndWindow", "tail" : "(reduceFunc: Function2[V, V, V], windowDuration: Duration, slideDuration: Duration, partitioner: Partitioner): JavaPairDStream[K, V]", "member" : "org.apache.spark.streaming.api.java.JavaPairDStream.reduceByKeyAndWindow", "link" : "org\/apache\/spark\/streaming\/api\/java\/JavaPairReceiverInputDStream.html#reduceByKeyAndWindow(reduceFunc:org.apache.spark.api.java.function.Function2[V,V,V],windowDuration:org.apache.spark.streaming.Duration,slideDuration:org.apache.spark.streaming.Duration,partitioner:org.apache.spark.Partitioner):org.apache.spark.streaming.api.java.JavaPairDStream[K,V]", "kind" : "def"}, {"label" : "reduceByKeyAndWindow", "tail" : "(reduceFunc: Function2[V, V, V], windowDuration: Duration, slideDuration: Duration, numPartitions: Int): JavaPairDStream[K, V]", "member" : "org.apache.spark.streaming.api.java.JavaPairDStream.reduceByKeyAndWindow", "link" : "org\/apache\/spark\/streaming\/api\/java\/JavaPairReceiverInputDStream.html#reduceByKeyAndWindow(reduceFunc:org.apache.spark.api.java.function.Function2[V,V,V],windowDuration:org.apache.spark.streaming.Duration,slideDuration:org.apache.spark.streaming.Duration,numPartitions:Int):org.apache.spark.streaming.api.java.JavaPairDStream[K,V]", "kind" : "def"}, {"label" : "reduceByKeyAndWindow", "tail" : "(reduceFunc: Function2[V, V, V], windowDuration: Duration, slideDuration: Duration): JavaPairDStream[K, V]", "member" : "org.apache.spark.streaming.api.java.JavaPairDStream.reduceByKeyAndWindow", "link" : "org\/apache\/spark\/streaming\/api\/java\/JavaPairReceiverInputDStream.html#reduceByKeyAndWindow(reduceFunc:org.apache.spark.api.java.function.Function2[V,V,V],windowDuration:org.apache.spark.streaming.Duration,slideDuration:org.apache.spark.streaming.Duration):org.apache.spark.streaming.api.java.JavaPairDStream[K,V]", "kind" : "def"}, {"label" : "reduceByKeyAndWindow", "tail" : "(reduceFunc: Function2[V, V, V], windowDuration: Duration): JavaPairDStream[K, V]", "member" : "org.apache.spark.streaming.api.java.JavaPairDStream.reduceByKeyAndWindow", "link" : "org\/apache\/spark\/streaming\/api\/java\/JavaPairReceiverInputDStream.html#reduceByKeyAndWindow(reduceFunc:org.apache.spark.api.java.function.Function2[V,V,V],windowDuration:org.apache.spark.streaming.Duration):org.apache.spark.streaming.api.java.JavaPairDStream[K,V]", "kind" : "def"}, {"label" : "groupByKeyAndWindow", "tail" : "(windowDuration: Duration, slideDuration: Duration, partitioner: Partitioner): JavaPairDStream[K, Iterable[V]]", "member" : "org.apache.spark.streaming.api.java.JavaPairDStream.groupByKeyAndWindow", "link" : "org\/apache\/spark\/streaming\/api\/java\/JavaPairReceiverInputDStream.html#groupByKeyAndWindow(windowDuration:org.apache.spark.streaming.Duration,slideDuration:org.apache.spark.streaming.Duration,partitioner:org.apache.spark.Partitioner):org.apache.spark.streaming.api.java.JavaPairDStream[K,Iterable[V]]", "kind" : "def"}, {"label" : "groupByKeyAndWindow", "tail" : "(windowDuration: Duration, slideDuration: Duration, numPartitions: Int): JavaPairDStream[K, Iterable[V]]", "member" : "org.apache.spark.streaming.api.java.JavaPairDStream.groupByKeyAndWindow", "link" : "org\/apache\/spark\/streaming\/api\/java\/JavaPairReceiverInputDStream.html#groupByKeyAndWindow(windowDuration:org.apache.spark.streaming.Duration,slideDuration:org.apache.spark.streaming.Duration,numPartitions:Int):org.apache.spark.streaming.api.java.JavaPairDStream[K,Iterable[V]]", "kind" : "def"}, {"label" : "groupByKeyAndWindow", "tail" : "(windowDuration: Duration, slideDuration: Duration): JavaPairDStream[K, Iterable[V]]", "member" : "org.apache.spark.streaming.api.java.JavaPairDStream.groupByKeyAndWindow", "link" : "org\/apache\/spark\/streaming\/api\/java\/JavaPairReceiverInputDStream.html#groupByKeyAndWindow(windowDuration:org.apache.spark.streaming.Duration,slideDuration:org.apache.spark.streaming.Duration):org.apache.spark.streaming.api.java.JavaPairDStream[K,Iterable[V]]", "kind" : "def"}, {"label" : "groupByKeyAndWindow", "tail" : "(windowDuration: Duration): JavaPairDStream[K, Iterable[V]]", "member" : "org.apache.spark.streaming.api.java.JavaPairDStream.groupByKeyAndWindow", "link" : "org\/apache\/spark\/streaming\/api\/java\/JavaPairReceiverInputDStream.html#groupByKeyAndWindow(windowDuration:org.apache.spark.streaming.Duration):org.apache.spark.streaming.api.java.JavaPairDStream[K,Iterable[V]]", "kind" : "def"}, {"label" : "combineByKey", "tail" : "(createCombiner: Function[V, C], mergeValue: Function2[C, V, C], mergeCombiners: Function2[C, C, C], partitioner: Partitioner, mapSideCombine: Boolean): JavaPairDStream[K, C]", "member" : "org.apache.spark.streaming.api.java.JavaPairDStream.combineByKey", "link" : "org\/apache\/spark\/streaming\/api\/java\/JavaPairReceiverInputDStream.html#combineByKey[C](createCombiner:org.apache.spark.api.java.function.Function[V,C],mergeValue:org.apache.spark.api.java.function.Function2[C,V,C],mergeCombiners:org.apache.spark.api.java.function.Function2[C,C,C],partitioner:org.apache.spark.Partitioner,mapSideCombine:Boolean):org.apache.spark.streaming.api.java.JavaPairDStream[K,C]", "kind" : "def"}, {"label" : "combineByKey", "tail" : "(createCombiner: Function[V, C], mergeValue: Function2[C, V, C], mergeCombiners: Function2[C, C, C], partitioner: Partitioner): JavaPairDStream[K, C]", "member" : "org.apache.spark.streaming.api.java.JavaPairDStream.combineByKey", "link" : "org\/apache\/spark\/streaming\/api\/java\/JavaPairReceiverInputDStream.html#combineByKey[C](createCombiner:org.apache.spark.api.java.function.Function[V,C],mergeValue:org.apache.spark.api.java.function.Function2[C,V,C],mergeCombiners:org.apache.spark.api.java.function.Function2[C,C,C],partitioner:org.apache.spark.Partitioner):org.apache.spark.streaming.api.java.JavaPairDStream[K,C]", "kind" : "def"}, {"label" : "reduceByKey", "tail" : "(func: Function2[V, V, V], partitioner: Partitioner): JavaPairDStream[K, V]", "member" : "org.apache.spark.streaming.api.java.JavaPairDStream.reduceByKey", "link" : "org\/apache\/spark\/streaming\/api\/java\/JavaPairReceiverInputDStream.html#reduceByKey(func:org.apache.spark.api.java.function.Function2[V,V,V],partitioner:org.apache.spark.Partitioner):org.apache.spark.streaming.api.java.JavaPairDStream[K,V]", "kind" : "def"}, {"label" : "reduceByKey", "tail" : "(func: Function2[V, V, V], numPartitions: Int): JavaPairDStream[K, V]", "member" : "org.apache.spark.streaming.api.java.JavaPairDStream.reduceByKey", "link" : "org\/apache\/spark\/streaming\/api\/java\/JavaPairReceiverInputDStream.html#reduceByKey(func:org.apache.spark.api.java.function.Function2[V,V,V],numPartitions:Int):org.apache.spark.streaming.api.java.JavaPairDStream[K,V]", "kind" : "def"}, {"label" : "reduceByKey", "tail" : "(func: Function2[V, V, V]): JavaPairDStream[K, V]", "member" : "org.apache.spark.streaming.api.java.JavaPairDStream.reduceByKey", "link" : "org\/apache\/spark\/streaming\/api\/java\/JavaPairReceiverInputDStream.html#reduceByKey(func:org.apache.spark.api.java.function.Function2[V,V,V]):org.apache.spark.streaming.api.java.JavaPairDStream[K,V]", "kind" : "def"}, {"label" : "groupByKey", "tail" : "(partitioner: Partitioner): JavaPairDStream[K, Iterable[V]]", "member" : "org.apache.spark.streaming.api.java.JavaPairDStream.groupByKey", "link" : "org\/apache\/spark\/streaming\/api\/java\/JavaPairReceiverInputDStream.html#groupByKey(partitioner:org.apache.spark.Partitioner):org.apache.spark.streaming.api.java.JavaPairDStream[K,Iterable[V]]", "kind" : "def"}, {"label" : "groupByKey", "tail" : "(numPartitions: Int): JavaPairDStream[K, Iterable[V]]", "member" : "org.apache.spark.streaming.api.java.JavaPairDStream.groupByKey", "link" : "org\/apache\/spark\/streaming\/api\/java\/JavaPairReceiverInputDStream.html#groupByKey(numPartitions:Int):org.apache.spark.streaming.api.java.JavaPairDStream[K,Iterable[V]]", "kind" : "def"}, {"label" : "groupByKey", "tail" : "(): JavaPairDStream[K, Iterable[V]]", "member" : "org.apache.spark.streaming.api.java.JavaPairDStream.groupByKey", "link" : "org\/apache\/spark\/streaming\/api\/java\/JavaPairReceiverInputDStream.html#groupByKey():org.apache.spark.streaming.api.java.JavaPairDStream[K,Iterable[V]]", "kind" : "def"}, {"label" : "union", "tail" : "(that: JavaPairDStream[K, V]): JavaPairDStream[K, V]", "member" : "org.apache.spark.streaming.api.java.JavaPairDStream.union", "link" : "org\/apache\/spark\/streaming\/api\/java\/JavaPairReceiverInputDStream.html#union(that:org.apache.spark.streaming.api.java.JavaPairDStream[K,V]):org.apache.spark.streaming.api.java.JavaPairDStream[K,V]", "kind" : "def"}, {"label" : "window", "tail" : "(windowDuration: Duration, slideDuration: Duration): JavaPairDStream[K, V]", "member" : "org.apache.spark.streaming.api.java.JavaPairDStream.window", "link" : "org\/apache\/spark\/streaming\/api\/java\/JavaPairReceiverInputDStream.html#window(windowDuration:org.apache.spark.streaming.Duration,slideDuration:org.apache.spark.streaming.Duration):org.apache.spark.streaming.api.java.JavaPairDStream[K,V]", "kind" : "def"}, {"label" : "window", "tail" : "(windowDuration: Duration): JavaPairDStream[K, V]", "member" : "org.apache.spark.streaming.api.java.JavaPairDStream.window", "link" : "org\/apache\/spark\/streaming\/api\/java\/JavaPairReceiverInputDStream.html#window(windowDuration:org.apache.spark.streaming.Duration):org.apache.spark.streaming.api.java.JavaPairDStream[K,V]", "kind" : "def"}, {"label" : "compute", "tail" : "(validTime: Time): JavaPairRDD[K, V]", "member" : "org.apache.spark.streaming.api.java.JavaPairDStream.compute", "link" : "org\/apache\/spark\/streaming\/api\/java\/JavaPairReceiverInputDStream.html#compute(validTime:org.apache.spark.streaming.Time):org.apache.spark.api.java.JavaPairRDD[K,V]", "kind" : "def"}, {"label" : "repartition", "tail" : "(numPartitions: Int): JavaPairDStream[K, V]", "member" : "org.apache.spark.streaming.api.java.JavaPairDStream.repartition", "link" : "org\/apache\/spark\/streaming\/api\/java\/JavaPairReceiverInputDStream.html#repartition(numPartitions:Int):org.apache.spark.streaming.api.java.JavaPairDStream[K,V]", "kind" : "def"}, {"label" : "persist", "tail" : "(storageLevel: StorageLevel): JavaPairDStream[K, V]", "member" : "org.apache.spark.streaming.api.java.JavaPairDStream.persist", "link" : "org\/apache\/spark\/streaming\/api\/java\/JavaPairReceiverInputDStream.html#persist(storageLevel:org.apache.spark.storage.StorageLevel):org.apache.spark.streaming.api.java.JavaPairDStream[K,V]", "kind" : "def"}, {"label" : "persist", "tail" : "(): JavaPairDStream[K, V]", "member" : "org.apache.spark.streaming.api.java.JavaPairDStream.persist", "link" : "org\/apache\/spark\/streaming\/api\/java\/JavaPairReceiverInputDStream.html#persist():org.apache.spark.streaming.api.java.JavaPairDStream[K,V]", "kind" : "def"}, {"label" : "cache", "tail" : "(): JavaPairDStream[K, V]", "member" : "org.apache.spark.streaming.api.java.JavaPairDStream.cache", "link" : "org\/apache\/spark\/streaming\/api\/java\/JavaPairReceiverInputDStream.html#cache():org.apache.spark.streaming.api.java.JavaPairDStream[K,V]", "kind" : "def"}, {"label" : "filter", "tail" : "(f: Function[(K, V), Boolean]): JavaPairDStream[K, V]", "member" : "org.apache.spark.streaming.api.java.JavaPairDStream.filter", "link" : "org\/apache\/spark\/streaming\/api\/java\/JavaPairReceiverInputDStream.html#filter(f:org.apache.spark.api.java.function.Function[(K,V),Boolean]):org.apache.spark.streaming.api.java.JavaPairDStream[K,V]", "kind" : "def"}, {"label" : "wrapRDD", "tail" : "(rdd: RDD[(K, V)]): JavaPairRDD[K, V]", "member" : "org.apache.spark.streaming.api.java.JavaPairDStream.wrapRDD", "link" : "org\/apache\/spark\/streaming\/api\/java\/JavaPairReceiverInputDStream.html#wrapRDD(rdd:org.apache.spark.rdd.RDD[(K,V)]):org.apache.spark.api.java.JavaPairRDD[K,V]", "kind" : "def"}, {"label" : "vManifest", "tail" : ": ClassTag[V]", "member" : "org.apache.spark.streaming.api.java.JavaPairDStream.vManifest", "link" : "org\/apache\/spark\/streaming\/api\/java\/JavaPairReceiverInputDStream.html#vManifest:scala.reflect.ClassTag[V]", "kind" : "implicit val"}, {"label" : "kManifest", "tail" : ": ClassTag[K]", "member" : "org.apache.spark.streaming.api.java.JavaPairDStream.kManifest", "link" : "org\/apache\/spark\/streaming\/api\/java\/JavaPairReceiverInputDStream.html#kManifest:scala.reflect.ClassTag[K]", "kind" : "implicit val"}, {"label" : "dstream", "tail" : ": DStream[(K, V)]", "member" : "org.apache.spark.streaming.api.java.JavaPairDStream.dstream", "link" : "org\/apache\/spark\/streaming\/api\/java\/JavaPairReceiverInputDStream.html#dstream:org.apache.spark.streaming.dstream.DStream[(K,V)]", "kind" : "val"}, {"label" : "checkpoint", "tail" : "(interval: Duration): DStream[(K, V)]", "member" : "org.apache.spark.streaming.api.java.JavaDStreamLike.checkpoint", "link" : "org\/apache\/spark\/streaming\/api\/java\/JavaPairReceiverInputDStream.html#checkpoint(interval:org.apache.spark.streaming.Duration):org.apache.spark.streaming.dstream.DStream[T]", "kind" : "def"}, {"label" : "transformWithToPair", "tail" : "(other: JavaPairDStream[K2, V2], transformFunc: Function3[JavaPairRDD[K, V], JavaPairRDD[K2, V2], Time, JavaPairRDD[K3, V3]]): JavaPairDStream[K3, V3]", "member" : "org.apache.spark.streaming.api.java.JavaDStreamLike.transformWithToPair", "link" : "org\/apache\/spark\/streaming\/api\/java\/JavaPairReceiverInputDStream.html#transformWithToPair[K2,V2,K3,V3](other:org.apache.spark.streaming.api.java.JavaPairDStream[K2,V2],transformFunc:org.apache.spark.api.java.function.Function3[R,org.apache.spark.api.java.JavaPairRDD[K2,V2],org.apache.spark.streaming.Time,org.apache.spark.api.java.JavaPairRDD[K3,V3]]):org.apache.spark.streaming.api.java.JavaPairDStream[K3,V3]", "kind" : "def"}, {"label" : "transformWith", "tail" : "(other: JavaPairDStream[K2, V2], transformFunc: Function3[JavaPairRDD[K, V], JavaPairRDD[K2, V2], Time, JavaRDD[W]]): JavaDStream[W]", "member" : "org.apache.spark.streaming.api.java.JavaDStreamLike.transformWith", "link" : "org\/apache\/spark\/streaming\/api\/java\/JavaPairReceiverInputDStream.html#transformWith[K2,V2,W](other:org.apache.spark.streaming.api.java.JavaPairDStream[K2,V2],transformFunc:org.apache.spark.api.java.function.Function3[R,org.apache.spark.api.java.JavaPairRDD[K2,V2],org.apache.spark.streaming.Time,org.apache.spark.api.java.JavaRDD[W]]):org.apache.spark.streaming.api.java.JavaDStream[W]", "kind" : "def"}, {"label" : "transformWithToPair", "tail" : "(other: JavaDStream[U], transformFunc: Function3[JavaPairRDD[K, V], JavaRDD[U], Time, JavaPairRDD[K2, V2]]): JavaPairDStream[K2, V2]", "member" : "org.apache.spark.streaming.api.java.JavaDStreamLike.transformWithToPair", "link" : "org\/apache\/spark\/streaming\/api\/java\/JavaPairReceiverInputDStream.html#transformWithToPair[U,K2,V2](other:org.apache.spark.streaming.api.java.JavaDStream[U],transformFunc:org.apache.spark.api.java.function.Function3[R,org.apache.spark.api.java.JavaRDD[U],org.apache.spark.streaming.Time,org.apache.spark.api.java.JavaPairRDD[K2,V2]]):org.apache.spark.streaming.api.java.JavaPairDStream[K2,V2]", "kind" : "def"}, {"label" : "transformWith", "tail" : "(other: JavaDStream[U], transformFunc: Function3[JavaPairRDD[K, V], JavaRDD[U], Time, JavaRDD[W]]): JavaDStream[W]", "member" : "org.apache.spark.streaming.api.java.JavaDStreamLike.transformWith", "link" : "org\/apache\/spark\/streaming\/api\/java\/JavaPairReceiverInputDStream.html#transformWith[U,W](other:org.apache.spark.streaming.api.java.JavaDStream[U],transformFunc:org.apache.spark.api.java.function.Function3[R,org.apache.spark.api.java.JavaRDD[U],org.apache.spark.streaming.Time,org.apache.spark.api.java.JavaRDD[W]]):org.apache.spark.streaming.api.java.JavaDStream[W]", "kind" : "def"}, {"label" : "transformToPair", "tail" : "(transformFunc: Function2[JavaPairRDD[K, V], Time, JavaPairRDD[K2, V2]]): JavaPairDStream[K2, V2]", "member" : "org.apache.spark.streaming.api.java.JavaDStreamLike.transformToPair", "link" : "org\/apache\/spark\/streaming\/api\/java\/JavaPairReceiverInputDStream.html#transformToPair[K2,V2](transformFunc:org.apache.spark.api.java.function.Function2[R,org.apache.spark.streaming.Time,org.apache.spark.api.java.JavaPairRDD[K2,V2]]):org.apache.spark.streaming.api.java.JavaPairDStream[K2,V2]", "kind" : "def"}, {"label" : "transformToPair", "tail" : "(transformFunc: Function[JavaPairRDD[K, V], JavaPairRDD[K2, V2]]): JavaPairDStream[K2, V2]", "member" : "org.apache.spark.streaming.api.java.JavaDStreamLike.transformToPair", "link" : "org\/apache\/spark\/streaming\/api\/java\/JavaPairReceiverInputDStream.html#transformToPair[K2,V2](transformFunc:org.apache.spark.api.java.function.Function[R,org.apache.spark.api.java.JavaPairRDD[K2,V2]]):org.apache.spark.streaming.api.java.JavaPairDStream[K2,V2]", "kind" : "def"}, {"label" : "transform", "tail" : "(transformFunc: Function2[JavaPairRDD[K, V], Time, JavaRDD[U]]): JavaDStream[U]", "member" : "org.apache.spark.streaming.api.java.JavaDStreamLike.transform", "link" : "org\/apache\/spark\/streaming\/api\/java\/JavaPairReceiverInputDStream.html#transform[U](transformFunc:org.apache.spark.api.java.function.Function2[R,org.apache.spark.streaming.Time,org.apache.spark.api.java.JavaRDD[U]]):org.apache.spark.streaming.api.java.JavaDStream[U]", "kind" : "def"}, {"label" : "transform", "tail" : "(transformFunc: Function[JavaPairRDD[K, V], JavaRDD[U]]): JavaDStream[U]", "member" : "org.apache.spark.streaming.api.java.JavaDStreamLike.transform", "link" : "org\/apache\/spark\/streaming\/api\/java\/JavaPairReceiverInputDStream.html#transform[U](transformFunc:org.apache.spark.api.java.function.Function[R,org.apache.spark.api.java.JavaRDD[U]]):org.apache.spark.streaming.api.java.JavaDStream[U]", "kind" : "def"}, {"label" : "foreachRDD", "tail" : "(foreachFunc: VoidFunction2[JavaPairRDD[K, V], Time]): Unit", "member" : "org.apache.spark.streaming.api.java.JavaDStreamLike.foreachRDD", "link" : "org\/apache\/spark\/streaming\/api\/java\/JavaPairReceiverInputDStream.html#foreachRDD(foreachFunc:org.apache.spark.api.java.function.VoidFunction2[R,org.apache.spark.streaming.Time]):Unit", "kind" : "def"}, {"label" : "foreachRDD", "tail" : "(foreachFunc: VoidFunction[JavaPairRDD[K, V]]): Unit", "member" : "org.apache.spark.streaming.api.java.JavaDStreamLike.foreachRDD", "link" : "org\/apache\/spark\/streaming\/api\/java\/JavaPairReceiverInputDStream.html#foreachRDD(foreachFunc:org.apache.spark.api.java.function.VoidFunction[R]):Unit", "kind" : "def"}, {"label" : "slice", "tail" : "(fromTime: Time, toTime: Time): List[JavaPairRDD[K, V]]", "member" : "org.apache.spark.streaming.api.java.JavaDStreamLike.slice", "link" : "org\/apache\/spark\/streaming\/api\/java\/JavaPairReceiverInputDStream.html#slice(fromTime:org.apache.spark.streaming.Time,toTime:org.apache.spark.streaming.Time):java.util.List[R]", "kind" : "def"}, {"label" : "reduceByWindow", "tail" : "(reduceFunc: Function2[(K, V), (K, V), (K, V)], invReduceFunc: Function2[(K, V), (K, V), (K, V)], windowDuration: Duration, slideDuration: Duration): JavaDStream[(K, V)]", "member" : "org.apache.spark.streaming.api.java.JavaDStreamLike.reduceByWindow", "link" : "org\/apache\/spark\/streaming\/api\/java\/JavaPairReceiverInputDStream.html#reduceByWindow(reduceFunc:org.apache.spark.api.java.function.Function2[T,T,T],invReduceFunc:org.apache.spark.api.java.function.Function2[T,T,T],windowDuration:org.apache.spark.streaming.Duration,slideDuration:org.apache.spark.streaming.Duration):org.apache.spark.streaming.api.java.JavaDStream[T]", "kind" : "def"}, {"label" : "reduceByWindow", "tail" : "(reduceFunc: Function2[(K, V), (K, V), (K, V)], windowDuration: Duration, slideDuration: Duration): JavaDStream[(K, V)]", "member" : "org.apache.spark.streaming.api.java.JavaDStreamLike.reduceByWindow", "link" : "org\/apache\/spark\/streaming\/api\/java\/JavaPairReceiverInputDStream.html#reduceByWindow(reduceFunc:org.apache.spark.api.java.function.Function2[T,T,T],windowDuration:org.apache.spark.streaming.Duration,slideDuration:org.apache.spark.streaming.Duration):org.apache.spark.streaming.api.java.JavaDStream[T]", "kind" : "def"}, {"label" : "reduce", "tail" : "(f: Function2[(K, V), (K, V), (K, V)]): JavaDStream[(K, V)]", "member" : "org.apache.spark.streaming.api.java.JavaDStreamLike.reduce", "link" : "org\/apache\/spark\/streaming\/api\/java\/JavaPairReceiverInputDStream.html#reduce(f:org.apache.spark.api.java.function.Function2[T,T,T]):org.apache.spark.streaming.api.java.JavaDStream[T]", "kind" : "def"}, {"label" : "mapPartitionsToPair", "tail" : "(f: PairFlatMapFunction[Iterator[(K, V)], K2, V2]): JavaPairDStream[K2, V2]", "member" : "org.apache.spark.streaming.api.java.JavaDStreamLike.mapPartitionsToPair", "link" : "org\/apache\/spark\/streaming\/api\/java\/JavaPairReceiverInputDStream.html#mapPartitionsToPair[K2,V2](f:org.apache.spark.api.java.function.PairFlatMapFunction[java.util.Iterator[T],K2,V2]):org.apache.spark.streaming.api.java.JavaPairDStream[K2,V2]", "kind" : "def"}, {"label" : "mapPartitions", "tail" : "(f: FlatMapFunction[Iterator[(K, V)], U]): JavaDStream[U]", "member" : "org.apache.spark.streaming.api.java.JavaDStreamLike.mapPartitions", "link" : "org\/apache\/spark\/streaming\/api\/java\/JavaPairReceiverInputDStream.html#mapPartitions[U](f:org.apache.spark.api.java.function.FlatMapFunction[java.util.Iterator[T],U]):org.apache.spark.streaming.api.java.JavaDStream[U]", "kind" : "def"}, {"label" : "flatMapToPair", "tail" : "(f: PairFlatMapFunction[(K, V), K2, V2]): JavaPairDStream[K2, V2]", "member" : "org.apache.spark.streaming.api.java.JavaDStreamLike.flatMapToPair", "link" : "org\/apache\/spark\/streaming\/api\/java\/JavaPairReceiverInputDStream.html#flatMapToPair[K2,V2](f:org.apache.spark.api.java.function.PairFlatMapFunction[T,K2,V2]):org.apache.spark.streaming.api.java.JavaPairDStream[K2,V2]", "kind" : "def"}, {"label" : "flatMap", "tail" : "(f: FlatMapFunction[(K, V), U]): JavaDStream[U]", "member" : "org.apache.spark.streaming.api.java.JavaDStreamLike.flatMap", "link" : "org\/apache\/spark\/streaming\/api\/java\/JavaPairReceiverInputDStream.html#flatMap[U](f:org.apache.spark.api.java.function.FlatMapFunction[T,U]):org.apache.spark.streaming.api.java.JavaDStream[U]", "kind" : "def"}, {"label" : "mapToPair", "tail" : "(f: PairFunction[(K, V), K2, V2]): JavaPairDStream[K2, V2]", "member" : "org.apache.spark.streaming.api.java.JavaDStreamLike.mapToPair", "link" : "org\/apache\/spark\/streaming\/api\/java\/JavaPairReceiverInputDStream.html#mapToPair[K2,V2](f:org.apache.spark.api.java.function.PairFunction[T,K2,V2]):org.apache.spark.streaming.api.java.JavaPairDStream[K2,V2]", "kind" : "def"}, {"label" : "map", "tail" : "(f: Function[(K, V), U]): JavaDStream[U]", "member" : "org.apache.spark.streaming.api.java.JavaDStreamLike.map", "link" : "org\/apache\/spark\/streaming\/api\/java\/JavaPairReceiverInputDStream.html#map[U](f:org.apache.spark.api.java.function.Function[T,U]):org.apache.spark.streaming.api.java.JavaDStream[U]", "kind" : "def"}, {"label" : "context", "tail" : "(): StreamingContext", "member" : "org.apache.spark.streaming.api.java.JavaDStreamLike.context", "link" : "org\/apache\/spark\/streaming\/api\/java\/JavaPairReceiverInputDStream.html#context():org.apache.spark.streaming.StreamingContext", "kind" : "def"}, {"label" : "glom", "tail" : "(): JavaDStream[List[(K, V)]]", "member" : "org.apache.spark.streaming.api.java.JavaDStreamLike.glom", "link" : "org\/apache\/spark\/streaming\/api\/java\/JavaPairReceiverInputDStream.html#glom():org.apache.spark.streaming.api.java.JavaDStream[java.util.List[T]]", "kind" : "def"}, {"label" : "countByValueAndWindow", "tail" : "(windowDuration: Duration, slideDuration: Duration, numPartitions: Int): JavaPairDStream[(K, V), Long]", "member" : "org.apache.spark.streaming.api.java.JavaDStreamLike.countByValueAndWindow", "link" : "org\/apache\/spark\/streaming\/api\/java\/JavaPairReceiverInputDStream.html#countByValueAndWindow(windowDuration:org.apache.spark.streaming.Duration,slideDuration:org.apache.spark.streaming.Duration,numPartitions:Int):org.apache.spark.streaming.api.java.JavaPairDStream[T,Long]", "kind" : "def"}, {"label" : "countByValueAndWindow", "tail" : "(windowDuration: Duration, slideDuration: Duration): JavaPairDStream[(K, V), Long]", "member" : "org.apache.spark.streaming.api.java.JavaDStreamLike.countByValueAndWindow", "link" : "org\/apache\/spark\/streaming\/api\/java\/JavaPairReceiverInputDStream.html#countByValueAndWindow(windowDuration:org.apache.spark.streaming.Duration,slideDuration:org.apache.spark.streaming.Duration):org.apache.spark.streaming.api.java.JavaPairDStream[T,Long]", "kind" : "def"}, {"label" : "countByWindow", "tail" : "(windowDuration: Duration, slideDuration: Duration): JavaDStream[Long]", "member" : "org.apache.spark.streaming.api.java.JavaDStreamLike.countByWindow", "link" : "org\/apache\/spark\/streaming\/api\/java\/JavaPairReceiverInputDStream.html#countByWindow(windowDuration:org.apache.spark.streaming.Duration,slideDuration:org.apache.spark.streaming.Duration):org.apache.spark.streaming.api.java.JavaDStream[Long]", "kind" : "def"}, {"label" : "countByValue", "tail" : "(numPartitions: Int): JavaPairDStream[(K, V), Long]", "member" : "org.apache.spark.streaming.api.java.JavaDStreamLike.countByValue", "link" : "org\/apache\/spark\/streaming\/api\/java\/JavaPairReceiverInputDStream.html#countByValue(numPartitions:Int):org.apache.spark.streaming.api.java.JavaPairDStream[T,Long]", "kind" : "def"}, {"label" : "countByValue", "tail" : "(): JavaPairDStream[(K, V), Long]", "member" : "org.apache.spark.streaming.api.java.JavaDStreamLike.countByValue", "link" : "org\/apache\/spark\/streaming\/api\/java\/JavaPairReceiverInputDStream.html#countByValue():org.apache.spark.streaming.api.java.JavaPairDStream[T,Long]", "kind" : "def"}, {"label" : "count", "tail" : "(): JavaDStream[Long]", "member" : "org.apache.spark.streaming.api.java.JavaDStreamLike.count", "link" : "org\/apache\/spark\/streaming\/api\/java\/JavaPairReceiverInputDStream.html#count():org.apache.spark.streaming.api.java.JavaDStream[Long]", "kind" : "def"}, {"label" : "print", "tail" : "(num: Int): Unit", "member" : "org.apache.spark.streaming.api.java.JavaDStreamLike.print", "link" : "org\/apache\/spark\/streaming\/api\/java\/JavaPairReceiverInputDStream.html#print(num:Int):Unit", "kind" : "def"}, {"label" : "print", "tail" : "(): Unit", "member" : "org.apache.spark.streaming.api.java.JavaDStreamLike.print", "link" : "org\/apache\/spark\/streaming\/api\/java\/JavaPairReceiverInputDStream.html#print():Unit", "kind" : "def"}, {"label" : "scalaIntToJavaLong", "tail" : "(in: DStream[Long]): JavaDStream[Long]", "member" : "org.apache.spark.streaming.api.java.JavaDStreamLike.scalaIntToJavaLong", "link" : "org\/apache\/spark\/streaming\/api\/java\/JavaPairReceiverInputDStream.html#scalaIntToJavaLong(in:org.apache.spark.streaming.dstream.DStream[Long]):org.apache.spark.streaming.api.java.JavaDStream[Long]", "kind" : "implicit def"}, {"label" : "synchronized", "tail" : "(arg0: ⇒ T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "org\/apache\/spark\/streaming\/api\/java\/JavaPairReceiverInputDStream.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "org\/apache\/spark\/streaming\/api\/java\/JavaPairReceiverInputDStream.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "org\/apache\/spark\/streaming\/api\/java\/JavaPairReceiverInputDStream.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "org\/apache\/spark\/streaming\/api\/java\/JavaPairReceiverInputDStream.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "org\/apache\/spark\/streaming\/api\/java\/JavaPairReceiverInputDStream.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "org\/apache\/spark\/streaming\/api\/java\/JavaPairReceiverInputDStream.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "org\/apache\/spark\/streaming\/api\/java\/JavaPairReceiverInputDStream.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "org\/apache\/spark\/streaming\/api\/java\/JavaPairReceiverInputDStream.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "org\/apache\/spark\/streaming\/api\/java\/JavaPairReceiverInputDStream.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "org\/apache\/spark\/streaming\/api\/java\/JavaPairReceiverInputDStream.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "org\/apache\/spark\/streaming\/api\/java\/JavaPairReceiverInputDStream.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "org\/apache\/spark\/streaming\/api\/java\/JavaPairReceiverInputDStream.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "org\/apache\/spark\/streaming\/api\/java\/JavaPairReceiverInputDStream.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "org\/apache\/spark\/streaming\/api\/java\/JavaPairReceiverInputDStream.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.equals", "link" : "org\/apache\/spark\/streaming\/api\/java\/JavaPairReceiverInputDStream.html#equals(x$1:Any):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "org\/apache\/spark\/streaming\/api\/java\/JavaPairReceiverInputDStream.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_]", "member" : "scala.AnyRef.getClass", "link" : "org\/apache\/spark\/streaming\/api\/java\/JavaPairReceiverInputDStream.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "org\/apache\/spark\/streaming\/api\/java\/JavaPairReceiverInputDStream.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "org\/apache\/spark\/streaming\/api\/java\/JavaPairReceiverInputDStream.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "members_object" : [{"label" : "fromReceiverInputDStream", "tail" : "(receiverInputDStream: ReceiverInputDStream[(K, V)])(arg0: ClassTag[K], arg1: ClassTag[V]): JavaPairReceiverInputDStream[K, V]", "member" : "org.apache.spark.streaming.api.java.JavaPairReceiverInputDStream.fromReceiverInputDStream", "link" : "org\/apache\/spark\/streaming\/api\/java\/JavaPairReceiverInputDStream$.html#fromReceiverInputDStream[K,V](receiverInputDStream:org.apache.spark.streaming.dstream.ReceiverInputDStream[(K,V)])(implicitevidence$1:scala.reflect.ClassTag[K],implicitevidence$2:scala.reflect.ClassTag[V]):org.apache.spark.streaming.api.java.JavaPairReceiverInputDStream[K,V]", "kind" : "implicit def"}, {"label" : "synchronized", "tail" : "(arg0: ⇒ T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "org\/apache\/spark\/streaming\/api\/java\/JavaPairReceiverInputDStream$.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "org\/apache\/spark\/streaming\/api\/java\/JavaPairReceiverInputDStream$.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "org\/apache\/spark\/streaming\/api\/java\/JavaPairReceiverInputDStream$.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "org\/apache\/spark\/streaming\/api\/java\/JavaPairReceiverInputDStream$.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "org\/apache\/spark\/streaming\/api\/java\/JavaPairReceiverInputDStream$.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "org\/apache\/spark\/streaming\/api\/java\/JavaPairReceiverInputDStream$.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "org\/apache\/spark\/streaming\/api\/java\/JavaPairReceiverInputDStream$.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "org\/apache\/spark\/streaming\/api\/java\/JavaPairReceiverInputDStream$.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "org\/apache\/spark\/streaming\/api\/java\/JavaPairReceiverInputDStream$.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "org\/apache\/spark\/streaming\/api\/java\/JavaPairReceiverInputDStream$.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "org\/apache\/spark\/streaming\/api\/java\/JavaPairReceiverInputDStream$.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "org\/apache\/spark\/streaming\/api\/java\/JavaPairReceiverInputDStream$.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "org\/apache\/spark\/streaming\/api\/java\/JavaPairReceiverInputDStream$.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "org\/apache\/spark\/streaming\/api\/java\/JavaPairReceiverInputDStream$.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.equals", "link" : "org\/apache\/spark\/streaming\/api\/java\/JavaPairReceiverInputDStream$.html#equals(x$1:Any):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "org\/apache\/spark\/streaming\/api\/java\/JavaPairReceiverInputDStream$.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_]", "member" : "scala.AnyRef.getClass", "link" : "org\/apache\/spark\/streaming\/api\/java\/JavaPairReceiverInputDStream$.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "org\/apache\/spark\/streaming\/api\/java\/JavaPairReceiverInputDStream$.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "org\/apache\/spark\/streaming\/api\/java\/JavaPairReceiverInputDStream$.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "class" : "org\/apache\/spark\/streaming\/api\/java\/JavaPairReceiverInputDStream.html", "kind" : "class"}, {"name" : "org.apache.spark.streaming.api.java.JavaReceiverInputDStream", "shortDescription" : "A Java-friendly interface to org.apache.spark.streaming.dstream.ReceiverInputDStream, theabstract class for defining any input stream that receives data over the network.", "object" : "org\/apache\/spark\/streaming\/api\/java\/JavaReceiverInputDStream$.html", "members_class" : [{"member" : "org.apache.spark.streaming.api.java.JavaReceiverInputDStream#<init>", "error" : "unsupported entity"}, {"label" : "classTag", "tail" : ": ClassTag[T]", "member" : "org.apache.spark.streaming.api.java.JavaReceiverInputDStream.classTag", "link" : "org\/apache\/spark\/streaming\/api\/java\/JavaReceiverInputDStream.html#classTag:scala.reflect.ClassTag[T]", "kind" : "implicit val"}, {"label" : "receiverInputDStream", "tail" : ": ReceiverInputDStream[T]", "member" : "org.apache.spark.streaming.api.java.JavaReceiverInputDStream.receiverInputDStream", "link" : "org\/apache\/spark\/streaming\/api\/java\/JavaReceiverInputDStream.html#receiverInputDStream:org.apache.spark.streaming.dstream.ReceiverInputDStream[T]", "kind" : "val"}, {"label" : "inputDStream", "tail" : ": InputDStream[T]", "member" : "org.apache.spark.streaming.api.java.JavaInputDStream.inputDStream", "link" : "org\/apache\/spark\/streaming\/api\/java\/JavaReceiverInputDStream.html#inputDStream:org.apache.spark.streaming.dstream.InputDStream[T]", "kind" : "val"}, {"label" : "repartition", "tail" : "(numPartitions: Int): JavaDStream[T]", "member" : "org.apache.spark.streaming.api.java.JavaDStream.repartition", "link" : "org\/apache\/spark\/streaming\/api\/java\/JavaReceiverInputDStream.html#repartition(numPartitions:Int):org.apache.spark.streaming.api.java.JavaDStream[T]", "kind" : "def"}, {"label" : "union", "tail" : "(that: JavaDStream[T]): JavaDStream[T]", "member" : "org.apache.spark.streaming.api.java.JavaDStream.union", "link" : "org\/apache\/spark\/streaming\/api\/java\/JavaReceiverInputDStream.html#union(that:org.apache.spark.streaming.api.java.JavaDStream[T]):org.apache.spark.streaming.api.java.JavaDStream[T]", "kind" : "def"}, {"label" : "window", "tail" : "(windowDuration: Duration, slideDuration: Duration): JavaDStream[T]", "member" : "org.apache.spark.streaming.api.java.JavaDStream.window", "link" : "org\/apache\/spark\/streaming\/api\/java\/JavaReceiverInputDStream.html#window(windowDuration:org.apache.spark.streaming.Duration,slideDuration:org.apache.spark.streaming.Duration):org.apache.spark.streaming.api.java.JavaDStream[T]", "kind" : "def"}, {"label" : "window", "tail" : "(windowDuration: Duration): JavaDStream[T]", "member" : "org.apache.spark.streaming.api.java.JavaDStream.window", "link" : "org\/apache\/spark\/streaming\/api\/java\/JavaReceiverInputDStream.html#window(windowDuration:org.apache.spark.streaming.Duration):org.apache.spark.streaming.api.java.JavaDStream[T]", "kind" : "def"}, {"label" : "compute", "tail" : "(validTime: Time): JavaRDD[T]", "member" : "org.apache.spark.streaming.api.java.JavaDStream.compute", "link" : "org\/apache\/spark\/streaming\/api\/java\/JavaReceiverInputDStream.html#compute(validTime:org.apache.spark.streaming.Time):org.apache.spark.api.java.JavaRDD[T]", "kind" : "def"}, {"label" : "persist", "tail" : "(storageLevel: StorageLevel): JavaDStream[T]", "member" : "org.apache.spark.streaming.api.java.JavaDStream.persist", "link" : "org\/apache\/spark\/streaming\/api\/java\/JavaReceiverInputDStream.html#persist(storageLevel:org.apache.spark.storage.StorageLevel):org.apache.spark.streaming.api.java.JavaDStream[T]", "kind" : "def"}, {"label" : "persist", "tail" : "(): JavaDStream[T]", "member" : "org.apache.spark.streaming.api.java.JavaDStream.persist", "link" : "org\/apache\/spark\/streaming\/api\/java\/JavaReceiverInputDStream.html#persist():org.apache.spark.streaming.api.java.JavaDStream[T]", "kind" : "def"}, {"label" : "cache", "tail" : "(): JavaDStream[T]", "member" : "org.apache.spark.streaming.api.java.JavaDStream.cache", "link" : "org\/apache\/spark\/streaming\/api\/java\/JavaReceiverInputDStream.html#cache():org.apache.spark.streaming.api.java.JavaDStream[T]", "kind" : "def"}, {"label" : "filter", "tail" : "(f: Function[T, Boolean]): JavaDStream[T]", "member" : "org.apache.spark.streaming.api.java.JavaDStream.filter", "link" : "org\/apache\/spark\/streaming\/api\/java\/JavaReceiverInputDStream.html#filter(f:org.apache.spark.api.java.function.Function[T,Boolean]):org.apache.spark.streaming.api.java.JavaDStream[T]", "kind" : "def"}, {"label" : "wrapRDD", "tail" : "(rdd: RDD[T]): JavaRDD[T]", "member" : "org.apache.spark.streaming.api.java.JavaDStream.wrapRDD", "link" : "org\/apache\/spark\/streaming\/api\/java\/JavaReceiverInputDStream.html#wrapRDD(rdd:org.apache.spark.rdd.RDD[T]):org.apache.spark.api.java.JavaRDD[T]", "kind" : "def"}, {"label" : "dstream", "tail" : ": DStream[T]", "member" : "org.apache.spark.streaming.api.java.JavaDStream.dstream", "link" : "org\/apache\/spark\/streaming\/api\/java\/JavaReceiverInputDStream.html#dstream:org.apache.spark.streaming.dstream.DStream[T]", "kind" : "val"}, {"label" : "checkpoint", "tail" : "(interval: Duration): DStream[T]", "member" : "org.apache.spark.streaming.api.java.JavaDStreamLike.checkpoint", "link" : "org\/apache\/spark\/streaming\/api\/java\/JavaReceiverInputDStream.html#checkpoint(interval:org.apache.spark.streaming.Duration):org.apache.spark.streaming.dstream.DStream[T]", "kind" : "def"}, {"label" : "transformWithToPair", "tail" : "(other: JavaPairDStream[K2, V2], transformFunc: Function3[JavaRDD[T], JavaPairRDD[K2, V2], Time, JavaPairRDD[K3, V3]]): JavaPairDStream[K3, V3]", "member" : "org.apache.spark.streaming.api.java.JavaDStreamLike.transformWithToPair", "link" : "org\/apache\/spark\/streaming\/api\/java\/JavaReceiverInputDStream.html#transformWithToPair[K2,V2,K3,V3](other:org.apache.spark.streaming.api.java.JavaPairDStream[K2,V2],transformFunc:org.apache.spark.api.java.function.Function3[R,org.apache.spark.api.java.JavaPairRDD[K2,V2],org.apache.spark.streaming.Time,org.apache.spark.api.java.JavaPairRDD[K3,V3]]):org.apache.spark.streaming.api.java.JavaPairDStream[K3,V3]", "kind" : "def"}, {"label" : "transformWith", "tail" : "(other: JavaPairDStream[K2, V2], transformFunc: Function3[JavaRDD[T], JavaPairRDD[K2, V2], Time, JavaRDD[W]]): JavaDStream[W]", "member" : "org.apache.spark.streaming.api.java.JavaDStreamLike.transformWith", "link" : "org\/apache\/spark\/streaming\/api\/java\/JavaReceiverInputDStream.html#transformWith[K2,V2,W](other:org.apache.spark.streaming.api.java.JavaPairDStream[K2,V2],transformFunc:org.apache.spark.api.java.function.Function3[R,org.apache.spark.api.java.JavaPairRDD[K2,V2],org.apache.spark.streaming.Time,org.apache.spark.api.java.JavaRDD[W]]):org.apache.spark.streaming.api.java.JavaDStream[W]", "kind" : "def"}, {"label" : "transformWithToPair", "tail" : "(other: JavaDStream[U], transformFunc: Function3[JavaRDD[T], JavaRDD[U], Time, JavaPairRDD[K2, V2]]): JavaPairDStream[K2, V2]", "member" : "org.apache.spark.streaming.api.java.JavaDStreamLike.transformWithToPair", "link" : "org\/apache\/spark\/streaming\/api\/java\/JavaReceiverInputDStream.html#transformWithToPair[U,K2,V2](other:org.apache.spark.streaming.api.java.JavaDStream[U],transformFunc:org.apache.spark.api.java.function.Function3[R,org.apache.spark.api.java.JavaRDD[U],org.apache.spark.streaming.Time,org.apache.spark.api.java.JavaPairRDD[K2,V2]]):org.apache.spark.streaming.api.java.JavaPairDStream[K2,V2]", "kind" : "def"}, {"label" : "transformWith", "tail" : "(other: JavaDStream[U], transformFunc: Function3[JavaRDD[T], JavaRDD[U], Time, JavaRDD[W]]): JavaDStream[W]", "member" : "org.apache.spark.streaming.api.java.JavaDStreamLike.transformWith", "link" : "org\/apache\/spark\/streaming\/api\/java\/JavaReceiverInputDStream.html#transformWith[U,W](other:org.apache.spark.streaming.api.java.JavaDStream[U],transformFunc:org.apache.spark.api.java.function.Function3[R,org.apache.spark.api.java.JavaRDD[U],org.apache.spark.streaming.Time,org.apache.spark.api.java.JavaRDD[W]]):org.apache.spark.streaming.api.java.JavaDStream[W]", "kind" : "def"}, {"label" : "transformToPair", "tail" : "(transformFunc: Function2[JavaRDD[T], Time, JavaPairRDD[K2, V2]]): JavaPairDStream[K2, V2]", "member" : "org.apache.spark.streaming.api.java.JavaDStreamLike.transformToPair", "link" : "org\/apache\/spark\/streaming\/api\/java\/JavaReceiverInputDStream.html#transformToPair[K2,V2](transformFunc:org.apache.spark.api.java.function.Function2[R,org.apache.spark.streaming.Time,org.apache.spark.api.java.JavaPairRDD[K2,V2]]):org.apache.spark.streaming.api.java.JavaPairDStream[K2,V2]", "kind" : "def"}, {"label" : "transformToPair", "tail" : "(transformFunc: Function[JavaRDD[T], JavaPairRDD[K2, V2]]): JavaPairDStream[K2, V2]", "member" : "org.apache.spark.streaming.api.java.JavaDStreamLike.transformToPair", "link" : "org\/apache\/spark\/streaming\/api\/java\/JavaReceiverInputDStream.html#transformToPair[K2,V2](transformFunc:org.apache.spark.api.java.function.Function[R,org.apache.spark.api.java.JavaPairRDD[K2,V2]]):org.apache.spark.streaming.api.java.JavaPairDStream[K2,V2]", "kind" : "def"}, {"label" : "transform", "tail" : "(transformFunc: Function2[JavaRDD[T], Time, JavaRDD[U]]): JavaDStream[U]", "member" : "org.apache.spark.streaming.api.java.JavaDStreamLike.transform", "link" : "org\/apache\/spark\/streaming\/api\/java\/JavaReceiverInputDStream.html#transform[U](transformFunc:org.apache.spark.api.java.function.Function2[R,org.apache.spark.streaming.Time,org.apache.spark.api.java.JavaRDD[U]]):org.apache.spark.streaming.api.java.JavaDStream[U]", "kind" : "def"}, {"label" : "transform", "tail" : "(transformFunc: Function[JavaRDD[T], JavaRDD[U]]): JavaDStream[U]", "member" : "org.apache.spark.streaming.api.java.JavaDStreamLike.transform", "link" : "org\/apache\/spark\/streaming\/api\/java\/JavaReceiverInputDStream.html#transform[U](transformFunc:org.apache.spark.api.java.function.Function[R,org.apache.spark.api.java.JavaRDD[U]]):org.apache.spark.streaming.api.java.JavaDStream[U]", "kind" : "def"}, {"label" : "foreachRDD", "tail" : "(foreachFunc: VoidFunction2[JavaRDD[T], Time]): Unit", "member" : "org.apache.spark.streaming.api.java.JavaDStreamLike.foreachRDD", "link" : "org\/apache\/spark\/streaming\/api\/java\/JavaReceiverInputDStream.html#foreachRDD(foreachFunc:org.apache.spark.api.java.function.VoidFunction2[R,org.apache.spark.streaming.Time]):Unit", "kind" : "def"}, {"label" : "foreachRDD", "tail" : "(foreachFunc: VoidFunction[JavaRDD[T]]): Unit", "member" : "org.apache.spark.streaming.api.java.JavaDStreamLike.foreachRDD", "link" : "org\/apache\/spark\/streaming\/api\/java\/JavaReceiverInputDStream.html#foreachRDD(foreachFunc:org.apache.spark.api.java.function.VoidFunction[R]):Unit", "kind" : "def"}, {"label" : "slice", "tail" : "(fromTime: Time, toTime: Time): List[JavaRDD[T]]", "member" : "org.apache.spark.streaming.api.java.JavaDStreamLike.slice", "link" : "org\/apache\/spark\/streaming\/api\/java\/JavaReceiverInputDStream.html#slice(fromTime:org.apache.spark.streaming.Time,toTime:org.apache.spark.streaming.Time):java.util.List[R]", "kind" : "def"}, {"label" : "reduceByWindow", "tail" : "(reduceFunc: Function2[T, T, T], invReduceFunc: Function2[T, T, T], windowDuration: Duration, slideDuration: Duration): JavaDStream[T]", "member" : "org.apache.spark.streaming.api.java.JavaDStreamLike.reduceByWindow", "link" : "org\/apache\/spark\/streaming\/api\/java\/JavaReceiverInputDStream.html#reduceByWindow(reduceFunc:org.apache.spark.api.java.function.Function2[T,T,T],invReduceFunc:org.apache.spark.api.java.function.Function2[T,T,T],windowDuration:org.apache.spark.streaming.Duration,slideDuration:org.apache.spark.streaming.Duration):org.apache.spark.streaming.api.java.JavaDStream[T]", "kind" : "def"}, {"label" : "reduceByWindow", "tail" : "(reduceFunc: Function2[T, T, T], windowDuration: Duration, slideDuration: Duration): JavaDStream[T]", "member" : "org.apache.spark.streaming.api.java.JavaDStreamLike.reduceByWindow", "link" : "org\/apache\/spark\/streaming\/api\/java\/JavaReceiverInputDStream.html#reduceByWindow(reduceFunc:org.apache.spark.api.java.function.Function2[T,T,T],windowDuration:org.apache.spark.streaming.Duration,slideDuration:org.apache.spark.streaming.Duration):org.apache.spark.streaming.api.java.JavaDStream[T]", "kind" : "def"}, {"label" : "reduce", "tail" : "(f: Function2[T, T, T]): JavaDStream[T]", "member" : "org.apache.spark.streaming.api.java.JavaDStreamLike.reduce", "link" : "org\/apache\/spark\/streaming\/api\/java\/JavaReceiverInputDStream.html#reduce(f:org.apache.spark.api.java.function.Function2[T,T,T]):org.apache.spark.streaming.api.java.JavaDStream[T]", "kind" : "def"}, {"label" : "mapPartitionsToPair", "tail" : "(f: PairFlatMapFunction[Iterator[T], K2, V2]): JavaPairDStream[K2, V2]", "member" : "org.apache.spark.streaming.api.java.JavaDStreamLike.mapPartitionsToPair", "link" : "org\/apache\/spark\/streaming\/api\/java\/JavaReceiverInputDStream.html#mapPartitionsToPair[K2,V2](f:org.apache.spark.api.java.function.PairFlatMapFunction[java.util.Iterator[T],K2,V2]):org.apache.spark.streaming.api.java.JavaPairDStream[K2,V2]", "kind" : "def"}, {"label" : "mapPartitions", "tail" : "(f: FlatMapFunction[Iterator[T], U]): JavaDStream[U]", "member" : "org.apache.spark.streaming.api.java.JavaDStreamLike.mapPartitions", "link" : "org\/apache\/spark\/streaming\/api\/java\/JavaReceiverInputDStream.html#mapPartitions[U](f:org.apache.spark.api.java.function.FlatMapFunction[java.util.Iterator[T],U]):org.apache.spark.streaming.api.java.JavaDStream[U]", "kind" : "def"}, {"label" : "flatMapToPair", "tail" : "(f: PairFlatMapFunction[T, K2, V2]): JavaPairDStream[K2, V2]", "member" : "org.apache.spark.streaming.api.java.JavaDStreamLike.flatMapToPair", "link" : "org\/apache\/spark\/streaming\/api\/java\/JavaReceiverInputDStream.html#flatMapToPair[K2,V2](f:org.apache.spark.api.java.function.PairFlatMapFunction[T,K2,V2]):org.apache.spark.streaming.api.java.JavaPairDStream[K2,V2]", "kind" : "def"}, {"label" : "flatMap", "tail" : "(f: FlatMapFunction[T, U]): JavaDStream[U]", "member" : "org.apache.spark.streaming.api.java.JavaDStreamLike.flatMap", "link" : "org\/apache\/spark\/streaming\/api\/java\/JavaReceiverInputDStream.html#flatMap[U](f:org.apache.spark.api.java.function.FlatMapFunction[T,U]):org.apache.spark.streaming.api.java.JavaDStream[U]", "kind" : "def"}, {"label" : "mapToPair", "tail" : "(f: PairFunction[T, K2, V2]): JavaPairDStream[K2, V2]", "member" : "org.apache.spark.streaming.api.java.JavaDStreamLike.mapToPair", "link" : "org\/apache\/spark\/streaming\/api\/java\/JavaReceiverInputDStream.html#mapToPair[K2,V2](f:org.apache.spark.api.java.function.PairFunction[T,K2,V2]):org.apache.spark.streaming.api.java.JavaPairDStream[K2,V2]", "kind" : "def"}, {"label" : "map", "tail" : "(f: Function[T, U]): JavaDStream[U]", "member" : "org.apache.spark.streaming.api.java.JavaDStreamLike.map", "link" : "org\/apache\/spark\/streaming\/api\/java\/JavaReceiverInputDStream.html#map[U](f:org.apache.spark.api.java.function.Function[T,U]):org.apache.spark.streaming.api.java.JavaDStream[U]", "kind" : "def"}, {"label" : "context", "tail" : "(): StreamingContext", "member" : "org.apache.spark.streaming.api.java.JavaDStreamLike.context", "link" : "org\/apache\/spark\/streaming\/api\/java\/JavaReceiverInputDStream.html#context():org.apache.spark.streaming.StreamingContext", "kind" : "def"}, {"label" : "glom", "tail" : "(): JavaDStream[List[T]]", "member" : "org.apache.spark.streaming.api.java.JavaDStreamLike.glom", "link" : "org\/apache\/spark\/streaming\/api\/java\/JavaReceiverInputDStream.html#glom():org.apache.spark.streaming.api.java.JavaDStream[java.util.List[T]]", "kind" : "def"}, {"label" : "countByValueAndWindow", "tail" : "(windowDuration: Duration, slideDuration: Duration, numPartitions: Int): JavaPairDStream[T, Long]", "member" : "org.apache.spark.streaming.api.java.JavaDStreamLike.countByValueAndWindow", "link" : "org\/apache\/spark\/streaming\/api\/java\/JavaReceiverInputDStream.html#countByValueAndWindow(windowDuration:org.apache.spark.streaming.Duration,slideDuration:org.apache.spark.streaming.Duration,numPartitions:Int):org.apache.spark.streaming.api.java.JavaPairDStream[T,Long]", "kind" : "def"}, {"label" : "countByValueAndWindow", "tail" : "(windowDuration: Duration, slideDuration: Duration): JavaPairDStream[T, Long]", "member" : "org.apache.spark.streaming.api.java.JavaDStreamLike.countByValueAndWindow", "link" : "org\/apache\/spark\/streaming\/api\/java\/JavaReceiverInputDStream.html#countByValueAndWindow(windowDuration:org.apache.spark.streaming.Duration,slideDuration:org.apache.spark.streaming.Duration):org.apache.spark.streaming.api.java.JavaPairDStream[T,Long]", "kind" : "def"}, {"label" : "countByWindow", "tail" : "(windowDuration: Duration, slideDuration: Duration): JavaDStream[Long]", "member" : "org.apache.spark.streaming.api.java.JavaDStreamLike.countByWindow", "link" : "org\/apache\/spark\/streaming\/api\/java\/JavaReceiverInputDStream.html#countByWindow(windowDuration:org.apache.spark.streaming.Duration,slideDuration:org.apache.spark.streaming.Duration):org.apache.spark.streaming.api.java.JavaDStream[Long]", "kind" : "def"}, {"label" : "countByValue", "tail" : "(numPartitions: Int): JavaPairDStream[T, Long]", "member" : "org.apache.spark.streaming.api.java.JavaDStreamLike.countByValue", "link" : "org\/apache\/spark\/streaming\/api\/java\/JavaReceiverInputDStream.html#countByValue(numPartitions:Int):org.apache.spark.streaming.api.java.JavaPairDStream[T,Long]", "kind" : "def"}, {"label" : "countByValue", "tail" : "(): JavaPairDStream[T, Long]", "member" : "org.apache.spark.streaming.api.java.JavaDStreamLike.countByValue", "link" : "org\/apache\/spark\/streaming\/api\/java\/JavaReceiverInputDStream.html#countByValue():org.apache.spark.streaming.api.java.JavaPairDStream[T,Long]", "kind" : "def"}, {"label" : "count", "tail" : "(): JavaDStream[Long]", "member" : "org.apache.spark.streaming.api.java.JavaDStreamLike.count", "link" : "org\/apache\/spark\/streaming\/api\/java\/JavaReceiverInputDStream.html#count():org.apache.spark.streaming.api.java.JavaDStream[Long]", "kind" : "def"}, {"label" : "print", "tail" : "(num: Int): Unit", "member" : "org.apache.spark.streaming.api.java.JavaDStreamLike.print", "link" : "org\/apache\/spark\/streaming\/api\/java\/JavaReceiverInputDStream.html#print(num:Int):Unit", "kind" : "def"}, {"label" : "print", "tail" : "(): Unit", "member" : "org.apache.spark.streaming.api.java.JavaDStreamLike.print", "link" : "org\/apache\/spark\/streaming\/api\/java\/JavaReceiverInputDStream.html#print():Unit", "kind" : "def"}, {"label" : "scalaIntToJavaLong", "tail" : "(in: DStream[Long]): JavaDStream[Long]", "member" : "org.apache.spark.streaming.api.java.JavaDStreamLike.scalaIntToJavaLong", "link" : "org\/apache\/spark\/streaming\/api\/java\/JavaReceiverInputDStream.html#scalaIntToJavaLong(in:org.apache.spark.streaming.dstream.DStream[Long]):org.apache.spark.streaming.api.java.JavaDStream[Long]", "kind" : "implicit def"}, {"label" : "synchronized", "tail" : "(arg0: ⇒ T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "org\/apache\/spark\/streaming\/api\/java\/JavaReceiverInputDStream.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "org\/apache\/spark\/streaming\/api\/java\/JavaReceiverInputDStream.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "org\/apache\/spark\/streaming\/api\/java\/JavaReceiverInputDStream.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "org\/apache\/spark\/streaming\/api\/java\/JavaReceiverInputDStream.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "org\/apache\/spark\/streaming\/api\/java\/JavaReceiverInputDStream.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "org\/apache\/spark\/streaming\/api\/java\/JavaReceiverInputDStream.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "org\/apache\/spark\/streaming\/api\/java\/JavaReceiverInputDStream.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "org\/apache\/spark\/streaming\/api\/java\/JavaReceiverInputDStream.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "org\/apache\/spark\/streaming\/api\/java\/JavaReceiverInputDStream.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "org\/apache\/spark\/streaming\/api\/java\/JavaReceiverInputDStream.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "org\/apache\/spark\/streaming\/api\/java\/JavaReceiverInputDStream.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "org\/apache\/spark\/streaming\/api\/java\/JavaReceiverInputDStream.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "org\/apache\/spark\/streaming\/api\/java\/JavaReceiverInputDStream.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "org\/apache\/spark\/streaming\/api\/java\/JavaReceiverInputDStream.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.equals", "link" : "org\/apache\/spark\/streaming\/api\/java\/JavaReceiverInputDStream.html#equals(x$1:Any):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "org\/apache\/spark\/streaming\/api\/java\/JavaReceiverInputDStream.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_]", "member" : "scala.AnyRef.getClass", "link" : "org\/apache\/spark\/streaming\/api\/java\/JavaReceiverInputDStream.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "org\/apache\/spark\/streaming\/api\/java\/JavaReceiverInputDStream.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "org\/apache\/spark\/streaming\/api\/java\/JavaReceiverInputDStream.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "members_object" : [{"label" : "fromReceiverInputDStream", "tail" : "(receiverInputDStream: ReceiverInputDStream[T])(arg0: ClassTag[T]): JavaReceiverInputDStream[T]", "member" : "org.apache.spark.streaming.api.java.JavaReceiverInputDStream.fromReceiverInputDStream", "link" : "org\/apache\/spark\/streaming\/api\/java\/JavaReceiverInputDStream$.html#fromReceiverInputDStream[T](receiverInputDStream:org.apache.spark.streaming.dstream.ReceiverInputDStream[T])(implicitevidence$1:scala.reflect.ClassTag[T]):org.apache.spark.streaming.api.java.JavaReceiverInputDStream[T]", "kind" : "implicit def"}, {"label" : "synchronized", "tail" : "(arg0: ⇒ T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "org\/apache\/spark\/streaming\/api\/java\/JavaReceiverInputDStream$.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "org\/apache\/spark\/streaming\/api\/java\/JavaReceiverInputDStream$.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "org\/apache\/spark\/streaming\/api\/java\/JavaReceiverInputDStream$.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "org\/apache\/spark\/streaming\/api\/java\/JavaReceiverInputDStream$.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "org\/apache\/spark\/streaming\/api\/java\/JavaReceiverInputDStream$.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "org\/apache\/spark\/streaming\/api\/java\/JavaReceiverInputDStream$.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "org\/apache\/spark\/streaming\/api\/java\/JavaReceiverInputDStream$.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "org\/apache\/spark\/streaming\/api\/java\/JavaReceiverInputDStream$.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "org\/apache\/spark\/streaming\/api\/java\/JavaReceiverInputDStream$.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "org\/apache\/spark\/streaming\/api\/java\/JavaReceiverInputDStream$.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "org\/apache\/spark\/streaming\/api\/java\/JavaReceiverInputDStream$.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "org\/apache\/spark\/streaming\/api\/java\/JavaReceiverInputDStream$.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "org\/apache\/spark\/streaming\/api\/java\/JavaReceiverInputDStream$.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "org\/apache\/spark\/streaming\/api\/java\/JavaReceiverInputDStream$.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.equals", "link" : "org\/apache\/spark\/streaming\/api\/java\/JavaReceiverInputDStream$.html#equals(x$1:Any):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "org\/apache\/spark\/streaming\/api\/java\/JavaReceiverInputDStream$.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_]", "member" : "scala.AnyRef.getClass", "link" : "org\/apache\/spark\/streaming\/api\/java\/JavaReceiverInputDStream$.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "org\/apache\/spark\/streaming\/api\/java\/JavaReceiverInputDStream$.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "org\/apache\/spark\/streaming\/api\/java\/JavaReceiverInputDStream$.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "class" : "org\/apache\/spark\/streaming\/api\/java\/JavaReceiverInputDStream.html", "kind" : "class"}, {"name" : "org.apache.spark.streaming.api.java.JavaStreamingContext", "shortDescription" : "A Java-friendly version of org.apache.spark.streaming.StreamingContext which is the mainentry point for Spark Streaming functionality.", "object" : "org\/apache\/spark\/streaming\/api\/java\/JavaStreamingContext$.html", "members_class" : [{"label" : "close", "tail" : "(): Unit", "member" : "org.apache.spark.streaming.api.java.JavaStreamingContext.close", "link" : "org\/apache\/spark\/streaming\/api\/java\/JavaStreamingContext.html#close():Unit", "kind" : "def"}, {"label" : "stop", "tail" : "(stopSparkContext: Boolean, stopGracefully: Boolean): Unit", "member" : "org.apache.spark.streaming.api.java.JavaStreamingContext.stop", "link" : "org\/apache\/spark\/streaming\/api\/java\/JavaStreamingContext.html#stop(stopSparkContext:Boolean,stopGracefully:Boolean):Unit", "kind" : "def"}, {"label" : "stop", "tail" : "(stopSparkContext: Boolean): Unit", "member" : "org.apache.spark.streaming.api.java.JavaStreamingContext.stop", "link" : "org\/apache\/spark\/streaming\/api\/java\/JavaStreamingContext.html#stop(stopSparkContext:Boolean):Unit", "kind" : "def"}, {"label" : "stop", "tail" : "(): Unit", "member" : "org.apache.spark.streaming.api.java.JavaStreamingContext.stop", "link" : "org\/apache\/spark\/streaming\/api\/java\/JavaStreamingContext.html#stop():Unit", "kind" : "def"}, {"label" : "awaitTerminationOrTimeout", "tail" : "(timeout: Long): Boolean", "member" : "org.apache.spark.streaming.api.java.JavaStreamingContext.awaitTerminationOrTimeout", "link" : "org\/apache\/spark\/streaming\/api\/java\/JavaStreamingContext.html#awaitTerminationOrTimeout(timeout:Long):Boolean", "kind" : "def"}, {"label" : "awaitTermination", "tail" : "(): Unit", "member" : "org.apache.spark.streaming.api.java.JavaStreamingContext.awaitTermination", "link" : "org\/apache\/spark\/streaming\/api\/java\/JavaStreamingContext.html#awaitTermination():Unit", "kind" : "def"}, {"label" : "start", "tail" : "(): Unit", "member" : "org.apache.spark.streaming.api.java.JavaStreamingContext.start", "link" : "org\/apache\/spark\/streaming\/api\/java\/JavaStreamingContext.html#start():Unit", "kind" : "def"}, {"label" : "getState", "tail" : "(): StreamingContextState", "member" : "org.apache.spark.streaming.api.java.JavaStreamingContext.getState", "link" : "org\/apache\/spark\/streaming\/api\/java\/JavaStreamingContext.html#getState():org.apache.spark.streaming.StreamingContextState", "kind" : "def"}, {"label" : "addStreamingListener", "tail" : "(streamingListener: StreamingListener): Unit", "member" : "org.apache.spark.streaming.api.java.JavaStreamingContext.addStreamingListener", "link" : "org\/apache\/spark\/streaming\/api\/java\/JavaStreamingContext.html#addStreamingListener(streamingListener:org.apache.spark.streaming.scheduler.StreamingListener):Unit", "kind" : "def"}, {"label" : "remember", "tail" : "(duration: Duration): Unit", "member" : "org.apache.spark.streaming.api.java.JavaStreamingContext.remember", "link" : "org\/apache\/spark\/streaming\/api\/java\/JavaStreamingContext.html#remember(duration:org.apache.spark.streaming.Duration):Unit", "kind" : "def"}, {"label" : "checkpoint", "tail" : "(directory: String): Unit", "member" : "org.apache.spark.streaming.api.java.JavaStreamingContext.checkpoint", "link" : "org\/apache\/spark\/streaming\/api\/java\/JavaStreamingContext.html#checkpoint(directory:String):Unit", "kind" : "def"}, {"label" : "transformToPair", "tail" : "(dstreams: List[JavaDStream[_]], transformFunc: Function2[List[JavaRDD[_]], Time, JavaPairRDD[K, V]]): JavaPairDStream[K, V]", "member" : "org.apache.spark.streaming.api.java.JavaStreamingContext.transformToPair", "link" : "org\/apache\/spark\/streaming\/api\/java\/JavaStreamingContext.html#transformToPair[K,V](dstreams:java.util.List[org.apache.spark.streaming.api.java.JavaDStream[_]],transformFunc:org.apache.spark.api.java.function.Function2[java.util.List[org.apache.spark.api.java.JavaRDD[_]],org.apache.spark.streaming.Time,org.apache.spark.api.java.JavaPairRDD[K,V]]):org.apache.spark.streaming.api.java.JavaPairDStream[K,V]", "kind" : "def"}, {"label" : "transform", "tail" : "(dstreams: List[JavaDStream[_]], transformFunc: Function2[List[JavaRDD[_]], Time, JavaRDD[T]]): JavaDStream[T]", "member" : "org.apache.spark.streaming.api.java.JavaStreamingContext.transform", "link" : "org\/apache\/spark\/streaming\/api\/java\/JavaStreamingContext.html#transform[T](dstreams:java.util.List[org.apache.spark.streaming.api.java.JavaDStream[_]],transformFunc:org.apache.spark.api.java.function.Function2[java.util.List[org.apache.spark.api.java.JavaRDD[_]],org.apache.spark.streaming.Time,org.apache.spark.api.java.JavaRDD[T]]):org.apache.spark.streaming.api.java.JavaDStream[T]", "kind" : "def"}, {"label" : "union", "tail" : "(jdstreams: JavaPairDStream[K, V]*): JavaPairDStream[K, V]", "member" : "org.apache.spark.streaming.api.java.JavaStreamingContext.union", "link" : "org\/apache\/spark\/streaming\/api\/java\/JavaStreamingContext.html#union[K,V](jdstreams:org.apache.spark.streaming.api.java.JavaPairDStream[K,V]*):org.apache.spark.streaming.api.java.JavaPairDStream[K,V]", "kind" : "def"}, {"label" : "union", "tail" : "(jdstreams: JavaDStream[T]*): JavaDStream[T]", "member" : "org.apache.spark.streaming.api.java.JavaStreamingContext.union", "link" : "org\/apache\/spark\/streaming\/api\/java\/JavaStreamingContext.html#union[T](jdstreams:org.apache.spark.streaming.api.java.JavaDStream[T]*):org.apache.spark.streaming.api.java.JavaDStream[T]", "kind" : "def"}, {"label" : "receiverStream", "tail" : "(receiver: Receiver[T]): JavaReceiverInputDStream[T]", "member" : "org.apache.spark.streaming.api.java.JavaStreamingContext.receiverStream", "link" : "org\/apache\/spark\/streaming\/api\/java\/JavaStreamingContext.html#receiverStream[T](receiver:org.apache.spark.streaming.receiver.Receiver[T]):org.apache.spark.streaming.api.java.JavaReceiverInputDStream[T]", "kind" : "def"}, {"label" : "queueStream", "tail" : "(queue: Queue[JavaRDD[T]], oneAtATime: Boolean, defaultRDD: JavaRDD[T]): JavaInputDStream[T]", "member" : "org.apache.spark.streaming.api.java.JavaStreamingContext.queueStream", "link" : "org\/apache\/spark\/streaming\/api\/java\/JavaStreamingContext.html#queueStream[T](queue:java.util.Queue[org.apache.spark.api.java.JavaRDD[T]],oneAtATime:Boolean,defaultRDD:org.apache.spark.api.java.JavaRDD[T]):org.apache.spark.streaming.api.java.JavaInputDStream[T]", "kind" : "def"}, {"label" : "queueStream", "tail" : "(queue: Queue[JavaRDD[T]], oneAtATime: Boolean): JavaInputDStream[T]", "member" : "org.apache.spark.streaming.api.java.JavaStreamingContext.queueStream", "link" : "org\/apache\/spark\/streaming\/api\/java\/JavaStreamingContext.html#queueStream[T](queue:java.util.Queue[org.apache.spark.api.java.JavaRDD[T]],oneAtATime:Boolean):org.apache.spark.streaming.api.java.JavaInputDStream[T]", "kind" : "def"}, {"label" : "queueStream", "tail" : "(queue: Queue[JavaRDD[T]]): JavaDStream[T]", "member" : "org.apache.spark.streaming.api.java.JavaStreamingContext.queueStream", "link" : "org\/apache\/spark\/streaming\/api\/java\/JavaStreamingContext.html#queueStream[T](queue:java.util.Queue[org.apache.spark.api.java.JavaRDD[T]]):org.apache.spark.streaming.api.java.JavaDStream[T]", "kind" : "def"}, {"label" : "fileStream", "tail" : "(directory: String, kClass: Class[K], vClass: Class[V], fClass: Class[F], filter: Function[Path, Boolean], newFilesOnly: Boolean, conf: Configuration): JavaPairInputDStream[K, V]", "member" : "org.apache.spark.streaming.api.java.JavaStreamingContext.fileStream", "link" : "org\/apache\/spark\/streaming\/api\/java\/JavaStreamingContext.html#fileStream[K,V,F<:org.apache.hadoop.mapreduce.InputFormat[K,V]](directory:String,kClass:Class[K],vClass:Class[V],fClass:Class[F],filter:org.apache.spark.api.java.function.Function[org.apache.hadoop.fs.Path,Boolean],newFilesOnly:Boolean,conf:org.apache.hadoop.conf.Configuration):org.apache.spark.streaming.api.java.JavaPairInputDStream[K,V]", "kind" : "def"}, {"label" : "fileStream", "tail" : "(directory: String, kClass: Class[K], vClass: Class[V], fClass: Class[F], filter: Function[Path, Boolean], newFilesOnly: Boolean): JavaPairInputDStream[K, V]", "member" : "org.apache.spark.streaming.api.java.JavaStreamingContext.fileStream", "link" : "org\/apache\/spark\/streaming\/api\/java\/JavaStreamingContext.html#fileStream[K,V,F<:org.apache.hadoop.mapreduce.InputFormat[K,V]](directory:String,kClass:Class[K],vClass:Class[V],fClass:Class[F],filter:org.apache.spark.api.java.function.Function[org.apache.hadoop.fs.Path,Boolean],newFilesOnly:Boolean):org.apache.spark.streaming.api.java.JavaPairInputDStream[K,V]", "kind" : "def"}, {"label" : "fileStream", "tail" : "(directory: String, kClass: Class[K], vClass: Class[V], fClass: Class[F]): JavaPairInputDStream[K, V]", "member" : "org.apache.spark.streaming.api.java.JavaStreamingContext.fileStream", "link" : "org\/apache\/spark\/streaming\/api\/java\/JavaStreamingContext.html#fileStream[K,V,F<:org.apache.hadoop.mapreduce.InputFormat[K,V]](directory:String,kClass:Class[K],vClass:Class[V],fClass:Class[F]):org.apache.spark.streaming.api.java.JavaPairInputDStream[K,V]", "kind" : "def"}, {"label" : "rawSocketStream", "tail" : "(hostname: String, port: Int): JavaReceiverInputDStream[T]", "member" : "org.apache.spark.streaming.api.java.JavaStreamingContext.rawSocketStream", "link" : "org\/apache\/spark\/streaming\/api\/java\/JavaStreamingContext.html#rawSocketStream[T](hostname:String,port:Int):org.apache.spark.streaming.api.java.JavaReceiverInputDStream[T]", "kind" : "def"}, {"label" : "rawSocketStream", "tail" : "(hostname: String, port: Int, storageLevel: StorageLevel): JavaReceiverInputDStream[T]", "member" : "org.apache.spark.streaming.api.java.JavaStreamingContext.rawSocketStream", "link" : "org\/apache\/spark\/streaming\/api\/java\/JavaStreamingContext.html#rawSocketStream[T](hostname:String,port:Int,storageLevel:org.apache.spark.storage.StorageLevel):org.apache.spark.streaming.api.java.JavaReceiverInputDStream[T]", "kind" : "def"}, {"label" : "binaryRecordsStream", "tail" : "(directory: String, recordLength: Int): JavaDStream[Array[Byte]]", "member" : "org.apache.spark.streaming.api.java.JavaStreamingContext.binaryRecordsStream", "link" : "org\/apache\/spark\/streaming\/api\/java\/JavaStreamingContext.html#binaryRecordsStream(directory:String,recordLength:Int):org.apache.spark.streaming.api.java.JavaDStream[Array[Byte]]", "kind" : "def"}, {"label" : "textFileStream", "tail" : "(directory: String): JavaDStream[String]", "member" : "org.apache.spark.streaming.api.java.JavaStreamingContext.textFileStream", "link" : "org\/apache\/spark\/streaming\/api\/java\/JavaStreamingContext.html#textFileStream(directory:String):org.apache.spark.streaming.api.java.JavaDStream[String]", "kind" : "def"}, {"label" : "socketStream", "tail" : "(hostname: String, port: Int, converter: Function[InputStream, Iterable[T]], storageLevel: StorageLevel): JavaReceiverInputDStream[T]", "member" : "org.apache.spark.streaming.api.java.JavaStreamingContext.socketStream", "link" : "org\/apache\/spark\/streaming\/api\/java\/JavaStreamingContext.html#socketStream[T](hostname:String,port:Int,converter:org.apache.spark.api.java.function.Function[java.io.InputStream,Iterable[T]],storageLevel:org.apache.spark.storage.StorageLevel):org.apache.spark.streaming.api.java.JavaReceiverInputDStream[T]", "kind" : "def"}, {"label" : "socketTextStream", "tail" : "(hostname: String, port: Int): JavaReceiverInputDStream[String]", "member" : "org.apache.spark.streaming.api.java.JavaStreamingContext.socketTextStream", "link" : "org\/apache\/spark\/streaming\/api\/java\/JavaStreamingContext.html#socketTextStream(hostname:String,port:Int):org.apache.spark.streaming.api.java.JavaReceiverInputDStream[String]", "kind" : "def"}, {"label" : "socketTextStream", "tail" : "(hostname: String, port: Int, storageLevel: StorageLevel): JavaReceiverInputDStream[String]", "member" : "org.apache.spark.streaming.api.java.JavaStreamingContext.socketTextStream", "link" : "org\/apache\/spark\/streaming\/api\/java\/JavaStreamingContext.html#socketTextStream(hostname:String,port:Int,storageLevel:org.apache.spark.storage.StorageLevel):org.apache.spark.streaming.api.java.JavaReceiverInputDStream[String]", "kind" : "def"}, {"label" : "sparkContext", "tail" : ": JavaSparkContext", "member" : "org.apache.spark.streaming.api.java.JavaStreamingContext.sparkContext", "link" : "org\/apache\/spark\/streaming\/api\/java\/JavaStreamingContext.html#sparkContext:org.apache.spark.api.java.JavaSparkContext", "kind" : "val"}, {"member" : "org.apache.spark.streaming.api.java.JavaStreamingContext#<init>", "error" : "unsupported entity"}, {"member" : "org.apache.spark.streaming.api.java.JavaStreamingContext#<init>", "error" : "unsupported entity"}, {"member" : "org.apache.spark.streaming.api.java.JavaStreamingContext#<init>", "error" : "unsupported entity"}, {"member" : "org.apache.spark.streaming.api.java.JavaStreamingContext#<init>", "error" : "unsupported entity"}, {"member" : "org.apache.spark.streaming.api.java.JavaStreamingContext#<init>", "error" : "unsupported entity"}, {"member" : "org.apache.spark.streaming.api.java.JavaStreamingContext#<init>", "error" : "unsupported entity"}, {"member" : "org.apache.spark.streaming.api.java.JavaStreamingContext#<init>", "error" : "unsupported entity"}, {"member" : "org.apache.spark.streaming.api.java.JavaStreamingContext#<init>", "error" : "unsupported entity"}, {"member" : "org.apache.spark.streaming.api.java.JavaStreamingContext#<init>", "error" : "unsupported entity"}, {"label" : "ssc", "tail" : ": StreamingContext", "member" : "org.apache.spark.streaming.api.java.JavaStreamingContext.ssc", "link" : "org\/apache\/spark\/streaming\/api\/java\/JavaStreamingContext.html#ssc:org.apache.spark.streaming.StreamingContext", "kind" : "val"}, {"label" : "synchronized", "tail" : "(arg0: ⇒ T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "org\/apache\/spark\/streaming\/api\/java\/JavaStreamingContext.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "org\/apache\/spark\/streaming\/api\/java\/JavaStreamingContext.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "org\/apache\/spark\/streaming\/api\/java\/JavaStreamingContext.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "org\/apache\/spark\/streaming\/api\/java\/JavaStreamingContext.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "org\/apache\/spark\/streaming\/api\/java\/JavaStreamingContext.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "org\/apache\/spark\/streaming\/api\/java\/JavaStreamingContext.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "org\/apache\/spark\/streaming\/api\/java\/JavaStreamingContext.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "org\/apache\/spark\/streaming\/api\/java\/JavaStreamingContext.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "org\/apache\/spark\/streaming\/api\/java\/JavaStreamingContext.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "org\/apache\/spark\/streaming\/api\/java\/JavaStreamingContext.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "org\/apache\/spark\/streaming\/api\/java\/JavaStreamingContext.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "org\/apache\/spark\/streaming\/api\/java\/JavaStreamingContext.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "org\/apache\/spark\/streaming\/api\/java\/JavaStreamingContext.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "org\/apache\/spark\/streaming\/api\/java\/JavaStreamingContext.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.equals", "link" : "org\/apache\/spark\/streaming\/api\/java\/JavaStreamingContext.html#equals(x$1:Any):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "org\/apache\/spark\/streaming\/api\/java\/JavaStreamingContext.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_]", "member" : "scala.AnyRef.getClass", "link" : "org\/apache\/spark\/streaming\/api\/java\/JavaStreamingContext.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "org\/apache\/spark\/streaming\/api\/java\/JavaStreamingContext.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "org\/apache\/spark\/streaming\/api\/java\/JavaStreamingContext.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "members_object" : [{"label" : "jarOfClass", "tail" : "(cls: Class[_]): Array[String]", "member" : "org.apache.spark.streaming.api.java.JavaStreamingContext.jarOfClass", "link" : "org\/apache\/spark\/streaming\/api\/java\/JavaStreamingContext$.html#jarOfClass(cls:Class[_]):Array[String]", "kind" : "def"}, {"label" : "getOrCreate", "tail" : "(checkpointPath: String, creatingFunc: Function0[JavaStreamingContext], hadoopConf: Configuration, createOnError: Boolean): JavaStreamingContext", "member" : "org.apache.spark.streaming.api.java.JavaStreamingContext.getOrCreate", "link" : "org\/apache\/spark\/streaming\/api\/java\/JavaStreamingContext$.html#getOrCreate(checkpointPath:String,creatingFunc:org.apache.spark.api.java.function.Function0[org.apache.spark.streaming.api.java.JavaStreamingContext],hadoopConf:org.apache.hadoop.conf.Configuration,createOnError:Boolean):org.apache.spark.streaming.api.java.JavaStreamingContext", "kind" : "def"}, {"label" : "getOrCreate", "tail" : "(checkpointPath: String, creatingFunc: Function0[JavaStreamingContext], hadoopConf: Configuration): JavaStreamingContext", "member" : "org.apache.spark.streaming.api.java.JavaStreamingContext.getOrCreate", "link" : "org\/apache\/spark\/streaming\/api\/java\/JavaStreamingContext$.html#getOrCreate(checkpointPath:String,creatingFunc:org.apache.spark.api.java.function.Function0[org.apache.spark.streaming.api.java.JavaStreamingContext],hadoopConf:org.apache.hadoop.conf.Configuration):org.apache.spark.streaming.api.java.JavaStreamingContext", "kind" : "def"}, {"label" : "getOrCreate", "tail" : "(checkpointPath: String, creatingFunc: Function0[JavaStreamingContext]): JavaStreamingContext", "member" : "org.apache.spark.streaming.api.java.JavaStreamingContext.getOrCreate", "link" : "org\/apache\/spark\/streaming\/api\/java\/JavaStreamingContext$.html#getOrCreate(checkpointPath:String,creatingFunc:org.apache.spark.api.java.function.Function0[org.apache.spark.streaming.api.java.JavaStreamingContext]):org.apache.spark.streaming.api.java.JavaStreamingContext", "kind" : "def"}, {"label" : "synchronized", "tail" : "(arg0: ⇒ T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "org\/apache\/spark\/streaming\/api\/java\/JavaStreamingContext$.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "org\/apache\/spark\/streaming\/api\/java\/JavaStreamingContext$.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "org\/apache\/spark\/streaming\/api\/java\/JavaStreamingContext$.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "org\/apache\/spark\/streaming\/api\/java\/JavaStreamingContext$.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "org\/apache\/spark\/streaming\/api\/java\/JavaStreamingContext$.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "org\/apache\/spark\/streaming\/api\/java\/JavaStreamingContext$.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "org\/apache\/spark\/streaming\/api\/java\/JavaStreamingContext$.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "org\/apache\/spark\/streaming\/api\/java\/JavaStreamingContext$.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "org\/apache\/spark\/streaming\/api\/java\/JavaStreamingContext$.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "org\/apache\/spark\/streaming\/api\/java\/JavaStreamingContext$.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "org\/apache\/spark\/streaming\/api\/java\/JavaStreamingContext$.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "org\/apache\/spark\/streaming\/api\/java\/JavaStreamingContext$.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "org\/apache\/spark\/streaming\/api\/java\/JavaStreamingContext$.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "org\/apache\/spark\/streaming\/api\/java\/JavaStreamingContext$.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.equals", "link" : "org\/apache\/spark\/streaming\/api\/java\/JavaStreamingContext$.html#equals(x$1:Any):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "org\/apache\/spark\/streaming\/api\/java\/JavaStreamingContext$.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_]", "member" : "scala.AnyRef.getClass", "link" : "org\/apache\/spark\/streaming\/api\/java\/JavaStreamingContext$.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "org\/apache\/spark\/streaming\/api\/java\/JavaStreamingContext$.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "org\/apache\/spark\/streaming\/api\/java\/JavaStreamingContext$.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "class" : "org\/apache\/spark\/streaming\/api\/java\/JavaStreamingContext.html", "kind" : "class"}], "org.apache.spark.streaming.api" : [], "org" : [], "org.apache.spark.status.api" : [], "org.apache.spark.streaming.scheduler.rate" : [{"name" : "org.apache.spark.streaming.scheduler.rate.RateEstimator", "shortDescription" : "", "object" : "org\/apache\/spark\/streaming\/scheduler\/rate\/RateEstimator$.html", "members_object" : [{"label" : "create", "tail" : "(conf: SparkConf, batchInterval: Duration): RateEstimator", "member" : "org.apache.spark.streaming.scheduler.rate.RateEstimator.create", "link" : "org\/apache\/spark\/streaming\/scheduler\/rate\/RateEstimator$.html#create(conf:org.apache.spark.SparkConf,batchInterval:org.apache.spark.streaming.Duration):org.apache.spark.streaming.scheduler.rate.RateEstimator", "kind" : "def"}, {"label" : "synchronized", "tail" : "(arg0: ⇒ T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "org\/apache\/spark\/streaming\/scheduler\/rate\/RateEstimator$.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "org\/apache\/spark\/streaming\/scheduler\/rate\/RateEstimator$.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "org\/apache\/spark\/streaming\/scheduler\/rate\/RateEstimator$.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "org\/apache\/spark\/streaming\/scheduler\/rate\/RateEstimator$.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "org\/apache\/spark\/streaming\/scheduler\/rate\/RateEstimator$.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "org\/apache\/spark\/streaming\/scheduler\/rate\/RateEstimator$.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "org\/apache\/spark\/streaming\/scheduler\/rate\/RateEstimator$.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "org\/apache\/spark\/streaming\/scheduler\/rate\/RateEstimator$.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "org\/apache\/spark\/streaming\/scheduler\/rate\/RateEstimator$.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "org\/apache\/spark\/streaming\/scheduler\/rate\/RateEstimator$.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "org\/apache\/spark\/streaming\/scheduler\/rate\/RateEstimator$.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "org\/apache\/spark\/streaming\/scheduler\/rate\/RateEstimator$.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "org\/apache\/spark\/streaming\/scheduler\/rate\/RateEstimator$.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "org\/apache\/spark\/streaming\/scheduler\/rate\/RateEstimator$.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.equals", "link" : "org\/apache\/spark\/streaming\/scheduler\/rate\/RateEstimator$.html#equals(x$1:Any):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "org\/apache\/spark\/streaming\/scheduler\/rate\/RateEstimator$.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_]", "member" : "scala.AnyRef.getClass", "link" : "org\/apache\/spark\/streaming\/scheduler\/rate\/RateEstimator$.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "org\/apache\/spark\/streaming\/scheduler\/rate\/RateEstimator$.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "org\/apache\/spark\/streaming\/scheduler\/rate\/RateEstimator$.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "kind" : "object"}]};