Index.PACKAGES = {"scala.collection" : [], "org.apache.spark.ml.stat.distribution" : [{"name" : "org.apache.spark.ml.stat.distribution.MultivariateGaussian", "shortDescription" : "This class provides basic functionality for a Multivariate Gaussian (Normal) Distribution.", "members_class" : [{"label" : "logpdf", "tail" : "(x: Vector): Double", "member" : "org.apache.spark.ml.stat.distribution.MultivariateGaussian.logpdf", "link" : "org\/apache\/spark\/ml\/stat\/distribution\/MultivariateGaussian.html#logpdf(x:org.apache.spark.ml.linalg.Vector):Double", "kind" : "def"}, {"label" : "pdf", "tail" : "(x: Vector): Double", "member" : "org.apache.spark.ml.stat.distribution.MultivariateGaussian.pdf", "link" : "org\/apache\/spark\/ml\/stat\/distribution\/MultivariateGaussian.html#pdf(x:org.apache.spark.ml.linalg.Vector):Double", "kind" : "def"}, {"member" : "org.apache.spark.ml.stat.distribution.MultivariateGaussian#<init>", "error" : "unsupported entity"}, {"label" : "cov", "tail" : ": Matrix", "member" : "org.apache.spark.ml.stat.distribution.MultivariateGaussian.cov", "link" : "org\/apache\/spark\/ml\/stat\/distribution\/MultivariateGaussian.html#cov:org.apache.spark.ml.linalg.Matrix", "kind" : "val"}, {"label" : "mean", "tail" : ": Vector", "member" : "org.apache.spark.ml.stat.distribution.MultivariateGaussian.mean", "link" : "org\/apache\/spark\/ml\/stat\/distribution\/MultivariateGaussian.html#mean:org.apache.spark.ml.linalg.Vector", "kind" : "val"}, {"label" : "synchronized", "tail" : "(arg0: ⇒ T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "org\/apache\/spark\/ml\/stat\/distribution\/MultivariateGaussian.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "org\/apache\/spark\/ml\/stat\/distribution\/MultivariateGaussian.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "org\/apache\/spark\/ml\/stat\/distribution\/MultivariateGaussian.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "org\/apache\/spark\/ml\/stat\/distribution\/MultivariateGaussian.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "org\/apache\/spark\/ml\/stat\/distribution\/MultivariateGaussian.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "org\/apache\/spark\/ml\/stat\/distribution\/MultivariateGaussian.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "org\/apache\/spark\/ml\/stat\/distribution\/MultivariateGaussian.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "org\/apache\/spark\/ml\/stat\/distribution\/MultivariateGaussian.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "org\/apache\/spark\/ml\/stat\/distribution\/MultivariateGaussian.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "org\/apache\/spark\/ml\/stat\/distribution\/MultivariateGaussian.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "org\/apache\/spark\/ml\/stat\/distribution\/MultivariateGaussian.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "org\/apache\/spark\/ml\/stat\/distribution\/MultivariateGaussian.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "org\/apache\/spark\/ml\/stat\/distribution\/MultivariateGaussian.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "org\/apache\/spark\/ml\/stat\/distribution\/MultivariateGaussian.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.equals", "link" : "org\/apache\/spark\/ml\/stat\/distribution\/MultivariateGaussian.html#equals(x$1:Any):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "org\/apache\/spark\/ml\/stat\/distribution\/MultivariateGaussian.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_]", "member" : "scala.AnyRef.getClass", "link" : "org\/apache\/spark\/ml\/stat\/distribution\/MultivariateGaussian.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "org\/apache\/spark\/ml\/stat\/distribution\/MultivariateGaussian.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "org\/apache\/spark\/ml\/stat\/distribution\/MultivariateGaussian.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "class" : "org\/apache\/spark\/ml\/stat\/distribution\/MultivariateGaussian.html", "kind" : "class"}], "org.apache.spark.ml.linalg" : [{"name" : "org.apache.spark.ml.linalg.DenseMatrix", "shortDescription" : "Column-major dense matrix.", "object" : "org\/apache\/spark\/ml\/linalg\/DenseMatrix$.html", "members_class" : [{"label" : "colIter", "tail" : "(): Iterator[Vector]", "member" : "org.apache.spark.ml.linalg.DenseMatrix.colIter", "link" : "org\/apache\/spark\/ml\/linalg\/DenseMatrix.html#colIter:Iterator[org.apache.spark.ml.linalg.Vector]", "kind" : "def"}, {"label" : "numActives", "tail" : "(): Int", "member" : "org.apache.spark.ml.linalg.DenseMatrix.numActives", "link" : "org\/apache\/spark\/ml\/linalg\/DenseMatrix.html#numActives:Int", "kind" : "def"}, {"label" : "numNonzeros", "tail" : "(): Int", "member" : "org.apache.spark.ml.linalg.DenseMatrix.numNonzeros", "link" : "org\/apache\/spark\/ml\/linalg\/DenseMatrix.html#numNonzeros:Int", "kind" : "def"}, {"label" : "foreachActive", "tail" : "(f: (Int, Int, Double) ⇒ Unit): Unit", "member" : "org.apache.spark.ml.linalg.DenseMatrix.foreachActive", "link" : "org\/apache\/spark\/ml\/linalg\/DenseMatrix.html#foreachActive(f:(Int,Int,Double)=>Unit):Unit", "kind" : "def"}, {"label" : "transpose", "tail" : "(): DenseMatrix", "member" : "org.apache.spark.ml.linalg.DenseMatrix.transpose", "link" : "org\/apache\/spark\/ml\/linalg\/DenseMatrix.html#transpose:org.apache.spark.ml.linalg.DenseMatrix", "kind" : "def"}, {"label" : "copy", "tail" : "(): DenseMatrix", "member" : "org.apache.spark.ml.linalg.DenseMatrix.copy", "link" : "org\/apache\/spark\/ml\/linalg\/DenseMatrix.html#copy:org.apache.spark.ml.linalg.DenseMatrix", "kind" : "def"}, {"label" : "apply", "tail" : "(i: Int, j: Int): Double", "member" : "org.apache.spark.ml.linalg.DenseMatrix.apply", "link" : "org\/apache\/spark\/ml\/linalg\/DenseMatrix.html#apply(i:Int,j:Int):Double", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "org.apache.spark.ml.linalg.DenseMatrix.hashCode", "link" : "org\/apache\/spark\/ml\/linalg\/DenseMatrix.html#hashCode():Int", "kind" : "def"}, {"label" : "equals", "tail" : "(o: Any): Boolean", "member" : "org.apache.spark.ml.linalg.DenseMatrix.equals", "link" : "org\/apache\/spark\/ml\/linalg\/DenseMatrix.html#equals(o:Any):Boolean", "kind" : "def"}, {"member" : "org.apache.spark.ml.linalg.DenseMatrix#<init>", "error" : "unsupported entity"}, {"member" : "org.apache.spark.ml.linalg.DenseMatrix#<init>", "error" : "unsupported entity"}, {"label" : "isTransposed", "tail" : ": Boolean", "member" : "org.apache.spark.ml.linalg.DenseMatrix.isTransposed", "link" : "org\/apache\/spark\/ml\/linalg\/DenseMatrix.html#isTransposed:Boolean", "kind" : "val"}, {"label" : "values", "tail" : ": Array[Double]", "member" : "org.apache.spark.ml.linalg.DenseMatrix.values", "link" : "org\/apache\/spark\/ml\/linalg\/DenseMatrix.html#values:Array[Double]", "kind" : "val"}, {"label" : "numCols", "tail" : ": Int", "member" : "org.apache.spark.ml.linalg.DenseMatrix.numCols", "link" : "org\/apache\/spark\/ml\/linalg\/DenseMatrix.html#numCols:Int", "kind" : "val"}, {"label" : "numRows", "tail" : ": Int", "member" : "org.apache.spark.ml.linalg.DenseMatrix.numRows", "link" : "org\/apache\/spark\/ml\/linalg\/DenseMatrix.html#numRows:Int", "kind" : "val"}, {"label" : "compressed", "tail" : "(): Matrix", "member" : "org.apache.spark.ml.linalg.Matrix.compressed", "link" : "org\/apache\/spark\/ml\/linalg\/DenseMatrix.html#compressed:org.apache.spark.ml.linalg.Matrix", "kind" : "def"}, {"label" : "compressedRowMajor", "tail" : "(): Matrix", "member" : "org.apache.spark.ml.linalg.Matrix.compressedRowMajor", "link" : "org\/apache\/spark\/ml\/linalg\/DenseMatrix.html#compressedRowMajor:org.apache.spark.ml.linalg.Matrix", "kind" : "def"}, {"label" : "compressedColMajor", "tail" : "(): Matrix", "member" : "org.apache.spark.ml.linalg.Matrix.compressedColMajor", "link" : "org\/apache\/spark\/ml\/linalg\/DenseMatrix.html#compressedColMajor:org.apache.spark.ml.linalg.Matrix", "kind" : "def"}, {"label" : "toDenseColMajor", "tail" : "(): DenseMatrix", "member" : "org.apache.spark.ml.linalg.Matrix.toDenseColMajor", "link" : "org\/apache\/spark\/ml\/linalg\/DenseMatrix.html#toDenseColMajor:org.apache.spark.ml.linalg.DenseMatrix", "kind" : "def"}, {"label" : "toDenseRowMajor", "tail" : "(): DenseMatrix", "member" : "org.apache.spark.ml.linalg.Matrix.toDenseRowMajor", "link" : "org\/apache\/spark\/ml\/linalg\/DenseMatrix.html#toDenseRowMajor:org.apache.spark.ml.linalg.DenseMatrix", "kind" : "def"}, {"label" : "toDense", "tail" : "(): DenseMatrix", "member" : "org.apache.spark.ml.linalg.Matrix.toDense", "link" : "org\/apache\/spark\/ml\/linalg\/DenseMatrix.html#toDense:org.apache.spark.ml.linalg.DenseMatrix", "kind" : "def"}, {"label" : "toSparse", "tail" : "(): SparseMatrix", "member" : "org.apache.spark.ml.linalg.Matrix.toSparse", "link" : "org\/apache\/spark\/ml\/linalg\/DenseMatrix.html#toSparse:org.apache.spark.ml.linalg.SparseMatrix", "kind" : "def"}, {"label" : "toSparseRowMajor", "tail" : "(): SparseMatrix", "member" : "org.apache.spark.ml.linalg.Matrix.toSparseRowMajor", "link" : "org\/apache\/spark\/ml\/linalg\/DenseMatrix.html#toSparseRowMajor:org.apache.spark.ml.linalg.SparseMatrix", "kind" : "def"}, {"label" : "toSparseColMajor", "tail" : "(): SparseMatrix", "member" : "org.apache.spark.ml.linalg.Matrix.toSparseColMajor", "link" : "org\/apache\/spark\/ml\/linalg\/DenseMatrix.html#toSparseColMajor:org.apache.spark.ml.linalg.SparseMatrix", "kind" : "def"}, {"label" : "toString", "tail" : "(maxLines: Int, maxLineWidth: Int): String", "member" : "org.apache.spark.ml.linalg.Matrix.toString", "link" : "org\/apache\/spark\/ml\/linalg\/DenseMatrix.html#toString(maxLines:Int,maxLineWidth:Int):String", "kind" : "def"}, {"label" : "toString", "tail" : "(): String", "member" : "org.apache.spark.ml.linalg.Matrix.toString", "link" : "org\/apache\/spark\/ml\/linalg\/DenseMatrix.html#toString():String", "kind" : "def"}, {"label" : "multiply", "tail" : "(y: Vector): DenseVector", "member" : "org.apache.spark.ml.linalg.Matrix.multiply", "link" : "org\/apache\/spark\/ml\/linalg\/DenseMatrix.html#multiply(y:org.apache.spark.ml.linalg.Vector):org.apache.spark.ml.linalg.DenseVector", "kind" : "def"}, {"label" : "multiply", "tail" : "(y: DenseVector): DenseVector", "member" : "org.apache.spark.ml.linalg.Matrix.multiply", "link" : "org\/apache\/spark\/ml\/linalg\/DenseMatrix.html#multiply(y:org.apache.spark.ml.linalg.DenseVector):org.apache.spark.ml.linalg.DenseVector", "kind" : "def"}, {"label" : "multiply", "tail" : "(y: DenseMatrix): DenseMatrix", "member" : "org.apache.spark.ml.linalg.Matrix.multiply", "link" : "org\/apache\/spark\/ml\/linalg\/DenseMatrix.html#multiply(y:org.apache.spark.ml.linalg.DenseMatrix):org.apache.spark.ml.linalg.DenseMatrix", "kind" : "def"}, {"label" : "rowIter", "tail" : "(): Iterator[Vector]", "member" : "org.apache.spark.ml.linalg.Matrix.rowIter", "link" : "org\/apache\/spark\/ml\/linalg\/DenseMatrix.html#rowIter:Iterator[org.apache.spark.ml.linalg.Vector]", "kind" : "def"}, {"label" : "toArray", "tail" : "(): Array[Double]", "member" : "org.apache.spark.ml.linalg.Matrix.toArray", "link" : "org\/apache\/spark\/ml\/linalg\/DenseMatrix.html#toArray:Array[Double]", "kind" : "def"}, {"label" : "synchronized", "tail" : "(arg0: ⇒ T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "org\/apache\/spark\/ml\/linalg\/DenseMatrix.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "org\/apache\/spark\/ml\/linalg\/DenseMatrix.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "org\/apache\/spark\/ml\/linalg\/DenseMatrix.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "org\/apache\/spark\/ml\/linalg\/DenseMatrix.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "org\/apache\/spark\/ml\/linalg\/DenseMatrix.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "org\/apache\/spark\/ml\/linalg\/DenseMatrix.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "org\/apache\/spark\/ml\/linalg\/DenseMatrix.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "org\/apache\/spark\/ml\/linalg\/DenseMatrix.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "org\/apache\/spark\/ml\/linalg\/DenseMatrix.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "org\/apache\/spark\/ml\/linalg\/DenseMatrix.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "org\/apache\/spark\/ml\/linalg\/DenseMatrix.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "org\/apache\/spark\/ml\/linalg\/DenseMatrix.html#notify():Unit", "kind" : "final def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "org\/apache\/spark\/ml\/linalg\/DenseMatrix.html#clone():Object", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_]", "member" : "scala.AnyRef.getClass", "link" : "org\/apache\/spark\/ml\/linalg\/DenseMatrix.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "org\/apache\/spark\/ml\/linalg\/DenseMatrix.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "org\/apache\/spark\/ml\/linalg\/DenseMatrix.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "members_object" : [{"label" : "diag", "tail" : "(vector: Vector): DenseMatrix", "member" : "org.apache.spark.ml.linalg.DenseMatrix.diag", "link" : "org\/apache\/spark\/ml\/linalg\/DenseMatrix$.html#diag(vector:org.apache.spark.ml.linalg.Vector):org.apache.spark.ml.linalg.DenseMatrix", "kind" : "def"}, {"label" : "randn", "tail" : "(numRows: Int, numCols: Int, rng: Random): DenseMatrix", "member" : "org.apache.spark.ml.linalg.DenseMatrix.randn", "link" : "org\/apache\/spark\/ml\/linalg\/DenseMatrix$.html#randn(numRows:Int,numCols:Int,rng:java.util.Random):org.apache.spark.ml.linalg.DenseMatrix", "kind" : "def"}, {"label" : "rand", "tail" : "(numRows: Int, numCols: Int, rng: Random): DenseMatrix", "member" : "org.apache.spark.ml.linalg.DenseMatrix.rand", "link" : "org\/apache\/spark\/ml\/linalg\/DenseMatrix$.html#rand(numRows:Int,numCols:Int,rng:java.util.Random):org.apache.spark.ml.linalg.DenseMatrix", "kind" : "def"}, {"label" : "eye", "tail" : "(n: Int): DenseMatrix", "member" : "org.apache.spark.ml.linalg.DenseMatrix.eye", "link" : "org\/apache\/spark\/ml\/linalg\/DenseMatrix$.html#eye(n:Int):org.apache.spark.ml.linalg.DenseMatrix", "kind" : "def"}, {"label" : "ones", "tail" : "(numRows: Int, numCols: Int): DenseMatrix", "member" : "org.apache.spark.ml.linalg.DenseMatrix.ones", "link" : "org\/apache\/spark\/ml\/linalg\/DenseMatrix$.html#ones(numRows:Int,numCols:Int):org.apache.spark.ml.linalg.DenseMatrix", "kind" : "def"}, {"label" : "zeros", "tail" : "(numRows: Int, numCols: Int): DenseMatrix", "member" : "org.apache.spark.ml.linalg.DenseMatrix.zeros", "link" : "org\/apache\/spark\/ml\/linalg\/DenseMatrix$.html#zeros(numRows:Int,numCols:Int):org.apache.spark.ml.linalg.DenseMatrix", "kind" : "def"}, {"label" : "synchronized", "tail" : "(arg0: ⇒ T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "org\/apache\/spark\/ml\/linalg\/DenseMatrix$.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "org\/apache\/spark\/ml\/linalg\/DenseMatrix$.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "org\/apache\/spark\/ml\/linalg\/DenseMatrix$.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "org\/apache\/spark\/ml\/linalg\/DenseMatrix$.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "org\/apache\/spark\/ml\/linalg\/DenseMatrix$.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "org\/apache\/spark\/ml\/linalg\/DenseMatrix$.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "org\/apache\/spark\/ml\/linalg\/DenseMatrix$.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "org\/apache\/spark\/ml\/linalg\/DenseMatrix$.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "org\/apache\/spark\/ml\/linalg\/DenseMatrix$.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "org\/apache\/spark\/ml\/linalg\/DenseMatrix$.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "org\/apache\/spark\/ml\/linalg\/DenseMatrix$.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "org\/apache\/spark\/ml\/linalg\/DenseMatrix$.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "org\/apache\/spark\/ml\/linalg\/DenseMatrix$.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "org\/apache\/spark\/ml\/linalg\/DenseMatrix$.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.equals", "link" : "org\/apache\/spark\/ml\/linalg\/DenseMatrix$.html#equals(x$1:Any):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "org\/apache\/spark\/ml\/linalg\/DenseMatrix$.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_]", "member" : "scala.AnyRef.getClass", "link" : "org\/apache\/spark\/ml\/linalg\/DenseMatrix$.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "org\/apache\/spark\/ml\/linalg\/DenseMatrix$.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "org\/apache\/spark\/ml\/linalg\/DenseMatrix$.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "class" : "org\/apache\/spark\/ml\/linalg\/DenseMatrix.html", "kind" : "class"}, {"name" : "org.apache.spark.ml.linalg.DenseVector", "shortDescription" : "A dense vector represented by a value array.", "object" : "org\/apache\/spark\/ml\/linalg\/DenseVector$.html", "members_class" : [{"label" : "argmax", "tail" : "(): Int", "member" : "org.apache.spark.ml.linalg.DenseVector.argmax", "link" : "org\/apache\/spark\/ml\/linalg\/DenseVector.html#argmax:Int", "kind" : "def"}, {"label" : "numNonzeros", "tail" : "(): Int", "member" : "org.apache.spark.ml.linalg.DenseVector.numNonzeros", "link" : "org\/apache\/spark\/ml\/linalg\/DenseVector.html#numNonzeros:Int", "kind" : "def"}, {"label" : "numActives", "tail" : "(): Int", "member" : "org.apache.spark.ml.linalg.DenseVector.numActives", "link" : "org\/apache\/spark\/ml\/linalg\/DenseVector.html#numActives:Int", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "org.apache.spark.ml.linalg.DenseVector.hashCode", "link" : "org\/apache\/spark\/ml\/linalg\/DenseVector.html#hashCode():Int", "kind" : "def"}, {"label" : "equals", "tail" : "(other: Any): Boolean", "member" : "org.apache.spark.ml.linalg.DenseVector.equals", "link" : "org\/apache\/spark\/ml\/linalg\/DenseVector.html#equals(other:Any):Boolean", "kind" : "def"}, {"label" : "copy", "tail" : "(): DenseVector", "member" : "org.apache.spark.ml.linalg.DenseVector.copy", "link" : "org\/apache\/spark\/ml\/linalg\/DenseVector.html#copy:org.apache.spark.ml.linalg.DenseVector", "kind" : "def"}, {"label" : "apply", "tail" : "(i: Int): Double", "member" : "org.apache.spark.ml.linalg.DenseVector.apply", "link" : "org\/apache\/spark\/ml\/linalg\/DenseVector.html#apply(i:Int):Double", "kind" : "def"}, {"label" : "toArray", "tail" : "(): Array[Double]", "member" : "org.apache.spark.ml.linalg.DenseVector.toArray", "link" : "org\/apache\/spark\/ml\/linalg\/DenseVector.html#toArray:Array[Double]", "kind" : "def"}, {"label" : "toString", "tail" : "(): String", "member" : "org.apache.spark.ml.linalg.DenseVector.toString", "link" : "org\/apache\/spark\/ml\/linalg\/DenseVector.html#toString():String", "kind" : "def"}, {"label" : "size", "tail" : "(): Int", "member" : "org.apache.spark.ml.linalg.DenseVector.size", "link" : "org\/apache\/spark\/ml\/linalg\/DenseVector.html#size:Int", "kind" : "def"}, {"member" : "org.apache.spark.ml.linalg.DenseVector#<init>", "error" : "unsupported entity"}, {"label" : "values", "tail" : ": Array[Double]", "member" : "org.apache.spark.ml.linalg.DenseVector.values", "link" : "org\/apache\/spark\/ml\/linalg\/DenseVector.html#values:Array[Double]", "kind" : "val"}, {"label" : "dot", "tail" : "(v: Vector): Double", "member" : "org.apache.spark.ml.linalg.Vector.dot", "link" : "org\/apache\/spark\/ml\/linalg\/DenseVector.html#dot(v:org.apache.spark.ml.linalg.Vector):Double", "kind" : "def"}, {"label" : "compressed", "tail" : "(): Vector", "member" : "org.apache.spark.ml.linalg.Vector.compressed", "link" : "org\/apache\/spark\/ml\/linalg\/DenseVector.html#compressed:org.apache.spark.ml.linalg.Vector", "kind" : "def"}, {"label" : "toDense", "tail" : "(): DenseVector", "member" : "org.apache.spark.ml.linalg.Vector.toDense", "link" : "org\/apache\/spark\/ml\/linalg\/DenseVector.html#toDense:org.apache.spark.ml.linalg.DenseVector", "kind" : "def"}, {"label" : "toSparse", "tail" : "(): SparseVector", "member" : "org.apache.spark.ml.linalg.Vector.toSparse", "link" : "org\/apache\/spark\/ml\/linalg\/DenseVector.html#toSparse:org.apache.spark.ml.linalg.SparseVector", "kind" : "def"}, {"label" : "foreachActive", "tail" : "(f: (Int, Double) ⇒ Unit): Unit", "member" : "org.apache.spark.ml.linalg.Vector.foreachActive", "link" : "org\/apache\/spark\/ml\/linalg\/DenseVector.html#foreachActive(f:(Int,Double)=>Unit):Unit", "kind" : "def"}, {"label" : "synchronized", "tail" : "(arg0: ⇒ T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "org\/apache\/spark\/ml\/linalg\/DenseVector.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "org\/apache\/spark\/ml\/linalg\/DenseVector.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "org\/apache\/spark\/ml\/linalg\/DenseVector.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "org\/apache\/spark\/ml\/linalg\/DenseVector.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "org\/apache\/spark\/ml\/linalg\/DenseVector.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "org\/apache\/spark\/ml\/linalg\/DenseVector.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "org\/apache\/spark\/ml\/linalg\/DenseVector.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "org\/apache\/spark\/ml\/linalg\/DenseVector.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "org\/apache\/spark\/ml\/linalg\/DenseVector.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "org\/apache\/spark\/ml\/linalg\/DenseVector.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "org\/apache\/spark\/ml\/linalg\/DenseVector.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "org\/apache\/spark\/ml\/linalg\/DenseVector.html#notify():Unit", "kind" : "final def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "org\/apache\/spark\/ml\/linalg\/DenseVector.html#clone():Object", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_]", "member" : "scala.AnyRef.getClass", "link" : "org\/apache\/spark\/ml\/linalg\/DenseVector.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "org\/apache\/spark\/ml\/linalg\/DenseVector.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "org\/apache\/spark\/ml\/linalg\/DenseVector.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "members_object" : [{"label" : "unapply", "tail" : "(dv: DenseVector): Option[Array[Double]]", "member" : "org.apache.spark.ml.linalg.DenseVector.unapply", "link" : "org\/apache\/spark\/ml\/linalg\/DenseVector$.html#unapply(dv:org.apache.spark.ml.linalg.DenseVector):Option[Array[Double]]", "kind" : "def"}, {"label" : "synchronized", "tail" : "(arg0: ⇒ T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "org\/apache\/spark\/ml\/linalg\/DenseVector$.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "org\/apache\/spark\/ml\/linalg\/DenseVector$.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "org\/apache\/spark\/ml\/linalg\/DenseVector$.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "org\/apache\/spark\/ml\/linalg\/DenseVector$.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "org\/apache\/spark\/ml\/linalg\/DenseVector$.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "org\/apache\/spark\/ml\/linalg\/DenseVector$.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "org\/apache\/spark\/ml\/linalg\/DenseVector$.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "org\/apache\/spark\/ml\/linalg\/DenseVector$.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "org\/apache\/spark\/ml\/linalg\/DenseVector$.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "org\/apache\/spark\/ml\/linalg\/DenseVector$.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "org\/apache\/spark\/ml\/linalg\/DenseVector$.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "org\/apache\/spark\/ml\/linalg\/DenseVector$.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "org\/apache\/spark\/ml\/linalg\/DenseVector$.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "org\/apache\/spark\/ml\/linalg\/DenseVector$.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.equals", "link" : "org\/apache\/spark\/ml\/linalg\/DenseVector$.html#equals(x$1:Any):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "org\/apache\/spark\/ml\/linalg\/DenseVector$.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_]", "member" : "scala.AnyRef.getClass", "link" : "org\/apache\/spark\/ml\/linalg\/DenseVector$.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "org\/apache\/spark\/ml\/linalg\/DenseVector$.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "org\/apache\/spark\/ml\/linalg\/DenseVector$.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "class" : "org\/apache\/spark\/ml\/linalg\/DenseVector.html", "kind" : "class"}, {"name" : "org.apache.spark.ml.linalg.Matrices", "shortDescription" : "Factory methods for org.apache.spark.ml.linalg.Matrix.", "object" : "org\/apache\/spark\/ml\/linalg\/Matrices$.html", "members_object" : [{"label" : "vertcat", "tail" : "(matrices: Array[Matrix]): Matrix", "member" : "org.apache.spark.ml.linalg.Matrices.vertcat", "link" : "org\/apache\/spark\/ml\/linalg\/Matrices$.html#vertcat(matrices:Array[org.apache.spark.ml.linalg.Matrix]):org.apache.spark.ml.linalg.Matrix", "kind" : "def"}, {"label" : "horzcat", "tail" : "(matrices: Array[Matrix]): Matrix", "member" : "org.apache.spark.ml.linalg.Matrices.horzcat", "link" : "org\/apache\/spark\/ml\/linalg\/Matrices$.html#horzcat(matrices:Array[org.apache.spark.ml.linalg.Matrix]):org.apache.spark.ml.linalg.Matrix", "kind" : "def"}, {"label" : "diag", "tail" : "(vector: Vector): Matrix", "member" : "org.apache.spark.ml.linalg.Matrices.diag", "link" : "org\/apache\/spark\/ml\/linalg\/Matrices$.html#diag(vector:org.apache.spark.ml.linalg.Vector):org.apache.spark.ml.linalg.Matrix", "kind" : "def"}, {"label" : "sprandn", "tail" : "(numRows: Int, numCols: Int, density: Double, rng: Random): Matrix", "member" : "org.apache.spark.ml.linalg.Matrices.sprandn", "link" : "org\/apache\/spark\/ml\/linalg\/Matrices$.html#sprandn(numRows:Int,numCols:Int,density:Double,rng:java.util.Random):org.apache.spark.ml.linalg.Matrix", "kind" : "def"}, {"label" : "randn", "tail" : "(numRows: Int, numCols: Int, rng: Random): Matrix", "member" : "org.apache.spark.ml.linalg.Matrices.randn", "link" : "org\/apache\/spark\/ml\/linalg\/Matrices$.html#randn(numRows:Int,numCols:Int,rng:java.util.Random):org.apache.spark.ml.linalg.Matrix", "kind" : "def"}, {"label" : "sprand", "tail" : "(numRows: Int, numCols: Int, density: Double, rng: Random): Matrix", "member" : "org.apache.spark.ml.linalg.Matrices.sprand", "link" : "org\/apache\/spark\/ml\/linalg\/Matrices$.html#sprand(numRows:Int,numCols:Int,density:Double,rng:java.util.Random):org.apache.spark.ml.linalg.Matrix", "kind" : "def"}, {"label" : "rand", "tail" : "(numRows: Int, numCols: Int, rng: Random): Matrix", "member" : "org.apache.spark.ml.linalg.Matrices.rand", "link" : "org\/apache\/spark\/ml\/linalg\/Matrices$.html#rand(numRows:Int,numCols:Int,rng:java.util.Random):org.apache.spark.ml.linalg.Matrix", "kind" : "def"}, {"label" : "speye", "tail" : "(n: Int): Matrix", "member" : "org.apache.spark.ml.linalg.Matrices.speye", "link" : "org\/apache\/spark\/ml\/linalg\/Matrices$.html#speye(n:Int):org.apache.spark.ml.linalg.Matrix", "kind" : "def"}, {"label" : "eye", "tail" : "(n: Int): Matrix", "member" : "org.apache.spark.ml.linalg.Matrices.eye", "link" : "org\/apache\/spark\/ml\/linalg\/Matrices$.html#eye(n:Int):org.apache.spark.ml.linalg.Matrix", "kind" : "def"}, {"label" : "ones", "tail" : "(numRows: Int, numCols: Int): Matrix", "member" : "org.apache.spark.ml.linalg.Matrices.ones", "link" : "org\/apache\/spark\/ml\/linalg\/Matrices$.html#ones(numRows:Int,numCols:Int):org.apache.spark.ml.linalg.Matrix", "kind" : "def"}, {"label" : "zeros", "tail" : "(numRows: Int, numCols: Int): Matrix", "member" : "org.apache.spark.ml.linalg.Matrices.zeros", "link" : "org\/apache\/spark\/ml\/linalg\/Matrices$.html#zeros(numRows:Int,numCols:Int):org.apache.spark.ml.linalg.Matrix", "kind" : "def"}, {"label" : "sparse", "tail" : "(numRows: Int, numCols: Int, colPtrs: Array[Int], rowIndices: Array[Int], values: Array[Double]): Matrix", "member" : "org.apache.spark.ml.linalg.Matrices.sparse", "link" : "org\/apache\/spark\/ml\/linalg\/Matrices$.html#sparse(numRows:Int,numCols:Int,colPtrs:Array[Int],rowIndices:Array[Int],values:Array[Double]):org.apache.spark.ml.linalg.Matrix", "kind" : "def"}, {"label" : "dense", "tail" : "(numRows: Int, numCols: Int, values: Array[Double]): Matrix", "member" : "org.apache.spark.ml.linalg.Matrices.dense", "link" : "org\/apache\/spark\/ml\/linalg\/Matrices$.html#dense(numRows:Int,numCols:Int,values:Array[Double]):org.apache.spark.ml.linalg.Matrix", "kind" : "def"}, {"label" : "synchronized", "tail" : "(arg0: ⇒ T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "org\/apache\/spark\/ml\/linalg\/Matrices$.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "org\/apache\/spark\/ml\/linalg\/Matrices$.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "org\/apache\/spark\/ml\/linalg\/Matrices$.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "org\/apache\/spark\/ml\/linalg\/Matrices$.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "org\/apache\/spark\/ml\/linalg\/Matrices$.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "org\/apache\/spark\/ml\/linalg\/Matrices$.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "org\/apache\/spark\/ml\/linalg\/Matrices$.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "org\/apache\/spark\/ml\/linalg\/Matrices$.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "org\/apache\/spark\/ml\/linalg\/Matrices$.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "org\/apache\/spark\/ml\/linalg\/Matrices$.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "org\/apache\/spark\/ml\/linalg\/Matrices$.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "org\/apache\/spark\/ml\/linalg\/Matrices$.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "org\/apache\/spark\/ml\/linalg\/Matrices$.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "org\/apache\/spark\/ml\/linalg\/Matrices$.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.equals", "link" : "org\/apache\/spark\/ml\/linalg\/Matrices$.html#equals(x$1:Any):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "org\/apache\/spark\/ml\/linalg\/Matrices$.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_]", "member" : "scala.AnyRef.getClass", "link" : "org\/apache\/spark\/ml\/linalg\/Matrices$.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "org\/apache\/spark\/ml\/linalg\/Matrices$.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "org\/apache\/spark\/ml\/linalg\/Matrices$.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "kind" : "object"}, {"name" : "org.apache.spark.ml.linalg.Matrix", "members_trait" : [{"label" : "compressed", "tail" : "(): Matrix", "member" : "org.apache.spark.ml.linalg.Matrix.compressed", "link" : "org\/apache\/spark\/ml\/linalg\/Matrix.html#compressed:org.apache.spark.ml.linalg.Matrix", "kind" : "def"}, {"label" : "compressedRowMajor", "tail" : "(): Matrix", "member" : "org.apache.spark.ml.linalg.Matrix.compressedRowMajor", "link" : "org\/apache\/spark\/ml\/linalg\/Matrix.html#compressedRowMajor:org.apache.spark.ml.linalg.Matrix", "kind" : "def"}, {"label" : "compressedColMajor", "tail" : "(): Matrix", "member" : "org.apache.spark.ml.linalg.Matrix.compressedColMajor", "link" : "org\/apache\/spark\/ml\/linalg\/Matrix.html#compressedColMajor:org.apache.spark.ml.linalg.Matrix", "kind" : "def"}, {"label" : "toDenseColMajor", "tail" : "(): DenseMatrix", "member" : "org.apache.spark.ml.linalg.Matrix.toDenseColMajor", "link" : "org\/apache\/spark\/ml\/linalg\/Matrix.html#toDenseColMajor:org.apache.spark.ml.linalg.DenseMatrix", "kind" : "def"}, {"label" : "toDenseRowMajor", "tail" : "(): DenseMatrix", "member" : "org.apache.spark.ml.linalg.Matrix.toDenseRowMajor", "link" : "org\/apache\/spark\/ml\/linalg\/Matrix.html#toDenseRowMajor:org.apache.spark.ml.linalg.DenseMatrix", "kind" : "def"}, {"label" : "toDense", "tail" : "(): DenseMatrix", "member" : "org.apache.spark.ml.linalg.Matrix.toDense", "link" : "org\/apache\/spark\/ml\/linalg\/Matrix.html#toDense:org.apache.spark.ml.linalg.DenseMatrix", "kind" : "def"}, {"label" : "toSparse", "tail" : "(): SparseMatrix", "member" : "org.apache.spark.ml.linalg.Matrix.toSparse", "link" : "org\/apache\/spark\/ml\/linalg\/Matrix.html#toSparse:org.apache.spark.ml.linalg.SparseMatrix", "kind" : "def"}, {"label" : "toSparseRowMajor", "tail" : "(): SparseMatrix", "member" : "org.apache.spark.ml.linalg.Matrix.toSparseRowMajor", "link" : "org\/apache\/spark\/ml\/linalg\/Matrix.html#toSparseRowMajor:org.apache.spark.ml.linalg.SparseMatrix", "kind" : "def"}, {"label" : "toSparseColMajor", "tail" : "(): SparseMatrix", "member" : "org.apache.spark.ml.linalg.Matrix.toSparseColMajor", "link" : "org\/apache\/spark\/ml\/linalg\/Matrix.html#toSparseColMajor:org.apache.spark.ml.linalg.SparseMatrix", "kind" : "def"}, {"label" : "toString", "tail" : "(maxLines: Int, maxLineWidth: Int): String", "member" : "org.apache.spark.ml.linalg.Matrix.toString", "link" : "org\/apache\/spark\/ml\/linalg\/Matrix.html#toString(maxLines:Int,maxLineWidth:Int):String", "kind" : "def"}, {"label" : "toString", "tail" : "(): String", "member" : "org.apache.spark.ml.linalg.Matrix.toString", "link" : "org\/apache\/spark\/ml\/linalg\/Matrix.html#toString():String", "kind" : "def"}, {"label" : "multiply", "tail" : "(y: Vector): DenseVector", "member" : "org.apache.spark.ml.linalg.Matrix.multiply", "link" : "org\/apache\/spark\/ml\/linalg\/Matrix.html#multiply(y:org.apache.spark.ml.linalg.Vector):org.apache.spark.ml.linalg.DenseVector", "kind" : "def"}, {"label" : "multiply", "tail" : "(y: DenseVector): DenseVector", "member" : "org.apache.spark.ml.linalg.Matrix.multiply", "link" : "org\/apache\/spark\/ml\/linalg\/Matrix.html#multiply(y:org.apache.spark.ml.linalg.DenseVector):org.apache.spark.ml.linalg.DenseVector", "kind" : "def"}, {"label" : "multiply", "tail" : "(y: DenseMatrix): DenseMatrix", "member" : "org.apache.spark.ml.linalg.Matrix.multiply", "link" : "org\/apache\/spark\/ml\/linalg\/Matrix.html#multiply(y:org.apache.spark.ml.linalg.DenseMatrix):org.apache.spark.ml.linalg.DenseMatrix", "kind" : "def"}, {"label" : "rowIter", "tail" : "(): Iterator[Vector]", "member" : "org.apache.spark.ml.linalg.Matrix.rowIter", "link" : "org\/apache\/spark\/ml\/linalg\/Matrix.html#rowIter:Iterator[org.apache.spark.ml.linalg.Vector]", "kind" : "def"}, {"label" : "toArray", "tail" : "(): Array[Double]", "member" : "org.apache.spark.ml.linalg.Matrix.toArray", "link" : "org\/apache\/spark\/ml\/linalg\/Matrix.html#toArray:Array[Double]", "kind" : "def"}, {"label" : "isTransposed", "tail" : ": Boolean", "member" : "org.apache.spark.ml.linalg.Matrix.isTransposed", "link" : "org\/apache\/spark\/ml\/linalg\/Matrix.html#isTransposed:Boolean", "kind" : "val"}, {"label" : "synchronized", "tail" : "(arg0: ⇒ T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "org\/apache\/spark\/ml\/linalg\/Matrix.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "org\/apache\/spark\/ml\/linalg\/Matrix.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "org\/apache\/spark\/ml\/linalg\/Matrix.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "org\/apache\/spark\/ml\/linalg\/Matrix.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "org\/apache\/spark\/ml\/linalg\/Matrix.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "org\/apache\/spark\/ml\/linalg\/Matrix.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "org\/apache\/spark\/ml\/linalg\/Matrix.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "org\/apache\/spark\/ml\/linalg\/Matrix.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "org\/apache\/spark\/ml\/linalg\/Matrix.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "org\/apache\/spark\/ml\/linalg\/Matrix.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "org\/apache\/spark\/ml\/linalg\/Matrix.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "org\/apache\/spark\/ml\/linalg\/Matrix.html#notify():Unit", "kind" : "final def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "org\/apache\/spark\/ml\/linalg\/Matrix.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.equals", "link" : "org\/apache\/spark\/ml\/linalg\/Matrix.html#equals(x$1:Any):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "org\/apache\/spark\/ml\/linalg\/Matrix.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_]", "member" : "scala.AnyRef.getClass", "link" : "org\/apache\/spark\/ml\/linalg\/Matrix.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "org\/apache\/spark\/ml\/linalg\/Matrix.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "org\/apache\/spark\/ml\/linalg\/Matrix.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}, {"label" : "numActives", "tail" : "(): Int", "member" : "org.apache.spark.ml.linalg.Matrix.numActives", "link" : "org\/apache\/spark\/ml\/linalg\/Matrix.html#numActives:Int", "kind" : "abstract def"}, {"label" : "numNonzeros", "tail" : "(): Int", "member" : "org.apache.spark.ml.linalg.Matrix.numNonzeros", "link" : "org\/apache\/spark\/ml\/linalg\/Matrix.html#numNonzeros:Int", "kind" : "abstract def"}, {"label" : "foreachActive", "tail" : "(f: (Int, Int, Double) ⇒ Unit): Unit", "member" : "org.apache.spark.ml.linalg.Matrix.foreachActive", "link" : "org\/apache\/spark\/ml\/linalg\/Matrix.html#foreachActive(f:(Int,Int,Double)=>Unit):Unit", "kind" : "abstract def"}, {"label" : "transpose", "tail" : "(): Matrix", "member" : "org.apache.spark.ml.linalg.Matrix.transpose", "link" : "org\/apache\/spark\/ml\/linalg\/Matrix.html#transpose:org.apache.spark.ml.linalg.Matrix", "kind" : "abstract def"}, {"label" : "copy", "tail" : "(): Matrix", "member" : "org.apache.spark.ml.linalg.Matrix.copy", "link" : "org\/apache\/spark\/ml\/linalg\/Matrix.html#copy:org.apache.spark.ml.linalg.Matrix", "kind" : "abstract def"}, {"label" : "apply", "tail" : "(i: Int, j: Int): Double", "member" : "org.apache.spark.ml.linalg.Matrix.apply", "link" : "org\/apache\/spark\/ml\/linalg\/Matrix.html#apply(i:Int,j:Int):Double", "kind" : "abstract def"}, {"label" : "colIter", "tail" : "(): Iterator[Vector]", "member" : "org.apache.spark.ml.linalg.Matrix.colIter", "link" : "org\/apache\/spark\/ml\/linalg\/Matrix.html#colIter:Iterator[org.apache.spark.ml.linalg.Vector]", "kind" : "abstract def"}, {"label" : "numCols", "tail" : "(): Int", "member" : "org.apache.spark.ml.linalg.Matrix.numCols", "link" : "org\/apache\/spark\/ml\/linalg\/Matrix.html#numCols:Int", "kind" : "abstract def"}, {"label" : "numRows", "tail" : "(): Int", "member" : "org.apache.spark.ml.linalg.Matrix.numRows", "link" : "org\/apache\/spark\/ml\/linalg\/Matrix.html#numRows:Int", "kind" : "abstract def"}], "shortDescription" : "Trait for a local matrix.", "trait" : "org\/apache\/spark\/ml\/linalg\/Matrix.html", "kind" : "trait"}, {"name" : "org.apache.spark.ml.linalg.SparseMatrix", "shortDescription" : "Column-major sparse matrix.", "object" : "org\/apache\/spark\/ml\/linalg\/SparseMatrix$.html", "members_class" : [{"label" : "colIter", "tail" : "(): Iterator[Vector]", "member" : "org.apache.spark.ml.linalg.SparseMatrix.colIter", "link" : "org\/apache\/spark\/ml\/linalg\/SparseMatrix.html#colIter:Iterator[org.apache.spark.ml.linalg.Vector]", "kind" : "def"}, {"label" : "numActives", "tail" : "(): Int", "member" : "org.apache.spark.ml.linalg.SparseMatrix.numActives", "link" : "org\/apache\/spark\/ml\/linalg\/SparseMatrix.html#numActives:Int", "kind" : "def"}, {"label" : "numNonzeros", "tail" : "(): Int", "member" : "org.apache.spark.ml.linalg.SparseMatrix.numNonzeros", "link" : "org\/apache\/spark\/ml\/linalg\/SparseMatrix.html#numNonzeros:Int", "kind" : "def"}, {"label" : "foreachActive", "tail" : "(f: (Int, Int, Double) ⇒ Unit): Unit", "member" : "org.apache.spark.ml.linalg.SparseMatrix.foreachActive", "link" : "org\/apache\/spark\/ml\/linalg\/SparseMatrix.html#foreachActive(f:(Int,Int,Double)=>Unit):Unit", "kind" : "def"}, {"label" : "transpose", "tail" : "(): SparseMatrix", "member" : "org.apache.spark.ml.linalg.SparseMatrix.transpose", "link" : "org\/apache\/spark\/ml\/linalg\/SparseMatrix.html#transpose:org.apache.spark.ml.linalg.SparseMatrix", "kind" : "def"}, {"label" : "copy", "tail" : "(): SparseMatrix", "member" : "org.apache.spark.ml.linalg.SparseMatrix.copy", "link" : "org\/apache\/spark\/ml\/linalg\/SparseMatrix.html#copy:org.apache.spark.ml.linalg.SparseMatrix", "kind" : "def"}, {"label" : "apply", "tail" : "(i: Int, j: Int): Double", "member" : "org.apache.spark.ml.linalg.SparseMatrix.apply", "link" : "org\/apache\/spark\/ml\/linalg\/SparseMatrix.html#apply(i:Int,j:Int):Double", "kind" : "def"}, {"label" : "equals", "tail" : "(o: Any): Boolean", "member" : "org.apache.spark.ml.linalg.SparseMatrix.equals", "link" : "org\/apache\/spark\/ml\/linalg\/SparseMatrix.html#equals(o:Any):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "org.apache.spark.ml.linalg.SparseMatrix.hashCode", "link" : "org\/apache\/spark\/ml\/linalg\/SparseMatrix.html#hashCode():Int", "kind" : "def"}, {"member" : "org.apache.spark.ml.linalg.SparseMatrix#<init>", "error" : "unsupported entity"}, {"member" : "org.apache.spark.ml.linalg.SparseMatrix#<init>", "error" : "unsupported entity"}, {"label" : "isTransposed", "tail" : ": Boolean", "member" : "org.apache.spark.ml.linalg.SparseMatrix.isTransposed", "link" : "org\/apache\/spark\/ml\/linalg\/SparseMatrix.html#isTransposed:Boolean", "kind" : "val"}, {"label" : "values", "tail" : ": Array[Double]", "member" : "org.apache.spark.ml.linalg.SparseMatrix.values", "link" : "org\/apache\/spark\/ml\/linalg\/SparseMatrix.html#values:Array[Double]", "kind" : "val"}, {"label" : "rowIndices", "tail" : ": Array[Int]", "member" : "org.apache.spark.ml.linalg.SparseMatrix.rowIndices", "link" : "org\/apache\/spark\/ml\/linalg\/SparseMatrix.html#rowIndices:Array[Int]", "kind" : "val"}, {"label" : "colPtrs", "tail" : ": Array[Int]", "member" : "org.apache.spark.ml.linalg.SparseMatrix.colPtrs", "link" : "org\/apache\/spark\/ml\/linalg\/SparseMatrix.html#colPtrs:Array[Int]", "kind" : "val"}, {"label" : "numCols", "tail" : ": Int", "member" : "org.apache.spark.ml.linalg.SparseMatrix.numCols", "link" : "org\/apache\/spark\/ml\/linalg\/SparseMatrix.html#numCols:Int", "kind" : "val"}, {"label" : "numRows", "tail" : ": Int", "member" : "org.apache.spark.ml.linalg.SparseMatrix.numRows", "link" : "org\/apache\/spark\/ml\/linalg\/SparseMatrix.html#numRows:Int", "kind" : "val"}, {"label" : "compressed", "tail" : "(): Matrix", "member" : "org.apache.spark.ml.linalg.Matrix.compressed", "link" : "org\/apache\/spark\/ml\/linalg\/SparseMatrix.html#compressed:org.apache.spark.ml.linalg.Matrix", "kind" : "def"}, {"label" : "compressedRowMajor", "tail" : "(): Matrix", "member" : "org.apache.spark.ml.linalg.Matrix.compressedRowMajor", "link" : "org\/apache\/spark\/ml\/linalg\/SparseMatrix.html#compressedRowMajor:org.apache.spark.ml.linalg.Matrix", "kind" : "def"}, {"label" : "compressedColMajor", "tail" : "(): Matrix", "member" : "org.apache.spark.ml.linalg.Matrix.compressedColMajor", "link" : "org\/apache\/spark\/ml\/linalg\/SparseMatrix.html#compressedColMajor:org.apache.spark.ml.linalg.Matrix", "kind" : "def"}, {"label" : "toDenseColMajor", "tail" : "(): DenseMatrix", "member" : "org.apache.spark.ml.linalg.Matrix.toDenseColMajor", "link" : "org\/apache\/spark\/ml\/linalg\/SparseMatrix.html#toDenseColMajor:org.apache.spark.ml.linalg.DenseMatrix", "kind" : "def"}, {"label" : "toDenseRowMajor", "tail" : "(): DenseMatrix", "member" : "org.apache.spark.ml.linalg.Matrix.toDenseRowMajor", "link" : "org\/apache\/spark\/ml\/linalg\/SparseMatrix.html#toDenseRowMajor:org.apache.spark.ml.linalg.DenseMatrix", "kind" : "def"}, {"label" : "toDense", "tail" : "(): DenseMatrix", "member" : "org.apache.spark.ml.linalg.Matrix.toDense", "link" : "org\/apache\/spark\/ml\/linalg\/SparseMatrix.html#toDense:org.apache.spark.ml.linalg.DenseMatrix", "kind" : "def"}, {"label" : "toSparse", "tail" : "(): SparseMatrix", "member" : "org.apache.spark.ml.linalg.Matrix.toSparse", "link" : "org\/apache\/spark\/ml\/linalg\/SparseMatrix.html#toSparse:org.apache.spark.ml.linalg.SparseMatrix", "kind" : "def"}, {"label" : "toSparseRowMajor", "tail" : "(): SparseMatrix", "member" : "org.apache.spark.ml.linalg.Matrix.toSparseRowMajor", "link" : "org\/apache\/spark\/ml\/linalg\/SparseMatrix.html#toSparseRowMajor:org.apache.spark.ml.linalg.SparseMatrix", "kind" : "def"}, {"label" : "toSparseColMajor", "tail" : "(): SparseMatrix", "member" : "org.apache.spark.ml.linalg.Matrix.toSparseColMajor", "link" : "org\/apache\/spark\/ml\/linalg\/SparseMatrix.html#toSparseColMajor:org.apache.spark.ml.linalg.SparseMatrix", "kind" : "def"}, {"label" : "toString", "tail" : "(maxLines: Int, maxLineWidth: Int): String", "member" : "org.apache.spark.ml.linalg.Matrix.toString", "link" : "org\/apache\/spark\/ml\/linalg\/SparseMatrix.html#toString(maxLines:Int,maxLineWidth:Int):String", "kind" : "def"}, {"label" : "toString", "tail" : "(): String", "member" : "org.apache.spark.ml.linalg.Matrix.toString", "link" : "org\/apache\/spark\/ml\/linalg\/SparseMatrix.html#toString():String", "kind" : "def"}, {"label" : "multiply", "tail" : "(y: Vector): DenseVector", "member" : "org.apache.spark.ml.linalg.Matrix.multiply", "link" : "org\/apache\/spark\/ml\/linalg\/SparseMatrix.html#multiply(y:org.apache.spark.ml.linalg.Vector):org.apache.spark.ml.linalg.DenseVector", "kind" : "def"}, {"label" : "multiply", "tail" : "(y: DenseVector): DenseVector", "member" : "org.apache.spark.ml.linalg.Matrix.multiply", "link" : "org\/apache\/spark\/ml\/linalg\/SparseMatrix.html#multiply(y:org.apache.spark.ml.linalg.DenseVector):org.apache.spark.ml.linalg.DenseVector", "kind" : "def"}, {"label" : "multiply", "tail" : "(y: DenseMatrix): DenseMatrix", "member" : "org.apache.spark.ml.linalg.Matrix.multiply", "link" : "org\/apache\/spark\/ml\/linalg\/SparseMatrix.html#multiply(y:org.apache.spark.ml.linalg.DenseMatrix):org.apache.spark.ml.linalg.DenseMatrix", "kind" : "def"}, {"label" : "rowIter", "tail" : "(): Iterator[Vector]", "member" : "org.apache.spark.ml.linalg.Matrix.rowIter", "link" : "org\/apache\/spark\/ml\/linalg\/SparseMatrix.html#rowIter:Iterator[org.apache.spark.ml.linalg.Vector]", "kind" : "def"}, {"label" : "toArray", "tail" : "(): Array[Double]", "member" : "org.apache.spark.ml.linalg.Matrix.toArray", "link" : "org\/apache\/spark\/ml\/linalg\/SparseMatrix.html#toArray:Array[Double]", "kind" : "def"}, {"label" : "synchronized", "tail" : "(arg0: ⇒ T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "org\/apache\/spark\/ml\/linalg\/SparseMatrix.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "org\/apache\/spark\/ml\/linalg\/SparseMatrix.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "org\/apache\/spark\/ml\/linalg\/SparseMatrix.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "org\/apache\/spark\/ml\/linalg\/SparseMatrix.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "org\/apache\/spark\/ml\/linalg\/SparseMatrix.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "org\/apache\/spark\/ml\/linalg\/SparseMatrix.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "org\/apache\/spark\/ml\/linalg\/SparseMatrix.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "org\/apache\/spark\/ml\/linalg\/SparseMatrix.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "org\/apache\/spark\/ml\/linalg\/SparseMatrix.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "org\/apache\/spark\/ml\/linalg\/SparseMatrix.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "org\/apache\/spark\/ml\/linalg\/SparseMatrix.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "org\/apache\/spark\/ml\/linalg\/SparseMatrix.html#notify():Unit", "kind" : "final def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "org\/apache\/spark\/ml\/linalg\/SparseMatrix.html#clone():Object", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_]", "member" : "scala.AnyRef.getClass", "link" : "org\/apache\/spark\/ml\/linalg\/SparseMatrix.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "org\/apache\/spark\/ml\/linalg\/SparseMatrix.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "org\/apache\/spark\/ml\/linalg\/SparseMatrix.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "members_object" : [{"label" : "spdiag", "tail" : "(vector: Vector): SparseMatrix", "member" : "org.apache.spark.ml.linalg.SparseMatrix.spdiag", "link" : "org\/apache\/spark\/ml\/linalg\/SparseMatrix$.html#spdiag(vector:org.apache.spark.ml.linalg.Vector):org.apache.spark.ml.linalg.SparseMatrix", "kind" : "def"}, {"label" : "sprandn", "tail" : "(numRows: Int, numCols: Int, density: Double, rng: Random): SparseMatrix", "member" : "org.apache.spark.ml.linalg.SparseMatrix.sprandn", "link" : "org\/apache\/spark\/ml\/linalg\/SparseMatrix$.html#sprandn(numRows:Int,numCols:Int,density:Double,rng:java.util.Random):org.apache.spark.ml.linalg.SparseMatrix", "kind" : "def"}, {"label" : "sprand", "tail" : "(numRows: Int, numCols: Int, density: Double, rng: Random): SparseMatrix", "member" : "org.apache.spark.ml.linalg.SparseMatrix.sprand", "link" : "org\/apache\/spark\/ml\/linalg\/SparseMatrix$.html#sprand(numRows:Int,numCols:Int,density:Double,rng:java.util.Random):org.apache.spark.ml.linalg.SparseMatrix", "kind" : "def"}, {"label" : "speye", "tail" : "(n: Int): SparseMatrix", "member" : "org.apache.spark.ml.linalg.SparseMatrix.speye", "link" : "org\/apache\/spark\/ml\/linalg\/SparseMatrix$.html#speye(n:Int):org.apache.spark.ml.linalg.SparseMatrix", "kind" : "def"}, {"label" : "fromCOO", "tail" : "(numRows: Int, numCols: Int, entries: Iterable[(Int, Int, Double)]): SparseMatrix", "member" : "org.apache.spark.ml.linalg.SparseMatrix.fromCOO", "link" : "org\/apache\/spark\/ml\/linalg\/SparseMatrix$.html#fromCOO(numRows:Int,numCols:Int,entries:Iterable[(Int,Int,Double)]):org.apache.spark.ml.linalg.SparseMatrix", "kind" : "def"}, {"label" : "synchronized", "tail" : "(arg0: ⇒ T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "org\/apache\/spark\/ml\/linalg\/SparseMatrix$.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "org\/apache\/spark\/ml\/linalg\/SparseMatrix$.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "org\/apache\/spark\/ml\/linalg\/SparseMatrix$.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "org\/apache\/spark\/ml\/linalg\/SparseMatrix$.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "org\/apache\/spark\/ml\/linalg\/SparseMatrix$.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "org\/apache\/spark\/ml\/linalg\/SparseMatrix$.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "org\/apache\/spark\/ml\/linalg\/SparseMatrix$.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "org\/apache\/spark\/ml\/linalg\/SparseMatrix$.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "org\/apache\/spark\/ml\/linalg\/SparseMatrix$.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "org\/apache\/spark\/ml\/linalg\/SparseMatrix$.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "org\/apache\/spark\/ml\/linalg\/SparseMatrix$.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "org\/apache\/spark\/ml\/linalg\/SparseMatrix$.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "org\/apache\/spark\/ml\/linalg\/SparseMatrix$.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "org\/apache\/spark\/ml\/linalg\/SparseMatrix$.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.equals", "link" : "org\/apache\/spark\/ml\/linalg\/SparseMatrix$.html#equals(x$1:Any):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "org\/apache\/spark\/ml\/linalg\/SparseMatrix$.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_]", "member" : "scala.AnyRef.getClass", "link" : "org\/apache\/spark\/ml\/linalg\/SparseMatrix$.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "org\/apache\/spark\/ml\/linalg\/SparseMatrix$.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "org\/apache\/spark\/ml\/linalg\/SparseMatrix$.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "class" : "org\/apache\/spark\/ml\/linalg\/SparseMatrix.html", "kind" : "class"}, {"name" : "org.apache.spark.ml.linalg.SparseVector", "shortDescription" : "A sparse vector represented by an index array and a value array.", "object" : "org\/apache\/spark\/ml\/linalg\/SparseVector$.html", "members_class" : [{"label" : "argmax", "tail" : "(): Int", "member" : "org.apache.spark.ml.linalg.SparseVector.argmax", "link" : "org\/apache\/spark\/ml\/linalg\/SparseVector.html#argmax:Int", "kind" : "def"}, {"label" : "numNonzeros", "tail" : "(): Int", "member" : "org.apache.spark.ml.linalg.SparseVector.numNonzeros", "link" : "org\/apache\/spark\/ml\/linalg\/SparseVector.html#numNonzeros:Int", "kind" : "def"}, {"label" : "numActives", "tail" : "(): Int", "member" : "org.apache.spark.ml.linalg.SparseVector.numActives", "link" : "org\/apache\/spark\/ml\/linalg\/SparseVector.html#numActives:Int", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "org.apache.spark.ml.linalg.SparseVector.hashCode", "link" : "org\/apache\/spark\/ml\/linalg\/SparseVector.html#hashCode():Int", "kind" : "def"}, {"label" : "equals", "tail" : "(other: Any): Boolean", "member" : "org.apache.spark.ml.linalg.SparseVector.equals", "link" : "org\/apache\/spark\/ml\/linalg\/SparseVector.html#equals(other:Any):Boolean", "kind" : "def"}, {"label" : "apply", "tail" : "(i: Int): Double", "member" : "org.apache.spark.ml.linalg.SparseVector.apply", "link" : "org\/apache\/spark\/ml\/linalg\/SparseVector.html#apply(i:Int):Double", "kind" : "def"}, {"label" : "copy", "tail" : "(): SparseVector", "member" : "org.apache.spark.ml.linalg.SparseVector.copy", "link" : "org\/apache\/spark\/ml\/linalg\/SparseVector.html#copy:org.apache.spark.ml.linalg.SparseVector", "kind" : "def"}, {"label" : "toArray", "tail" : "(): Array[Double]", "member" : "org.apache.spark.ml.linalg.SparseVector.toArray", "link" : "org\/apache\/spark\/ml\/linalg\/SparseVector.html#toArray:Array[Double]", "kind" : "def"}, {"label" : "toString", "tail" : "(): String", "member" : "org.apache.spark.ml.linalg.SparseVector.toString", "link" : "org\/apache\/spark\/ml\/linalg\/SparseVector.html#toString():String", "kind" : "def"}, {"member" : "org.apache.spark.ml.linalg.SparseVector#<init>", "error" : "unsupported entity"}, {"label" : "values", "tail" : ": Array[Double]", "member" : "org.apache.spark.ml.linalg.SparseVector.values", "link" : "org\/apache\/spark\/ml\/linalg\/SparseVector.html#values:Array[Double]", "kind" : "val"}, {"label" : "indices", "tail" : ": Array[Int]", "member" : "org.apache.spark.ml.linalg.SparseVector.indices", "link" : "org\/apache\/spark\/ml\/linalg\/SparseVector.html#indices:Array[Int]", "kind" : "val"}, {"label" : "size", "tail" : ": Int", "member" : "org.apache.spark.ml.linalg.SparseVector.size", "link" : "org\/apache\/spark\/ml\/linalg\/SparseVector.html#size:Int", "kind" : "val"}, {"label" : "dot", "tail" : "(v: Vector): Double", "member" : "org.apache.spark.ml.linalg.Vector.dot", "link" : "org\/apache\/spark\/ml\/linalg\/SparseVector.html#dot(v:org.apache.spark.ml.linalg.Vector):Double", "kind" : "def"}, {"label" : "compressed", "tail" : "(): Vector", "member" : "org.apache.spark.ml.linalg.Vector.compressed", "link" : "org\/apache\/spark\/ml\/linalg\/SparseVector.html#compressed:org.apache.spark.ml.linalg.Vector", "kind" : "def"}, {"label" : "toDense", "tail" : "(): DenseVector", "member" : "org.apache.spark.ml.linalg.Vector.toDense", "link" : "org\/apache\/spark\/ml\/linalg\/SparseVector.html#toDense:org.apache.spark.ml.linalg.DenseVector", "kind" : "def"}, {"label" : "toSparse", "tail" : "(): SparseVector", "member" : "org.apache.spark.ml.linalg.Vector.toSparse", "link" : "org\/apache\/spark\/ml\/linalg\/SparseVector.html#toSparse:org.apache.spark.ml.linalg.SparseVector", "kind" : "def"}, {"label" : "foreachActive", "tail" : "(f: (Int, Double) ⇒ Unit): Unit", "member" : "org.apache.spark.ml.linalg.Vector.foreachActive", "link" : "org\/apache\/spark\/ml\/linalg\/SparseVector.html#foreachActive(f:(Int,Double)=>Unit):Unit", "kind" : "def"}, {"label" : "synchronized", "tail" : "(arg0: ⇒ T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "org\/apache\/spark\/ml\/linalg\/SparseVector.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "org\/apache\/spark\/ml\/linalg\/SparseVector.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "org\/apache\/spark\/ml\/linalg\/SparseVector.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "org\/apache\/spark\/ml\/linalg\/SparseVector.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "org\/apache\/spark\/ml\/linalg\/SparseVector.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "org\/apache\/spark\/ml\/linalg\/SparseVector.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "org\/apache\/spark\/ml\/linalg\/SparseVector.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "org\/apache\/spark\/ml\/linalg\/SparseVector.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "org\/apache\/spark\/ml\/linalg\/SparseVector.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "org\/apache\/spark\/ml\/linalg\/SparseVector.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "org\/apache\/spark\/ml\/linalg\/SparseVector.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "org\/apache\/spark\/ml\/linalg\/SparseVector.html#notify():Unit", "kind" : "final def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "org\/apache\/spark\/ml\/linalg\/SparseVector.html#clone():Object", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_]", "member" : "scala.AnyRef.getClass", "link" : "org\/apache\/spark\/ml\/linalg\/SparseVector.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "org\/apache\/spark\/ml\/linalg\/SparseVector.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "org\/apache\/spark\/ml\/linalg\/SparseVector.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "members_object" : [{"label" : "unapply", "tail" : "(sv: SparseVector): Option[(Int, Array[Int], Array[Double])]", "member" : "org.apache.spark.ml.linalg.SparseVector.unapply", "link" : "org\/apache\/spark\/ml\/linalg\/SparseVector$.html#unapply(sv:org.apache.spark.ml.linalg.SparseVector):Option[(Int,Array[Int],Array[Double])]", "kind" : "def"}, {"label" : "synchronized", "tail" : "(arg0: ⇒ T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "org\/apache\/spark\/ml\/linalg\/SparseVector$.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "org\/apache\/spark\/ml\/linalg\/SparseVector$.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "org\/apache\/spark\/ml\/linalg\/SparseVector$.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "org\/apache\/spark\/ml\/linalg\/SparseVector$.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "org\/apache\/spark\/ml\/linalg\/SparseVector$.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "org\/apache\/spark\/ml\/linalg\/SparseVector$.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "org\/apache\/spark\/ml\/linalg\/SparseVector$.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "org\/apache\/spark\/ml\/linalg\/SparseVector$.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "org\/apache\/spark\/ml\/linalg\/SparseVector$.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "org\/apache\/spark\/ml\/linalg\/SparseVector$.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "org\/apache\/spark\/ml\/linalg\/SparseVector$.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "org\/apache\/spark\/ml\/linalg\/SparseVector$.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "org\/apache\/spark\/ml\/linalg\/SparseVector$.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "org\/apache\/spark\/ml\/linalg\/SparseVector$.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.equals", "link" : "org\/apache\/spark\/ml\/linalg\/SparseVector$.html#equals(x$1:Any):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "org\/apache\/spark\/ml\/linalg\/SparseVector$.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_]", "member" : "scala.AnyRef.getClass", "link" : "org\/apache\/spark\/ml\/linalg\/SparseVector$.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "org\/apache\/spark\/ml\/linalg\/SparseVector$.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "org\/apache\/spark\/ml\/linalg\/SparseVector$.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "class" : "org\/apache\/spark\/ml\/linalg\/SparseVector.html", "kind" : "class"}, {"name" : "org.apache.spark.ml.linalg.Vector", "members_trait" : [{"label" : "dot", "tail" : "(v: Vector): Double", "member" : "org.apache.spark.ml.linalg.Vector.dot", "link" : "org\/apache\/spark\/ml\/linalg\/Vector.html#dot(v:org.apache.spark.ml.linalg.Vector):Double", "kind" : "def"}, {"label" : "compressed", "tail" : "(): Vector", "member" : "org.apache.spark.ml.linalg.Vector.compressed", "link" : "org\/apache\/spark\/ml\/linalg\/Vector.html#compressed:org.apache.spark.ml.linalg.Vector", "kind" : "def"}, {"label" : "toDense", "tail" : "(): DenseVector", "member" : "org.apache.spark.ml.linalg.Vector.toDense", "link" : "org\/apache\/spark\/ml\/linalg\/Vector.html#toDense:org.apache.spark.ml.linalg.DenseVector", "kind" : "def"}, {"label" : "toSparse", "tail" : "(): SparseVector", "member" : "org.apache.spark.ml.linalg.Vector.toSparse", "link" : "org\/apache\/spark\/ml\/linalg\/Vector.html#toSparse:org.apache.spark.ml.linalg.SparseVector", "kind" : "def"}, {"label" : "foreachActive", "tail" : "(f: (Int, Double) ⇒ Unit): Unit", "member" : "org.apache.spark.ml.linalg.Vector.foreachActive", "link" : "org\/apache\/spark\/ml\/linalg\/Vector.html#foreachActive(f:(Int,Double)=>Unit):Unit", "kind" : "def"}, {"label" : "copy", "tail" : "(): Vector", "member" : "org.apache.spark.ml.linalg.Vector.copy", "link" : "org\/apache\/spark\/ml\/linalg\/Vector.html#copy:org.apache.spark.ml.linalg.Vector", "kind" : "def"}, {"label" : "apply", "tail" : "(i: Int): Double", "member" : "org.apache.spark.ml.linalg.Vector.apply", "link" : "org\/apache\/spark\/ml\/linalg\/Vector.html#apply(i:Int):Double", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "org.apache.spark.ml.linalg.Vector.hashCode", "link" : "org\/apache\/spark\/ml\/linalg\/Vector.html#hashCode():Int", "kind" : "def"}, {"label" : "equals", "tail" : "(other: Any): Boolean", "member" : "org.apache.spark.ml.linalg.Vector.equals", "link" : "org\/apache\/spark\/ml\/linalg\/Vector.html#equals(other:Any):Boolean", "kind" : "def"}, {"label" : "synchronized", "tail" : "(arg0: ⇒ T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "org\/apache\/spark\/ml\/linalg\/Vector.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "org\/apache\/spark\/ml\/linalg\/Vector.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "org\/apache\/spark\/ml\/linalg\/Vector.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "org\/apache\/spark\/ml\/linalg\/Vector.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "org\/apache\/spark\/ml\/linalg\/Vector.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "org\/apache\/spark\/ml\/linalg\/Vector.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "org\/apache\/spark\/ml\/linalg\/Vector.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "org\/apache\/spark\/ml\/linalg\/Vector.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "org\/apache\/spark\/ml\/linalg\/Vector.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "org\/apache\/spark\/ml\/linalg\/Vector.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "org\/apache\/spark\/ml\/linalg\/Vector.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "org\/apache\/spark\/ml\/linalg\/Vector.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "org\/apache\/spark\/ml\/linalg\/Vector.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "org\/apache\/spark\/ml\/linalg\/Vector.html#clone():Object", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_]", "member" : "scala.AnyRef.getClass", "link" : "org\/apache\/spark\/ml\/linalg\/Vector.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "org\/apache\/spark\/ml\/linalg\/Vector.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "org\/apache\/spark\/ml\/linalg\/Vector.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}, {"label" : "argmax", "tail" : "(): Int", "member" : "org.apache.spark.ml.linalg.Vector.argmax", "link" : "org\/apache\/spark\/ml\/linalg\/Vector.html#argmax:Int", "kind" : "abstract def"}, {"label" : "numNonzeros", "tail" : "(): Int", "member" : "org.apache.spark.ml.linalg.Vector.numNonzeros", "link" : "org\/apache\/spark\/ml\/linalg\/Vector.html#numNonzeros:Int", "kind" : "abstract def"}, {"label" : "numActives", "tail" : "(): Int", "member" : "org.apache.spark.ml.linalg.Vector.numActives", "link" : "org\/apache\/spark\/ml\/linalg\/Vector.html#numActives:Int", "kind" : "abstract def"}, {"label" : "toArray", "tail" : "(): Array[Double]", "member" : "org.apache.spark.ml.linalg.Vector.toArray", "link" : "org\/apache\/spark\/ml\/linalg\/Vector.html#toArray:Array[Double]", "kind" : "abstract def"}, {"label" : "size", "tail" : "(): Int", "member" : "org.apache.spark.ml.linalg.Vector.size", "link" : "org\/apache\/spark\/ml\/linalg\/Vector.html#size:Int", "kind" : "abstract def"}], "shortDescription" : "Represents a numeric vector, whose index type is Int and value type is Double.", "trait" : "org\/apache\/spark\/ml\/linalg\/Vector.html", "kind" : "trait"}, {"name" : "org.apache.spark.ml.linalg.Vectors", "shortDescription" : "Factory methods for org.apache.spark.ml.linalg.Vector.", "object" : "org\/apache\/spark\/ml\/linalg\/Vectors$.html", "members_object" : [{"label" : "sqdist", "tail" : "(v1: Vector, v2: Vector): Double", "member" : "org.apache.spark.ml.linalg.Vectors.sqdist", "link" : "org\/apache\/spark\/ml\/linalg\/Vectors$.html#sqdist(v1:org.apache.spark.ml.linalg.Vector,v2:org.apache.spark.ml.linalg.Vector):Double", "kind" : "def"}, {"label" : "norm", "tail" : "(vector: Vector, p: Double): Double", "member" : "org.apache.spark.ml.linalg.Vectors.norm", "link" : "org\/apache\/spark\/ml\/linalg\/Vectors$.html#norm(vector:org.apache.spark.ml.linalg.Vector,p:Double):Double", "kind" : "def"}, {"label" : "zeros", "tail" : "(size: Int): Vector", "member" : "org.apache.spark.ml.linalg.Vectors.zeros", "link" : "org\/apache\/spark\/ml\/linalg\/Vectors$.html#zeros(size:Int):org.apache.spark.ml.linalg.Vector", "kind" : "def"}, {"label" : "sparse", "tail" : "(size: Int, elements: Iterable[(Integer, Double)]): Vector", "member" : "org.apache.spark.ml.linalg.Vectors.sparse", "link" : "org\/apache\/spark\/ml\/linalg\/Vectors$.html#sparse(size:Int,elements:Iterable[(Integer,Double)]):org.apache.spark.ml.linalg.Vector", "kind" : "def"}, {"label" : "sparse", "tail" : "(size: Int, elements: Seq[(Int, Double)]): Vector", "member" : "org.apache.spark.ml.linalg.Vectors.sparse", "link" : "org\/apache\/spark\/ml\/linalg\/Vectors$.html#sparse(size:Int,elements:Seq[(Int,Double)]):org.apache.spark.ml.linalg.Vector", "kind" : "def"}, {"label" : "sparse", "tail" : "(size: Int, indices: Array[Int], values: Array[Double]): Vector", "member" : "org.apache.spark.ml.linalg.Vectors.sparse", "link" : "org\/apache\/spark\/ml\/linalg\/Vectors$.html#sparse(size:Int,indices:Array[Int],values:Array[Double]):org.apache.spark.ml.linalg.Vector", "kind" : "def"}, {"label" : "dense", "tail" : "(values: Array[Double]): Vector", "member" : "org.apache.spark.ml.linalg.Vectors.dense", "link" : "org\/apache\/spark\/ml\/linalg\/Vectors$.html#dense(values:Array[Double]):org.apache.spark.ml.linalg.Vector", "kind" : "def"}, {"label" : "dense", "tail" : "(firstValue: Double, otherValues: Double*): Vector", "member" : "org.apache.spark.ml.linalg.Vectors.dense", "link" : "org\/apache\/spark\/ml\/linalg\/Vectors$.html#dense(firstValue:Double,otherValues:Double*):org.apache.spark.ml.linalg.Vector", "kind" : "def"}, {"label" : "synchronized", "tail" : "(arg0: ⇒ T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "org\/apache\/spark\/ml\/linalg\/Vectors$.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "org\/apache\/spark\/ml\/linalg\/Vectors$.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "org\/apache\/spark\/ml\/linalg\/Vectors$.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "org\/apache\/spark\/ml\/linalg\/Vectors$.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "org\/apache\/spark\/ml\/linalg\/Vectors$.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "org\/apache\/spark\/ml\/linalg\/Vectors$.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "org\/apache\/spark\/ml\/linalg\/Vectors$.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "org\/apache\/spark\/ml\/linalg\/Vectors$.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "org\/apache\/spark\/ml\/linalg\/Vectors$.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "org\/apache\/spark\/ml\/linalg\/Vectors$.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "org\/apache\/spark\/ml\/linalg\/Vectors$.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "org\/apache\/spark\/ml\/linalg\/Vectors$.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "org\/apache\/spark\/ml\/linalg\/Vectors$.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "org\/apache\/spark\/ml\/linalg\/Vectors$.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.equals", "link" : "org\/apache\/spark\/ml\/linalg\/Vectors$.html#equals(x$1:Any):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "org\/apache\/spark\/ml\/linalg\/Vectors$.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_]", "member" : "scala.AnyRef.getClass", "link" : "org\/apache\/spark\/ml\/linalg\/Vectors$.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "org\/apache\/spark\/ml\/linalg\/Vectors$.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "org\/apache\/spark\/ml\/linalg\/Vectors$.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "kind" : "object"}], "org.apache.spark" : [], "org.apache" : [], "scala" : [], "org.apache.spark.ml" : [], "scala.collection.compat" : [], "org.apache.spark.ml.stat" : [], "org" : []};